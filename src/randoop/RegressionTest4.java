import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap1 = null;
        cSVManager0.loadParkingLots(strMap1);
        cSVManager0.updateClientValidation("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList6 = cSVManager0.loadClients();
// flaky "1) test2001(RegressionTest4)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.User user15 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj19 = parkingSpaceProxy16.login("empty", "Jane");
        parkingSpaceProxy16.validateClient("Jane");
        parkingSpaceProxy16.toggleSpace("", "staff", false);
        boolean boolean27 = parkingSpaceProxy16.cancelBooking("");
        user15.assignProxy(parkingSpaceProxy16);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj32 = parkingSpaceProxy29.login("empty", "Jane");
        parkingSpaceProxy29.validateClient("Jane");
        parkingSpaceProxy29.toggleSpace("", "staff", false);
        boolean boolean40 = parkingSpaceProxy29.cancelBooking("");
        boolean boolean46 = parkingSpaceProxy29.register("jane", "jane", "Jane", "hi!", "disabled");
        user15.parkingProxy = parkingSpaceProxy29;
        superManager4.assignProxy(parkingSpaceProxy29);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry50 = parkingSpaceProxy49.getRegistry();
        boolean boolean56 = parkingSpaceProxy49.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean59 = parkingSpaceProxy49.extendBooking("pass", (int) (byte) 10);
        ParkingSystem.AccountRegistry accountRegistry60 = parkingSpaceProxy49.getRegistry();
        superManager4.assignProxy(parkingSpaceProxy49);
        org.junit.Assert.assertNotNull(superManager4);
// flaky "2) test2002(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str5, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(accountRegistry50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(accountRegistry60);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap4 = bookingManager0.getActiveBookings();
        ParkingSystem.Booking booking6 = bookingManager0.getBooking("Refunded total cost of $100.0");
        boolean boolean8 = bookingManager0.cancelBooking("Jane");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap9 = bookingManager0.getActiveBookings();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(booking6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = null;
        accountRegistry3.assignProxyToManager("disabled", parkingSpaceProxy6);
        ParkingSystem.Manager manager8 = accountRegistry3.autoGenerateManager();
        java.lang.String str9 = manager8.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(manager8);
// flaky "3) test2004(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "0K5j4sX8PY" + "'", str9, "0K5j4sX8PY");
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.toggleSpace("jane", "Paid $ -1.0 with Mobile Pay", false);
        boolean boolean8 = parkingSpaceProxy0.checkOut("Paid $ 0.0 with Mobile Pay");
        parkingSpaceProxy0.validateClient("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        parkingSpaceProxy0.toggleLot("02659ad3-0b5c-4c48-a915-a466f2b50775", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        boolean boolean13 = parkingSpaceProxy0.register("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "13b04414-31a5-407f-8ea3-fba4613c73d1", "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "jane", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (short) 1);
        spaceManager0.toggleSpace("hi!", "Paid $ 15.0 with Mobile Pay", false);
        spaceManager0.loadParkingLots();
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        boolean boolean11 = paymentManager0.refundDeposit(0.0d);
        java.lang.String str12 = paymentManager0.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Refunded deposit of $0.0" + "'", str12, "Refunded deposit of $0.0");
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Jane", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 100, "jane", (int) (short) 1, "pass", (double) 10);
        java.lang.String str8 = booking7.getLotId();
        boolean boolean9 = booking7.isCheckedIn();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str8, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) ' ', "Refunded total cost of $-1.0", (int) 'a', "staff", (double) (byte) 10);
        java.lang.String str8 = booking7.getLotId();
        java.lang.String str9 = booking7.getLotId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c" + "'", str8, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c" + "'", str9, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        boolean boolean23 = bookingManager18.extendBooking("Paid $ 0.0 with Mobile Pay", (int) 'a', "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        double double25 = bookingManager18.getHourlyRate("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        ParkingSystem.SpaceManager spaceManager26 = bookingManager18.getSpaceManager();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
// flaky "4) test2011(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 15.0d + "'", double25 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager26);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj17 = parkingSpaceProxy14.login("empty", "Jane");
        parkingSpaceProxy14.validateClient("Jane");
        parkingSpaceProxy14.toggleSpace("", "staff", false);
        boolean boolean25 = parkingSpaceProxy14.cancelBooking("");
        boolean boolean31 = parkingSpaceProxy14.register("jane", "jane", "Jane", "hi!", "disabled");
        user0.parkingProxy = parkingSpaceProxy14;
        parkingSpaceProxy14.displayPendingValidations();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.Disabled disabled21 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace22 = null;
        java.lang.String str23 = disabled21.scanSpace(parkingSpace22);
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot26 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking28 = null;
        boolean boolean29 = parkingLot26.assignBooking(0, booking28);
        boolean boolean31 = parkingLot26.isSpaceAvailable((int) '#');
        boolean boolean33 = parkingLot26.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace35 = parkingLot26.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking36 = parkingSpace35.getCurrentBooking();
        parkingSpace35.removeBooking();
        java.lang.String str38 = enabled24.scanSpace(parkingSpace35);
        ParkingSystem.ParkingLot parkingLot40 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking42 = null;
        boolean boolean43 = parkingLot40.assignBooking(0, booking42);
        boolean boolean45 = parkingLot40.isSpaceAvailable((int) '#');
        boolean boolean47 = parkingLot40.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace49 = parkingLot40.getParkingSpace((int) (byte) 10);
        int int50 = parkingSpace49.getSpaceId();
        ParkingSystem.Booking booking51 = parkingSpace49.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = parkingSpace49.assignBooking(booking68);
        java.lang.String str71 = enabled24.scanSpace(parkingSpace49);
        java.lang.String str72 = disabled21.scanSpace(parkingSpace49);
        user0.user = str72;
        user0.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "Jane", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Client client80 = ParkingSystem.Client.getInstance();
        java.lang.String str81 = client80.getName();
        java.lang.String str82 = client80.getClientId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy83 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj86 = parkingSpaceProxy83.login("empty", "Jane");
        parkingSpaceProxy83.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        client80.assignProxy(parkingSpaceProxy83);
        user0.user = parkingSpaceProxy83;
        boolean boolean96 = parkingSpaceProxy83.editBooking("", "empty", 0);
        boolean boolean98 = parkingSpaceProxy83.checkOut("89de8237-29df-4908-9de4-6dc1ce90de94");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpace35);
        org.junit.Assert.assertNull(booking36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "empty" + "'", str38, "empty");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(parkingSpace49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNull(booking51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "disabled" + "'", str71, "disabled");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "disabled" + "'", str72, "disabled");
        org.junit.Assert.assertNotNull(client80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str81, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
// flaky "5) test2013(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e" + "'", str82, "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        client0.assignProxy(parkingSpaceProxy17);
        parkingSpaceProxy17.validateClient("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        parkingSpaceProxy17.toggleLot("empty", true);
        parkingSpaceProxy17.addParkingLot("");
        parkingSpaceProxy17.addParkingLot("CLT-df8d594d-9b12-496d-b1b5-eec06c37337a");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("pass");
        ParkingSystem.SpaceManager spaceManager3 = new ParkingSystem.SpaceManager();
        spaceManager3.toggleLot("Jane", false);
        spaceManager3.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        boolean boolean15 = spaceManager12.isSpaceAvailable("hi!", (int) '#');
        spaceManager12.toggleLot("disabled", false);
        ParkingSystem.Booking booking28 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean29 = spaceManager12.assignBooking("empty", (int) (short) 0, booking28);
        boolean boolean30 = spaceManager3.assignBooking("hi!", 0, booking28);
        double double31 = booking28.getTotalCost();
        booking28.setDuration((-1));
        java.lang.String str34 = booking28.getLotId();
        boolean boolean35 = parkingLot1.assignBooking(1, booking28);
        java.lang.String str36 = booking28.getClientId();
        int int37 = booking28.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "jane" + "'", str34, "jane");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "staff" + "'", str36, "staff");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        ParkingSystem.Booking booking3 = client0.getBookingDetails();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj13 = parkingSpaceProxy10.login("empty", "Jane");
        parkingSpaceProxy10.validateClient("Jane");
        parkingSpaceProxy10.toggleSpace("", "staff", false);
        accountRegistry8.assignProxyToManager("pass", parkingSpaceProxy10);
        ParkingSystem.Client client22 = accountRegistry8.getClient("");
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry8);
        boolean boolean29 = accountRegistry8.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy31.getRegistry();
        boolean boolean34 = parkingSpaceProxy31.checkIn("");
        parkingSpaceProxy31.toggleLot("", true);
        accountRegistry8.assignProxyToManager("", parkingSpaceProxy31);
        client0.assignProxy(parkingSpaceProxy31);
        java.lang.String str40 = client0.getUsername();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str2, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Refunded total cost of $1.0" + "'", str40, "Refunded total cost of $1.0");
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        boolean boolean50 = booking48.isCheckedIn();
        java.lang.String str51 = booking48.getClientId();
        boolean boolean52 = parkingSpace10.assignBooking(booking48);
        boolean boolean53 = booking48.isCheckedIn();
        int int54 = booking48.getSpaceId();
        boolean boolean55 = booking48.isCheckedIn();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "staff" + "'", str51, "staff");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        accountRegistry1.assignProxyToManager("pass", parkingSpaceProxy3);
        ParkingSystem.Client client15 = accountRegistry1.getClient("");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj20 = parkingSpaceProxy17.login("empty", "Jane");
        boolean boolean23 = parkingSpaceProxy17.extendBooking("pass", 0);
        boolean boolean25 = parkingSpaceProxy17.checkOut("Paid $ 10.0 with Mobile Pay");
        java.lang.String str28 = parkingSpaceProxy17.scanSpace("hi!", "Jane");
        boolean boolean30 = parkingSpaceProxy17.cancelBooking("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean32 = parkingSpaceProxy17.checkIn("86z9Z9e0MN");
        boolean boolean35 = parkingSpaceProxy17.extendBooking("staff", (int) (short) -1);
        accountRegistry1.assignProxyToClient("Refunded total cost of $100.0", parkingSpaceProxy17);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade37 = parkingSpaceProxy17.getFacade();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "disabled" + "'", str28, "disabled");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade37);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        java.lang.String str16 = parkingSpaceProxy1.scanSpace("jane", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        boolean boolean18 = parkingSpaceProxy1.checkIn("09622cbf-e665-45db-b1ad-365065947a20");
        java.lang.String str21 = parkingSpaceProxy1.scanSpace("disabled", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "disabled" + "'", str21, "disabled");
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        java.lang.String[] strArray30 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade31 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager32 = parkingSpaceFacade31.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager32.getParkingLots();
        cSVManager0.saveParkingLots(strMap33);
        ParkingSystem.BookingManager bookingManager35 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager36 = new ParkingSystem.CheckInManager(bookingManager35);
        ParkingSystem.SpaceManager spaceManager37 = bookingManager35.getSpaceManager();
        double double40 = bookingManager35.calculateCost("", (int) (byte) 10);
        ParkingSystem.SpaceManager spaceManager41 = bookingManager35.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap42 = spaceManager41.getParkingLots();
        cSVManager0.saveParkingLots(strMap42);
        cSVManager0.updateClientValidation("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", false);
        ParkingSystem.CSVManager cSVManager47 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray48 = cSVManager47.loadSuperManager();
        java.lang.String[] strArray49 = cSVManager47.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade50 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager51 = parkingSpaceFacade50.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap52 = spaceManager51.getParkingLots();
        cSVManager47.saveParkingLots(strMap52);
        ParkingSystem.SpaceManager spaceManager54 = new ParkingSystem.SpaceManager();
        boolean boolean57 = spaceManager54.isSpaceAvailable("hi!", (int) '#');
        spaceManager54.toggleLot("disabled", false);
        ParkingSystem.Booking booking70 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean71 = spaceManager54.assignBooking("empty", (int) (short) 0, booking70);
        spaceManager54.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap75 = spaceManager54.getParkingLots();
        cSVManager47.loadParkingLots(strMap75);
        java.lang.String[] strArray77 = cSVManager47.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade78 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager79 = parkingSpaceFacade78.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager80 = parkingSpaceFacade78.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap81 = spaceManager80.getParkingLots();
        cSVManager47.saveParkingLots(strMap81);
        cSVManager0.saveParkingLots(strMap81);
        org.junit.Assert.assertNotNull(strArray1);
// flaky "6) test2020(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "1) test2020(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
// flaky "1) test2020(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(spaceManager37);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 165.0d + "'", double40 == 165.0d);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strArray48);
// flaky "1) test2020(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray48, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray49);
// flaky "1) test2020(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray49, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strArray77);
// flaky "1) test2020(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray77, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(checkInManager79);
        org.junit.Assert.assertNotNull(spaceManager80);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        parkingSpaceFacade0.addParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.CheckInManager checkInManager4 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean6 = checkInManager4.checkIn("CLT-22138484-eb59-490e-9c41-9fd9c319dcda");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(checkInManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.cancelBooking();
        boolean boolean11 = client0.getIsValidated();
        java.lang.String str12 = client0.getPassword();
        ParkingSystem.Booking booking13 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
// flaky "7) test2022(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertNull(booking13);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.User user21 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj25 = parkingSpaceProxy22.login("empty", "Jane");
        parkingSpaceProxy22.validateClient("Jane");
        parkingSpaceProxy22.toggleSpace("", "staff", false);
        boolean boolean33 = parkingSpaceProxy22.cancelBooking("");
        user21.assignProxy(parkingSpaceProxy22);
        user0.user = parkingSpaceProxy22;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = null;
        user0.assignProxy(parkingSpaceProxy36);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade38 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str41 = parkingSpaceFacade38.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager42 = parkingSpaceFacade38.getSpaceManager();
        parkingSpaceFacade38.toggleLot("Refunded total cost of $1.0", false);
        parkingSpaceFacade38.toggleLot("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", true);
        boolean boolean52 = parkingSpaceFacade38.editBooking("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", 3);
        user0.user = 3;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertNotNull(spaceManager42);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace(0);
        parkingSpace1.removeBooking();
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        java.util.List<java.lang.String[]> strArrayList8 = cSVManager0.readCSV("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Client client9 = ParkingSystem.Client.getInstance();
        java.lang.String str10 = client9.getName();
        client9.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str19 = client9.getUsername();
        java.lang.String str20 = client9.getPassword();
        java.lang.String str21 = client9.getUsername();
        cSVManager0.saveClient(client9);
        boolean boolean23 = client9.cancelBooking();
        java.lang.String str24 = client9.getExtraId();
        java.lang.String str25 = client9.getName();
        ParkingSystem.AccountRegistry accountRegistry29 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager30 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry29);
        boolean boolean32 = accountRegistry29.requiresValidation("disabled");
        int int33 = accountRegistry29.getManagersSize();
        boolean boolean39 = accountRegistry29.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy41 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj44 = parkingSpaceProxy41.login("empty", "Jane");
        parkingSpaceProxy41.validateClient("Jane");
        parkingSpaceProxy41.toggleSpace("", "staff", false);
        boolean boolean52 = parkingSpaceProxy41.cancelBooking("Jane");
        accountRegistry29.assignProxyToClient("pass", parkingSpaceProxy41);
        parkingSpaceProxy41.toggleSpace("empty", "Paid $ 10.0 with Mobile Pay", false);
        client9.assignProxy(parkingSpaceProxy41);
        java.lang.Object obj61 = parkingSpaceProxy41.login("8812812f-8c58-440e-9188-ca0b1f996ced", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList8);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(superManager30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        boolean boolean20 = parkingSpaceProxy3.register("jane", "jane", "Jane", "hi!", "disabled");
        accountRegistry1.assignProxyToManager("empty", parkingSpaceProxy3);
        accountRegistry1.validateClient("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        java.util.List<java.lang.String[]> strArrayList8 = cSVManager0.readCSV("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Client client9 = ParkingSystem.Client.getInstance();
        java.lang.String str10 = client9.getName();
        client9.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str19 = client9.getUsername();
        java.lang.String str20 = client9.getPassword();
        java.lang.String str21 = client9.getUsername();
        cSVManager0.saveClient(client9);
        boolean boolean23 = client9.cancelBooking();
        java.lang.String str24 = client9.getExtraId();
        boolean boolean27 = client9.editBooking("", (int) (short) 0);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList8);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "jane" + "'", str10, "jane");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap19 = bookingManager18.getActiveBookings();
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager18);
        checkInManager20.refundMessage = "CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f";
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        checkInManager1.refundMessage = "";
        boolean boolean5 = checkInManager1.checkOut("Paid $ 10.0 with Mobile Pay");
        checkInManager1.refundMessage = "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff";
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        java.lang.String str12 = manager11.getManagerId();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = user13.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry17 = parkingSpaceProxy16.getRegistry();
        boolean boolean19 = parkingSpaceProxy16.checkIn("");
        parkingSpaceProxy16.validateClient("");
        user13.assignProxy(parkingSpaceProxy16);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = user13.parkingProxy;
        java.lang.Object obj26 = user13.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking29 = parkingSpaceProxy27.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade30 = parkingSpaceProxy27.getFacade();
        boolean boolean32 = parkingSpaceProxy27.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user13.parkingProxy = parkingSpaceProxy27;
        manager11.assignProxy(parkingSpaceProxy27);
        parkingSpaceProxy27.addParkingLot("Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(manager11);
// flaky "8) test2030(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "79e86af2-7061-42df-ba07-6f6ce7f1b89c" + "'", str12, "79e86af2-7061-42df-ba07-6f6ce7f1b89c");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(parkingSpaceProxy15);
        org.junit.Assert.assertNotNull(accountRegistry17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(booking29);
        org.junit.Assert.assertNotNull(parkingSpaceFacade30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager5.getSpaceManager();
        boolean boolean19 = bookingManager5.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double21 = bookingManager5.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit22 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit22);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit22);
        java.lang.String str25 = debitOrCredit22.getPaymentMessage();
        boolean boolean28 = debitOrCredit22.validateCard("8812812f-8c58-440e-9188-ca0b1f996ced", 15.0d);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceProxy4.addParkingLot("Jane");
        boolean boolean15 = parkingSpaceProxy4.editBooking("8812812f-8c58-440e-9188-ca0b1f996ced", "", (int) (byte) 10);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("02659ad3-0b5c-4c48-a915-a466f2b50775");
        org.junit.Assert.assertNotNull(strArray1);
// flaky "9) test2033(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "2) test2033(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList4);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        ParkingSystem.ParkingLot parkingLot7 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking9 = null;
        boolean boolean10 = parkingLot7.assignBooking(0, booking9);
        boolean boolean12 = parkingLot7.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking21 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean22 = parkingLot7.assignBooking((int) (short) -1, booking21);
        booking21.setCheckedIn(false);
        double double25 = booking21.getTotalCost();
        java.lang.String str26 = booking21.getLicensePlate();
        double double27 = booking21.getTotalCost();
        boolean boolean28 = spaceManager0.assignBooking("89de8237-29df-4908-9de4-6dc1ce90de94", (int) (short) 10, booking21);
        booking21.setDuration(10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.ParkingLot parkingLot11 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking13 = null;
        boolean boolean14 = parkingLot11.assignBooking(0, booking13);
        boolean boolean16 = parkingLot11.isSpaceAvailable((int) '#');
        boolean boolean18 = parkingLot11.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace20 = parkingLot11.getParkingSpace((int) (byte) 10);
        int int21 = parkingSpace20.getSpaceId();
        ParkingSystem.Booking booking22 = parkingSpace20.getCurrentBooking();
        java.lang.String str23 = parkingSpace20.scanSpace();
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        parkingSpace20.setState((ParkingSystem.SpaceState) enabled24);
        parkingSpace9.setState((ParkingSystem.SpaceState) enabled24);
        ParkingSystem.ParkingLot parkingLot28 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator29 = parkingLot28.getIterator();
        ParkingSystem.Booking booking31 = null;
        boolean boolean32 = parkingLot28.assignBooking((int) (short) 1, booking31);
        ParkingSystem.ParkingSpace parkingSpace34 = parkingLot28.getParkingSpace((int) ' ');
        java.lang.String str35 = enabled24.scanSpace(parkingSpace34);
        ParkingSystem.ParkingLot parkingLot37 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking39 = null;
        boolean boolean40 = parkingLot37.assignBooking(0, booking39);
        boolean boolean42 = parkingLot37.isSpaceAvailable((int) '#');
        boolean boolean44 = parkingLot37.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace46 = parkingLot37.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking47 = parkingSpace46.getCurrentBooking();
        ParkingSystem.Disabled disabled48 = new ParkingSystem.Disabled();
        parkingSpace46.setState((ParkingSystem.SpaceState) disabled48);
        int int50 = parkingSpace46.getSpaceId();
        java.lang.String str51 = enabled24.scanSpace(parkingSpace46);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parkingSpace20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "empty" + "'", str23, "empty");
        org.junit.Assert.assertNotNull(parkingLotIterator29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(parkingSpace34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "empty" + "'", str35, "empty");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(parkingSpace46);
        org.junit.Assert.assertNull(booking47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "empty" + "'", str51, "empty");
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        parkingSpaceFacade0.addParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", false);
        boolean boolean10 = parkingSpaceFacade0.extendBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", (int) (byte) 100);
        ParkingSystem.CheckInManager checkInManager11 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean21 = parkingSpaceFacade0.confirmBooking("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "Card number should be 16 digits", "13b04414-31a5-407f-8ea3-fba4613c73d1", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c", 32, "", (int) (short) 10, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Refunded total cost of $0.0");
        java.lang.String str24 = parkingSpaceFacade0.scanSpace("Jane", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(checkInManager11);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "disabled" + "'", str24, "disabled");
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        java.lang.String str14 = client0.getUsername();
        ParkingSystem.Booking booking15 = client0.getBookingDetails();
        java.lang.String str16 = client0.getClientType();
        boolean boolean19 = client0.editBooking("Refunded total cost of $1.0", (int) (byte) 100);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking((int) ' ');
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(0);
        boolean boolean13 = parkingLot1.isSpaceAvailable((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean6 = paymentManager0.processPayment("pass", (double) 1, "Paid $ 10.0 with Mobile Pay", "Jane");
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) 100);
        boolean boolean11 = paymentManager0.refundTotalCost((double) (short) 100);
        paymentManager0.paymentMessage = "CLT-035180a0-4707-410d-a011-2a4f0f46838b";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.Booking booking2 = bookingManager0.getBooking("Refunded total cost of $100.0");
        ParkingSystem.AccountRegistry accountRegistry3 = bookingManager0.getAccountRegistry();
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(accountRegistry3);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = parkingLot10.assignBooking((int) (short) -1, booking24);
        java.lang.String str26 = booking24.getLotId();
        boolean boolean27 = parkingLot1.assignBooking(0, booking24);
        booking24.setDuration(4);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace(10);
        boolean boolean2 = parkingSpace1.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        boolean boolean6 = paymentManager0.refundDeposit((double) 1);
        paymentManager0.paymentMessage = "Paid $ 10.0 with Mobile Pay";
        ParkingSystem.BookingManager bookingManager9 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager10 = new ParkingSystem.CheckInManager(bookingManager9);
        ParkingSystem.SpaceManager spaceManager11 = bookingManager9.getSpaceManager();
        double double14 = bookingManager9.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit15 = new ParkingSystem.DebitOrCredit();
        bookingManager9.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit15);
        boolean boolean21 = debitOrCredit15.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str22 = debitOrCredit15.getPaymentMessage();
        boolean boolean27 = debitOrCredit15.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean30 = debitOrCredit15.validateCard("Jane", (double) '4');
        java.lang.String str31 = debitOrCredit15.getPaymentMessage();
        boolean boolean36 = debitOrCredit15.processPayment("02659ad3-0b5c-4c48-a915-a466f2b50775", 0.0d, "TXCrKOGD", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit15);
        boolean boolean40 = debitOrCredit15.validateCard("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", (double) (byte) 1);
        java.lang.String str41 = debitOrCredit15.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(spaceManager11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 165.0d + "'", double14 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Card number should be 16 digits" + "'", str22, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Card number should be 16 digits" + "'", str31, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Card number should be 16 digits" + "'", str41, "Card number should be 16 digits");
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        cSVManager0.updateClientValidation("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList8 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str8 = booking7.getLotId();
        double double9 = booking7.getTotalCost();
        int int10 = booking7.getDuration();
        int int11 = booking7.getDuration();
        double double12 = booking7.getTotalCost();
        booking7.setDuration(100);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "jane" + "'", str8, "jane");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.ParkingLot parkingLot11 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking13 = null;
        boolean boolean14 = parkingLot11.assignBooking(0, booking13);
        boolean boolean16 = parkingLot11.isSpaceAvailable((int) '#');
        boolean boolean18 = parkingLot11.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace20 = parkingLot11.getParkingSpace((int) (byte) 10);
        int int21 = parkingSpace20.getSpaceId();
        ParkingSystem.Booking booking22 = parkingSpace20.getCurrentBooking();
        java.lang.String str23 = parkingSpace20.scanSpace();
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        parkingSpace20.setState((ParkingSystem.SpaceState) enabled24);
        parkingSpace9.setState((ParkingSystem.SpaceState) enabled24);
        ParkingSystem.Enabled enabled27 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot29 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking31 = null;
        boolean boolean32 = parkingLot29.assignBooking(0, booking31);
        boolean boolean34 = parkingLot29.isSpaceAvailable((int) '#');
        boolean boolean36 = parkingLot29.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace38 = parkingLot29.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking39 = parkingSpace38.getCurrentBooking();
        parkingSpace38.removeBooking();
        java.lang.String str41 = enabled27.scanSpace(parkingSpace38);
        ParkingSystem.ParkingLot parkingLot43 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking45 = null;
        boolean boolean46 = parkingLot43.assignBooking(0, booking45);
        boolean boolean48 = parkingLot43.isSpaceAvailable((int) '#');
        boolean boolean50 = parkingLot43.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace52 = parkingLot43.getParkingSpace((int) (byte) 10);
        int int53 = parkingSpace52.getSpaceId();
        ParkingSystem.Booking booking54 = parkingSpace52.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager55 = new ParkingSystem.SpaceManager();
        boolean boolean58 = spaceManager55.isSpaceAvailable("hi!", (int) '#');
        spaceManager55.toggleLot("disabled", false);
        ParkingSystem.Booking booking71 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean72 = spaceManager55.assignBooking("empty", (int) (short) 0, booking71);
        boolean boolean73 = parkingSpace52.assignBooking(booking71);
        java.lang.String str74 = enabled27.scanSpace(parkingSpace52);
        java.lang.String str75 = enabled24.scanSpace(parkingSpace52);
        ParkingSystem.Booking booking83 = new ParkingSystem.Booking("Jane", "Refunded without deposit ($-42.0)", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (short) 10, "Paid $ -1.0 with Mobile Pay", (double) (short) 10);
        booking83.setCheckedIn(true);
        boolean boolean86 = parkingSpace52.assignBooking(booking83);
        java.lang.String str87 = booking83.getStartTime();
        int int88 = booking83.getSpaceId();
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime89 = booking83.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text '7aecb00c-028c-4dcf-96cc-14d25bd709ab' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parkingSpace20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "empty" + "'", str23, "empty");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(parkingSpace38);
        org.junit.Assert.assertNull(booking39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "empty" + "'", str41, "empty");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(parkingSpace52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNull(booking54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "disabled" + "'", str74, "disabled");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "disabled" + "'", str75, "disabled");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str87, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        java.lang.String str6 = spaceManager0.scanSpace("hi!", "disabled");
        spaceManager0.addParkingLot("Card number should be 16 digits");
        ParkingSystem.ParkingLot parkingLot12 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = parkingLot12.assignBooking(0, booking14);
        boolean boolean17 = parkingLot12.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean27 = parkingLot12.assignBooking((int) (short) -1, booking26);
        java.lang.String str28 = booking26.getLotId();
        int int29 = booking26.getDuration();
        int int30 = booking26.getSpaceId();
        boolean boolean31 = spaceManager0.assignBooking("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) (byte) 1, booking26);
        java.lang.String str32 = booking26.getLotId();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "jane" + "'", str28, "jane");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "jane" + "'", str32, "jane");
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        boolean boolean16 = accountRegistry6.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj21 = parkingSpaceProxy18.login("empty", "Jane");
        parkingSpaceProxy18.validateClient("Jane");
        parkingSpaceProxy18.toggleSpace("", "staff", false);
        boolean boolean29 = parkingSpaceProxy18.cancelBooking("Jane");
        accountRegistry6.assignProxyToClient("pass", parkingSpaceProxy18);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap31 = accountRegistry6.getManagers();
        ParkingSystem.SuperManager superManager32 = ParkingSystem.SuperManager.createFromCSV("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "Refunded without deposit ($0.0)", "Refunded without deposit ($-42.0)", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap33 = accountRegistry6.getManagers();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap34 = accountRegistry6.getManagers();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(superManager32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        boolean boolean17 = debitOrCredit6.processPayment("86z9Z9e0MN", (double) 1, "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        java.lang.String str18 = debitOrCredit6.getPaymentMessage();
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Card number should be 16 digits" + "'", str18, "Card number should be 16 digits");
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade1.checkIn("");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade1.getBookingManager();
        parkingSpaceFacade1.toggleLot("Paid $ -1.0 with Mobile Pay", false);
        user0.user = "Paid $ -1.0 with Mobile Pay";
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = null;
        user0.parkingProxy = parkingSpaceProxy9;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(bookingManager4);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        java.lang.String str14 = client0.getUsername();
        java.lang.String str15 = client0.getPassword();
        java.lang.String str16 = client0.getUsername();
        boolean boolean17 = client0.cancelBooking();
        java.lang.String str18 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        java.lang.Object obj18 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking22 = parkingSpaceProxy20.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy20.getRegistry();
        java.lang.String str26 = parkingSpaceProxy20.scanSpace("staff", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        ParkingSystem.Booking booking28 = parkingSpaceProxy20.getBookingDetails("ST001");
        user0.parkingProxy = parkingSpaceProxy20;
        ParkingSystem.User user30 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj34 = parkingSpaceProxy31.login("empty", "Jane");
        parkingSpaceProxy31.validateClient("Jane");
        parkingSpaceProxy31.toggleSpace("", "staff", false);
        boolean boolean42 = parkingSpaceProxy31.cancelBooking("");
        user30.assignProxy(parkingSpaceProxy31);
        java.lang.Object obj46 = parkingSpaceProxy31.login("disabled", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        parkingSpaceProxy31.displayPendingValidations();
        java.lang.String str50 = parkingSpaceProxy31.scanSpace("", "Jane");
        boolean boolean52 = parkingSpaceProxy31.checkIn("");
        user0.assignProxy(parkingSpaceProxy31);
        boolean boolean57 = parkingSpaceProxy31.editBooking("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", "h40rNQ7kR1", (int) (short) 0);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertNull(booking28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        boolean boolean9 = parkingLotIterator7.hasNext();
        boolean boolean10 = parkingLotIterator7.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        boolean boolean10 = parkingLot1.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot1.getParkingSpace((int) (short) 10);
        ParkingSystem.ParkingLot parkingLot14 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking16 = null;
        boolean boolean17 = parkingLot14.assignBooking(0, booking16);
        boolean boolean19 = parkingLot14.isSpaceAvailable((int) '#');
        boolean boolean21 = parkingLot14.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace23 = parkingLot14.getParkingSpace((int) (byte) 10);
        int int24 = parkingSpace23.getSpaceId();
        ParkingSystem.Booking booking25 = parkingSpace23.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager26 = new ParkingSystem.SpaceManager();
        boolean boolean29 = spaceManager26.isSpaceAvailable("hi!", (int) '#');
        spaceManager26.toggleLot("disabled", false);
        ParkingSystem.Booking booking42 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean43 = spaceManager26.assignBooking("empty", (int) (short) 0, booking42);
        boolean boolean44 = parkingSpace23.assignBooking(booking42);
        ParkingSystem.SpaceManager spaceManager45 = new ParkingSystem.SpaceManager();
        boolean boolean48 = spaceManager45.isSpaceAvailable("hi!", (int) '#');
        spaceManager45.toggleLot("disabled", false);
        ParkingSystem.Booking booking61 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean62 = spaceManager45.assignBooking("empty", (int) (short) 0, booking61);
        boolean boolean63 = booking61.isCheckedIn();
        java.lang.String str64 = booking61.getClientId();
        boolean boolean65 = parkingSpace23.assignBooking(booking61);
        ParkingSystem.SpaceState spaceState66 = parkingSpace23.getState();
        parkingSpace12.setState(spaceState66);
        ParkingSystem.Booking booking68 = parkingSpace12.getCurrentBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(parkingSpace23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNull(booking25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "staff" + "'", str64, "staff");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(spaceState66);
        org.junit.Assert.assertNull(booking68);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap16 = accountRegistry14.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        java.lang.String str22 = parkingSpaceProxy18.scanSpace("empty", "hi!");
        boolean boolean32 = parkingSpaceProxy18.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy18.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean42 = parkingSpaceProxy18.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry14.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy18);
        accountRegistry6.assignProxyToManager("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        ParkingSystem.SuperManager superManager45 = ParkingSystem.SuperManager.createFromCSV("hi!", "hi!", "pass", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry49 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager50 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry49);
        java.lang.String str51 = superManager50.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry52 = superManager50.registry;
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap53 = accountRegistry52.getManagers();
        ParkingSystem.Client client55 = ParkingSystem.Client.getInstance();
        java.lang.String str56 = client55.getName();
        client55.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str65 = client55.getUsername();
        java.lang.String str66 = client55.getPassword();
        java.lang.String str67 = client55.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy68 = null;
        client55.assignProxy(parkingSpaceProxy68);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy70 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj73 = parkingSpaceProxy70.login("empty", "Jane");
        client55.assignProxy(parkingSpaceProxy70);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy75 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking77 = parkingSpaceProxy75.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry78 = parkingSpaceProxy75.getRegistry();
        parkingSpaceProxy75.autoGenerateManager();
        client55.assignProxy(parkingSpaceProxy75);
        boolean boolean84 = parkingSpaceProxy75.editBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded total cost of $100.0", (int) (byte) 0);
        accountRegistry52.assignProxyToManager("Paid $ 100.0 with Mobile Pay", parkingSpaceProxy75);
        superManager45.registry = accountRegistry52;
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry52.loadManagersFromCSV();
// flaky "10) test2055(RegressionTest4)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(superManager45);
        org.junit.Assert.assertNotNull(superManager50);
// flaky "3) test2055(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str51, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(client55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "jane" + "'", str56, "jane");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(booking77);
        org.junit.Assert.assertNotNull(accountRegistry78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        parkingSpace10.removeBooking();
        parkingSpace10.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        client0.setClientInfo("Jane", "", "pass", "pass", "pass", "hi!", true);
        java.lang.String str10 = client0.getName();
        java.lang.String str11 = client0.getExtraId();
        boolean boolean12 = client0.getIsValidated();
        ParkingSystem.Booking booking13 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(booking13);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager1 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.MobilePay mobilePay2 = new ParkingSystem.MobilePay();
        java.lang.String str3 = mobilePay2.getPaymentMessage();
        boolean boolean8 = mobilePay2.processPayment("Jane", 10.0d, "empty", "jane");
        bookingManager1.setPaymentStrategy((ParkingSystem.Strategy) mobilePay2);
        boolean boolean14 = mobilePay2.processPayment("empty", (double) 32, "Refunded total cost of $-1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean19 = mobilePay2.processPayment("CLT-390234b0-d56e-4275-bd7b-122280609c69", (double) (byte) 100, "", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167");
        boolean boolean24 = mobilePay2.processPayment("hi!", 1470.0d, "Refunded total cost of $100.0", "Refunded total cost of $0.0");
        org.junit.Assert.assertNotNull(bookingManager1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        boolean boolean10 = parkingLot1.isEnabled();
        boolean boolean12 = parkingLot1.isSpaceAvailable((int) (short) -1);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot1.getParkingSpace(32);
        boolean boolean15 = parkingSpace14.isAvailable();
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.Booking booking20 = null;
        boolean boolean21 = parkingLot17.assignBooking((int) (short) 1, booking20);
        parkingLot17.removeBooking((int) (short) 0);
        parkingLot17.removeBooking(10);
        ParkingSystem.ParkingSpace parkingSpace27 = parkingLot17.getParkingSpace(32);
        ParkingSystem.ParkingLot parkingLot29 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking31 = null;
        boolean boolean32 = parkingLot29.assignBooking(0, booking31);
        boolean boolean34 = parkingLot29.isSpaceAvailable((int) '#');
        boolean boolean36 = parkingLot29.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace38 = parkingLot29.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking39 = parkingSpace38.getCurrentBooking();
        ParkingSystem.Booking booking40 = parkingSpace38.getCurrentBooking();
        ParkingSystem.Disabled disabled41 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace42 = null;
        java.lang.String str43 = disabled41.scanSpace(parkingSpace42);
        ParkingSystem.ParkingSpace parkingSpace44 = null;
        java.lang.String str45 = disabled41.scanSpace(parkingSpace44);
        parkingSpace38.setState((ParkingSystem.SpaceState) disabled41);
        ParkingSystem.SpaceState spaceState47 = parkingSpace38.getState();
        parkingSpace27.setState(spaceState47);
        parkingSpace14.setState(spaceState47);
        ParkingSystem.ParkingLot parkingLot51 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking53 = null;
        boolean boolean54 = parkingLot51.assignBooking(0, booking53);
        boolean boolean56 = parkingLot51.isSpaceAvailable((int) '#');
        boolean boolean58 = parkingLot51.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace60 = parkingLot51.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking61 = parkingSpace60.getCurrentBooking();
        java.lang.String str62 = parkingSpace60.scanSpace();
        parkingSpace60.removeBooking();
        ParkingSystem.Booking booking64 = parkingSpace60.getCurrentBooking();
        java.lang.String str65 = spaceState47.scanSpace(parkingSpace60);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(parkingSpace27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(parkingSpace38);
        org.junit.Assert.assertNull(booking39);
        org.junit.Assert.assertNull(booking40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "disabled" + "'", str43, "disabled");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "disabled" + "'", str45, "disabled");
        org.junit.Assert.assertNotNull(spaceState47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(parkingSpace60);
        org.junit.Assert.assertNull(booking61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "empty" + "'", str62, "empty");
        org.junit.Assert.assertNull(booking64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "disabled" + "'", str65, "disabled");
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("721fcb72-c57d-4e99-81b7-06e4c7e1ed40");
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        java.util.List<java.lang.String[]> strArrayList25 = cSVManager0.readCSV("Jane");
        ParkingSystem.AccountRegistry accountRegistry35 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager36 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry35);
        boolean boolean38 = accountRegistry35.requiresValidation("disabled");
        int int39 = accountRegistry35.getManagersSize();
        ParkingSystem.SuperManager superManager40 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry35);
        ParkingSystem.AccountRegistry accountRegistry41 = superManager40.getRegistry();
        accountRegistry41.validateClient("pass");
        ParkingSystem.SuperManager superManager44 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry41);
        cSVManager0.saveManager((ParkingSystem.Manager) superManager44);
        ParkingSystem.Client client46 = ParkingSystem.Client.getInstance();
        java.lang.String str47 = client46.getName();
        client46.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy50 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry51 = parkingSpaceProxy50.getRegistry();
        boolean boolean53 = parkingSpaceProxy50.checkIn("");
        client46.assignProxy(parkingSpaceProxy50);
        boolean boolean55 = client46.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy56 = new ParkingSystem.ParkingSpaceProxy();
        client46.assignProxy(parkingSpaceProxy56);
        ParkingSystem.Booking booking58 = client46.getBookingDetails();
        java.lang.String str59 = client46.getClientId();
        boolean boolean60 = client46.getIsValidated();
        cSVManager0.saveClient(client46);
        ParkingSystem.AccountRegistry accountRegistry68 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager69 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry68);
        ParkingSystem.AccountRegistry accountRegistry73 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager74 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry73);
        superManager69.registry = accountRegistry73;
        ParkingSystem.Client client77 = accountRegistry73.getClient("empty");
        boolean boolean83 = accountRegistry73.registerClient("Paid $ -1.0 with Mobile Pay", "jane", "hi!", "Refunded total cost of $1.0", "");
        ParkingSystem.SuperManager superManager84 = ParkingSystem.SuperManager.createFromCSV("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", accountRegistry73);
        cSVManager0.saveManager((ParkingSystem.Manager) superManager84);
        org.junit.Assert.assertNotNull(strArray1);
// flaky "11) test2061(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "4) test2061(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strArrayList25);
        org.junit.Assert.assertNotNull(superManager36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(superManager40);
        org.junit.Assert.assertNotNull(accountRegistry41);
        org.junit.Assert.assertNotNull(superManager44);
        org.junit.Assert.assertNotNull(client46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "empty" + "'", str47, "empty");
        org.junit.Assert.assertNotNull(accountRegistry51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(booking58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "pass" + "'", str59, "pass");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(superManager69);
        org.junit.Assert.assertNotNull(superManager74);
        org.junit.Assert.assertNull(client77);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(superManager84);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        java.lang.String str29 = superManager28.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = null;
        accountRegistry33.assignProxyToManager("disabled", parkingSpaceProxy36);
        superManager28.registry = accountRegistry33;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager28);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade40 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str43 = parkingSpaceFacade40.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager44 = parkingSpaceFacade40.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap45 = spaceManager44.getParkingLots();
        cSVManager0.saveParkingLots(strMap45);
        ParkingSystem.CSVManager cSVManager47 = new ParkingSystem.CSVManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap48 = null;
        cSVManager47.loadParkingLots(strMap48);
        java.lang.String[] strArray50 = cSVManager47.loadSuperManager();
        ParkingSystem.BookingManager bookingManager51 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager52 = new ParkingSystem.CheckInManager(bookingManager51);
        ParkingSystem.SpaceManager spaceManager53 = bookingManager51.getSpaceManager();
        double double56 = bookingManager51.calculateCost("", (int) (byte) 10);
        ParkingSystem.SpaceManager spaceManager57 = bookingManager51.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap58 = spaceManager57.getParkingLots();
        cSVManager47.saveParkingLots(strMap58);
        cSVManager0.saveParkingLots(strMap58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList61 = cSVManager0.loadManagers();
// flaky "12) test2062(RegressionTest4)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "5) test2062(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "2) test2062(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str4, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str14, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager28);
// flaky "2) test2062(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str29, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "disabled" + "'", str43, "disabled");
        org.junit.Assert.assertNotNull(spaceManager44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strArray50);
// flaky "2) test2062(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray50, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager53);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 165.0d + "'", double56 == 165.0d);
        org.junit.Assert.assertNotNull(spaceManager57);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy0.toggleLot("hi!", false);
        parkingSpaceProxy0.validateClient("3b453211-7dd1-4452-8741-a206711c1217");
        boolean boolean14 = parkingSpaceProxy0.checkIn("qMzKSKOI");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("hi!", 795.0d, "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "86z9Z9e0MN");
        boolean boolean23 = debitOrCredit6.processPayment("83a51dc6-0c8f-4f21-ae40-68699828f95d", (double) 10L, "Refunded without deposit ($1.0)", "h40rNQ7kR1");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = parkingSpaceProxy0.getFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        checkInManager2.refundMessage = "Paid $ -1.0 with Mobile Pay";
        java.lang.String str5 = checkInManager2.refundMessage;
        org.junit.Assert.assertNotNull(parkingSpaceFacade1);
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str5, "Paid $ -1.0 with Mobile Pay");
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.Booking booking18 = bookingManager0.getBooking("13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNull(booking18);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        java.lang.String str22 = superManager21.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager21.registry;
        java.lang.String str24 = superManager21.getManagerId();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        superManager21.assignProxy(parkingSpaceProxy35);
        user0.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry39 = parkingSpaceProxy35.getRegistry();
        java.lang.String str42 = parkingSpaceProxy35.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj45 = parkingSpaceProxy35.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade46 = parkingSpaceProxy35.getFacade();
        parkingSpaceFacade46.toggleLot("Paid $ 100.0 with Mobile Pay", false);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
// flaky "13) test2067(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str22, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry23);
// flaky "6) test2067(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str24, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "empty" + "'", str26, "empty");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "disabled" + "'", str42, "disabled");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(parkingSpaceFacade46);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.SpaceManager spaceManager14 = new ParkingSystem.SpaceManager();
        boolean boolean17 = spaceManager14.isSpaceAvailable("hi!", (int) '#');
        spaceManager14.toggleLot("disabled", false);
        ParkingSystem.Booking booking30 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean31 = spaceManager14.assignBooking("empty", (int) (short) 0, booking30);
        spaceManager14.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager14.getParkingLots();
        cSVManager0.loadParkingLots(strMap33);
        ParkingSystem.SpaceManager spaceManager35 = new ParkingSystem.SpaceManager();
        boolean boolean38 = spaceManager35.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str41 = spaceManager35.scanSpace("disabled", "");
        spaceManager35.addParkingLot("hi!");
        java.lang.String str46 = spaceManager35.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager35.getParkingLots();
        cSVManager0.saveParkingLots(strMap47);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade49 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str52 = parkingSpaceFacade49.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager53 = parkingSpaceFacade49.getSpaceManager();
        spaceManager53.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap56 = spaceManager53.getParkingLots();
        cSVManager0.saveParkingLots(strMap56);
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        spaceManager58.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap79 = spaceManager58.getParkingLots();
        cSVManager0.saveParkingLots(strMap79);
        java.util.List<java.lang.String[]> strArrayList82 = cSVManager0.readCSV("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertNotNull(spaceManager53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strArrayList82);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.BookingManager bookingManager5 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.AccountRegistry accountRegistry6 = bookingManager5.getAccountRegistry();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(bookingManager5);
        org.junit.Assert.assertNotNull(accountRegistry6);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        double double21 = bookingManager18.calculateCost("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) (byte) 10);
        double double23 = bookingManager18.getHourlyRate("qPYDfDnbtD");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 165.0d + "'", double21 == 165.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 15.0d + "'", double23 == 15.0d);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str6 = mobilePay0.getPaymentMessage();
        java.lang.String str7 = mobilePay0.getPaymentMessage();
        boolean boolean12 = mobilePay0.processPayment("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", 1.0d, "disabled", "Refunded without deposit ($0.0)");
        java.lang.String str13 = mobilePay0.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str6, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str7, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 1.0 with Mobile Pay" + "'", str13, "Paid $ 1.0 with Mobile Pay");
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        boolean boolean11 = client2.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        client2.assignProxy(parkingSpaceProxy12);
        ParkingSystem.AccountRegistry accountRegistry14 = parkingSpaceProxy12.getRegistry();
        boolean boolean16 = parkingSpaceProxy12.checkIn("hi!");
        user0.parkingProxy = parkingSpaceProxy12;
        user0.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        user0.register("9fJ5pCUl", "Refunded total cost of $10.0", "02659ad3-0b5c-4c48-a915-a466f2b50775", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "empty" + "'", str3, "empty");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(accountRegistry14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        paymentManager0.paymentMessage = "Paid $ 10.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (byte) 1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        spaceManager0.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean14 = paymentManager0.processPayment("hi!", (double) 0.0f, "empty", "Paid $ 10.0 with Mobile Pay");
        paymentManager0.paymentMessage = "tbHxuilT";
        paymentManager0.paymentMessage = "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded total cost of $1.0" + "'", str7, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        java.lang.String str13 = client0.getName();
        java.lang.String str14 = client0.getExtraId();
        boolean boolean22 = client0.confirmBooking("Card number should be 16 digits", "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", (int) (byte) 100, "Paid $ 1.0 with Mobile Pay", (int) (byte) 1, "Jane", "CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "9fJ5pCUl" + "'", str1, "9fJ5pCUl");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Disabled disabled13 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace14 = null;
        java.lang.String str15 = disabled13.scanSpace(parkingSpace14);
        ParkingSystem.ParkingSpace parkingSpace16 = null;
        java.lang.String str17 = disabled13.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) disabled13);
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        boolean boolean27 = parkingLot20.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot20.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking30 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        parkingSpace29.removeBooking();
        java.lang.String str33 = disabled13.scanSpace(parkingSpace29);
        ParkingSystem.SpaceState spaceState34 = parkingSpace29.getState();
        int int35 = parkingSpace29.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "disabled" + "'", str33, "disabled");
        org.junit.Assert.assertNotNull(spaceState34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.SpaceManager spaceManager7 = bookingManager5.getSpaceManager();
        double double10 = bookingManager5.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit11 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit11);
        boolean boolean17 = debitOrCredit11.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit11);
        boolean boolean20 = paymentManager0.refundTotalCost((double) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 165.0d + "'", double10 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean29 = paymentManager0.refundDeposit(0.0d);
        boolean boolean34 = paymentManager0.processPayment("8ca2ec61-774c-409d-89d5-5b9171b40497", (double) 1, "", "9fJ5pCUl");
        paymentManager0.refundMessage = "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("disabled", 100);
        java.lang.String str6 = spaceManager0.scanSpace("Refunded total cost of $-1.0", "");
        spaceManager0.loadParkingLots();
        spaceManager0.toggleLot("433f3d1f-f758-4ae3-972b-7fb179aedfd7", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str8 = booking7.getLotId();
        java.lang.String str9 = booking7.getStartTime();
        booking7.setDuration((int) (byte) -1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "jane" + "'", str8, "jane");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Jane" + "'", str9, "Jane");
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        ParkingSystem.ParkingLot parkingLot53 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking55 = null;
        boolean boolean56 = parkingLot53.assignBooking(0, booking55);
        boolean boolean58 = parkingLot53.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator59 = parkingLot53.getIterator();
        parkingLot53.removeBooking(0);
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLot53.getParkingSpace(0);
        java.lang.String str64 = disabled0.scanSpace(parkingSpace63);
        ParkingSystem.ParkingLot parkingLot66 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking68 = null;
        boolean boolean69 = parkingLot66.assignBooking(0, booking68);
        boolean boolean71 = parkingLot66.isSpaceAvailable((int) '#');
        boolean boolean73 = parkingLot66.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace75 = parkingLot66.getParkingSpace((int) (byte) 10);
        int int76 = parkingSpace75.getSpaceId();
        parkingSpace75.removeBooking();
        java.lang.String str78 = disabled0.scanSpace(parkingSpace75);
        ParkingSystem.Booking booking86 = new ParkingSystem.Booking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) ' ', "Refunded total cost of $-1.0", (int) 'a', "staff", (double) (byte) 10);
        boolean boolean87 = parkingSpace75.assignBooking(booking86);
        int int88 = parkingSpace75.getSpaceId();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator59);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "disabled" + "'", str64, "disabled");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(parkingSpace75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "disabled" + "'", str78, "disabled");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.Booking booking19 = bookingManager0.getBooking("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        double double21 = bookingManager0.getDeposit("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(booking19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        boolean boolean17 = parkingLot10.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace19 = parkingLot10.getParkingSpace((int) (byte) 10);
        int int20 = parkingSpace19.getSpaceId();
        ParkingSystem.Booking booking21 = parkingSpace19.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager22 = new ParkingSystem.SpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("hi!", (int) '#');
        spaceManager22.toggleLot("disabled", false);
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = spaceManager22.assignBooking("empty", (int) (short) 0, booking38);
        boolean boolean40 = parkingSpace19.assignBooking(booking38);
        ParkingSystem.SpaceManager spaceManager41 = new ParkingSystem.SpaceManager();
        boolean boolean44 = spaceManager41.isSpaceAvailable("hi!", (int) '#');
        spaceManager41.toggleLot("disabled", false);
        ParkingSystem.Booking booking57 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean58 = spaceManager41.assignBooking("empty", (int) (short) 0, booking57);
        boolean boolean59 = booking57.isCheckedIn();
        java.lang.String str60 = booking57.getClientId();
        boolean boolean61 = parkingSpace19.assignBooking(booking57);
        boolean boolean62 = parkingLot1.assignBooking(1, booking57);
        int int63 = booking57.getDuration();
        int int64 = booking57.getDuration();
        int int65 = booking57.getDuration();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(parkingSpace19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNull(booking21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "staff" + "'", str60, "staff");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 32 + "'", int64 == 32);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        java.lang.String str23 = parkingSpaceProxy15.scanSpace("", "");
        parkingSpaceProxy15.toggleSpace("", "disabled", true);
        user13.parkingProxy = parkingSpaceProxy15;
        ParkingSystem.ParkingLot parkingLot30 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator31 = parkingLot30.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator32 = parkingLot30.getIterator();
        user13.user = parkingLot30;
        ParkingSystem.User user34 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj38 = parkingSpaceProxy35.login("empty", "Jane");
        parkingSpaceProxy35.validateClient("Jane");
        parkingSpaceProxy35.toggleSpace("", "staff", false);
        boolean boolean46 = parkingSpaceProxy35.cancelBooking("");
        user34.assignProxy(parkingSpaceProxy35);
        user13.user = parkingSpaceProxy35;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = user13.parkingProxy;
        client0.assignProxy(parkingSpaceProxy49);
        boolean boolean51 = client0.cancelBooking();
        java.lang.String str52 = client0.getName();
        java.lang.String str53 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator31);
        org.junit.Assert.assertNotNull(parkingLotIterator32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean29 = paymentManager0.refundDeposit(0.0d);
        boolean boolean34 = paymentManager0.processPayment("8ca2ec61-774c-409d-89d5-5b9171b40497", (double) 1, "", "9fJ5pCUl");
        java.lang.String str35 = paymentManager0.refundMessage;
        ParkingSystem.MobilePay mobilePay36 = new ParkingSystem.MobilePay();
        boolean boolean41 = mobilePay36.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean46 = mobilePay36.processPayment("disabled", (double) (-1), "hi!", "hi!");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay36);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Refunded deposit of $0.0" + "'", str35, "Refunded deposit of $0.0");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.CheckInManager checkInManager3 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean5 = parkingSpaceFacade0.checkIn("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        parkingSpaceFacade0.toggleLot("Refunded without deposit ($1.0)", true);
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(checkInManager3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        boolean boolean11 = paymentManager0.refundDeposit(0.0d);
        boolean boolean14 = paymentManager0.refundWithoutDeposit((double) ' ', (double) (short) 100);
        paymentManager0.paymentMessage = "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa";
        boolean boolean21 = paymentManager0.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", 15.0d, "", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        java.lang.String str22 = paymentManager0.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Refunded without deposit ($-68.0)" + "'", str22, "Refunded without deposit ($-68.0)");
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        ParkingSystem.Booking booking3 = client0.getBookingDetails();
        java.lang.String str4 = client0.getClientId();
        java.lang.String str5 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "disabled" + "'", str1, "disabled");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = null;
        accountRegistry3.assignProxyToManager("disabled", parkingSpaceProxy6);
        ParkingSystem.AccountRegistry accountRegistry12 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager13 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry12);
        java.lang.String str14 = superManager13.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = null;
        accountRegistry18.assignProxyToManager("disabled", parkingSpaceProxy21);
        superManager13.registry = accountRegistry18;
        ParkingSystem.AccountRegistry accountRegistry24 = superManager13.getRegistry();
        ParkingSystem.Manager manager25 = accountRegistry24.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        boolean boolean34 = parkingSpaceProxy27.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy27.toggleLot("hi!", false);
        accountRegistry24.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy27);
        accountRegistry3.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy27);
        boolean boolean45 = accountRegistry3.registerClient("4a1f2343-8b2e-4dea-ba69-efd105414390", "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc", "disabled", "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "8de59b10-a65c-4d90-b56c-a637505ce1de");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager13);
// flaky "14) test2090(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str14, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertNotNull(manager25);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean18 = parkingSpaceProxy0.editBooking("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", (int) (byte) 1);
        parkingSpaceProxy0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", false);
        ParkingSystem.AccountRegistry accountRegistry22 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.Manager manager23 = accountRegistry22.autoGenerateManager();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry22);
        org.junit.Assert.assertNotNull(manager23);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        parkingSpaceFacade0.toggleSpace("Paid $ 10.0 with Mobile Pay", "Refunded total cost of $1.0", true);
        boolean boolean13 = parkingSpaceFacade0.checkIn("staff");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        ParkingSystem.Booking booking10 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int11 = booking10.getDuration();
        java.lang.String str12 = booking10.getClientId();
        booking10.setStartTime("hi!");
        boolean boolean15 = booking10.isCheckedIn();
        java.lang.String str16 = booking10.getLotId();
        int int17 = booking10.getDuration();
        boolean boolean18 = booking10.isCheckedIn();
        boolean boolean19 = parkingLot1.assignBooking((int) ' ', booking10);
        boolean boolean20 = parkingLot1.isEnabled();
        parkingLot1.removeBooking(10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "staff" + "'", str12, "staff");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "jane" + "'", str16, "jane");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("tbHxuilT");
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getUsername();
        client0.setValidated(true);
        java.lang.String str5 = client0.getName();
        java.lang.String str6 = client0.getPassword();
        java.lang.String str7 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
// flaky "15) test2095(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "disabled" + "'", str1, "disabled");
// flaky "7) test2095(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
// flaky "3) test2095(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
// flaky "3) test2095(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        parkingLot1.removeBooking((int) ' ');
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        boolean boolean10 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLotIterator7.next();
        boolean boolean12 = parkingLotIterator7.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy6.getFacade();
        user0.assignProxy(parkingSpaceProxy6);
        java.lang.String str15 = parkingSpaceProxy6.scanSpace("disabled", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        parkingSpaceProxy6.toggleLot("empty", true);
        boolean boolean21 = parkingSpaceProxy6.extendBooking("CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", (int) (byte) 0);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
// flaky "16) test2098(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("pass");
        ParkingSystem.SpaceManager spaceManager3 = new ParkingSystem.SpaceManager();
        spaceManager3.toggleLot("Jane", false);
        spaceManager3.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        boolean boolean15 = spaceManager12.isSpaceAvailable("hi!", (int) '#');
        spaceManager12.toggleLot("disabled", false);
        ParkingSystem.Booking booking28 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean29 = spaceManager12.assignBooking("empty", (int) (short) 0, booking28);
        boolean boolean30 = spaceManager3.assignBooking("hi!", 0, booking28);
        double double31 = booking28.getTotalCost();
        booking28.setDuration((-1));
        java.lang.String str34 = booking28.getLotId();
        boolean boolean35 = parkingLot1.assignBooking(1, booking28);
        double double36 = booking28.getTotalCost();
        booking28.setCheckedIn(true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "jane" + "'", str34, "jane");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        parkingSpaceFacade17.addParkingLot("Paid $ 10.0 with Mobile Pay");
        boolean boolean21 = parkingSpaceFacade17.checkOut("Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
// flaky "17) test2100(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        paymentManager0.paymentMessage = "";
        java.lang.String str13 = paymentManager0.paymentMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        ParkingSystem.BookingManager bookingManager12 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager13 = new ParkingSystem.CheckInManager(bookingManager12);
        ParkingSystem.SpaceManager spaceManager14 = bookingManager12.getSpaceManager();
        double double17 = bookingManager12.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit18 = new ParkingSystem.DebitOrCredit();
        bookingManager12.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit18);
        boolean boolean24 = debitOrCredit18.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str25 = debitOrCredit18.getPaymentMessage();
        java.lang.String str26 = debitOrCredit18.getPaymentMessage();
        boolean boolean31 = debitOrCredit18.processPayment("02659ad3-0b5c-4c48-a915-a466f2b50775", (double) (-1.0f), "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "disabled");
        java.lang.String str32 = debitOrCredit18.getPaymentMessage();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit18);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(spaceManager14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 165.0d + "'", double17 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Card number should be 16 digits" + "'", str25, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Card number should be 16 digits" + "'", str26, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Card number should be 16 digits" + "'", str32, "Card number should be 16 digits");
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", (-1), "Paid $ 10.0 with Mobile Pay", (int) '#', "hi!", 0.0d);
        booking7.setDuration(0);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        java.lang.Object obj30 = accountRegistry3.login("Card number should be 16 digits", "pass");
        int int31 = accountRegistry3.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.User user2 = new ParkingSystem.User();
        java.lang.Object obj3 = user2.user;
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry9 = parkingSpaceProxy8.getRegistry();
        boolean boolean11 = parkingSpaceProxy8.checkIn("");
        client4.assignProxy(parkingSpaceProxy8);
        boolean boolean13 = client4.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        client4.assignProxy(parkingSpaceProxy14);
        ParkingSystem.AccountRegistry accountRegistry16 = parkingSpaceProxy14.getRegistry();
        boolean boolean18 = parkingSpaceProxy14.checkIn("hi!");
        user2.parkingProxy = parkingSpaceProxy14;
        user2.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = user2.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        user2.assignProxy(parkingSpaceProxy27);
        boolean boolean38 = parkingSpaceProxy27.confirmBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "09622cbf-e665-45db-b1ad-365065947a20", "Paid $ 15.0 with Mobile Pay", (int) (byte) -1, "Refunded without deposit ($0.0)", 0, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        user0.assignProxy(parkingSpaceProxy27);
        parkingSpaceProxy27.toggleSpace("Paid $ 15.0 with Mobile Pay", "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3", false);
        parkingSpaceProxy27.addParkingLot("CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "jane" + "'", str5, "jane");
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(accountRegistry16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy26);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        java.lang.String str2 = client0.getClientId();
        ParkingSystem.Booking booking3 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Card number should be 16 digits" + "'", str1, "Card number should be 16 digits");
// flaky "18) test2106(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CLT-7df99776-6818-4843-8c88-c29a926a9d29" + "'", str2, "CLT-7df99776-6818-4843-8c88-c29a926a9d29");
        org.junit.Assert.assertNull(booking3);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        boolean boolean20 = bookingManager18.cancelBooking("disabled");
        ParkingSystem.CheckInManager checkInManager21 = new ParkingSystem.CheckInManager(bookingManager18);
        ParkingSystem.SpaceManager spaceManager22 = bookingManager18.getSpaceManager();
        boolean boolean32 = bookingManager18.confirmBooking("CLT-7df99776-6818-4843-8c88-c29a926a9d29", "pass", "e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", "Refunded without deposit ($-96.0)", (int) (byte) 1, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", 4, "", "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Card number should be 16 digits" + "'", str6, "Card number should be 16 digits");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.Object obj4 = accountRegistry1.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        boolean boolean6 = accountRegistry1.requiresValidation("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        java.lang.Object obj9 = accountRegistry1.login("86z9Z9e0MN", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        ParkingSystem.User user11 = new ParkingSystem.User();
        java.lang.Object obj12 = user11.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj16 = parkingSpaceProxy13.login("empty", "Jane");
        parkingSpaceProxy13.validateClient("Jane");
        java.lang.String str21 = parkingSpaceProxy13.scanSpace("", "");
        parkingSpaceProxy13.toggleSpace("", "disabled", true);
        user11.parkingProxy = parkingSpaceProxy13;
        boolean boolean28 = parkingSpaceProxy13.checkIn("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        accountRegistry1.assignProxyToManager("empty", parkingSpaceProxy13);
        java.lang.Object obj32 = accountRegistry1.login("CLT-92729d37-9255-42b4-9361-c1978aadacb0", "hi!");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "disabled" + "'", str21, "disabled");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Card number should be 16 digits" + "'", str1, "Card number should be 16 digits");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str10, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Card number should be 16 digits" + "'", str11, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Card number should be 16 digits" + "'", str12, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str14, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
// flaky "19) test2109(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CLT-7df99776-6818-4843-8c88-c29a926a9d29" + "'", str15, "CLT-7df99776-6818-4843-8c88-c29a926a9d29");
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        boolean boolean3 = parkingLot1.isSpaceAvailable((int) (short) 0);
        boolean boolean4 = parkingLot1.isEnabled();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Paid $ 100.0 with Mobile Pay", false);
        boolean boolean21 = parkingSpaceFacade0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "4a1f2343-8b2e-4dea-ba69-efd105414390", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "", (int) (byte) 1, "pass", (int) (byte) 10, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager22 = parkingSpaceFacade0.getBookingManager();
        double double24 = bookingManager22.getDeposit("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        ParkingSystem.BookingManager bookingManager25 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager26 = new ParkingSystem.CheckInManager(bookingManager25);
        ParkingSystem.SpaceManager spaceManager27 = bookingManager25.getSpaceManager();
        double double30 = bookingManager25.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit31 = new ParkingSystem.DebitOrCredit();
        bookingManager25.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean37 = debitOrCredit31.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str38 = debitOrCredit31.getPaymentMessage();
        boolean boolean43 = debitOrCredit31.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean46 = debitOrCredit31.validateCard("Jane", (double) '4');
        java.lang.String str47 = debitOrCredit31.getPaymentMessage();
        bookingManager22.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean51 = debitOrCredit31.validateCard("CLT-f5f3129f-6f77-4a04-a68b-486f89449455", (double) '4');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bookingManager22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 165.0d + "'", double30 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Card number should be 16 digits" + "'", str38, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Card number should be 16 digits" + "'", str47, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        ParkingSystem.ParkingLotIterator parkingLotIterator10 = parkingLot1.getIterator();
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int20 = booking19.getDuration();
        java.lang.String str21 = booking19.getClientId();
        booking19.setStartTime("hi!");
        boolean boolean24 = booking19.isCheckedIn();
        java.lang.String str25 = booking19.getLotId();
        boolean boolean26 = parkingLot1.assignBooking((int) '#', booking19);
        boolean boolean28 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.SpaceManager spaceManager30 = new ParkingSystem.SpaceManager();
        boolean boolean33 = spaceManager30.isSpaceAvailable("hi!", (int) '#');
        spaceManager30.toggleLot("disabled", false);
        java.lang.String str39 = spaceManager30.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str42 = spaceManager30.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        ParkingSystem.Booking booking52 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double53 = booking52.getTotalCost();
        boolean boolean54 = spaceManager30.assignBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", 0, booking52);
        boolean boolean55 = parkingLot1.assignBooking((int) (short) 0, booking52);
        boolean boolean57 = parkingLot1.isSpaceAvailable(0);
        boolean boolean59 = parkingLot1.isSpaceAvailable((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "jane" + "'", str25, "jane");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "disabled" + "'", str39, "disabled");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "disabled" + "'", str42, "disabled");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.checkIn();
        client0.setClientInfo("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", true);
        boolean boolean22 = client0.cancelBooking();
        java.lang.String str23 = client0.getPassword();
        boolean boolean24 = client0.cancelBooking();
        java.lang.String str25 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
// flaky "20) test2113(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str23, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str25, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.displayPendingValidations();
        parkingSpaceProxy1.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy1.getFacade();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy1.getRegistry();
        accountRegistry18.validateClient("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.Client client22 = accountRegistry18.getClient("");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertNull(client22);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        boolean boolean16 = accountRegistry6.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj21 = parkingSpaceProxy18.login("empty", "Jane");
        parkingSpaceProxy18.validateClient("Jane");
        parkingSpaceProxy18.toggleSpace("", "staff", false);
        boolean boolean29 = parkingSpaceProxy18.cancelBooking("Jane");
        accountRegistry6.assignProxyToClient("pass", parkingSpaceProxy18);
        boolean boolean32 = accountRegistry6.requiresValidation("empty");
        boolean boolean34 = accountRegistry6.requiresValidation("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        accountRegistry6.validateClient("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.SuperManager superManager37 = ParkingSystem.SuperManager.createFromCSV("disabled", "Paid $ 100.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", accountRegistry6);
        ParkingSystem.Manager manager38 = accountRegistry6.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(superManager37);
        org.junit.Assert.assertNotNull(manager38);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap19 = bookingManager18.getActiveBookings();
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager18);
        double double23 = bookingManager18.calculateCost("CLT-035180a0-4707-410d-a011-2a4f0f46838b", 32);
        double double25 = bookingManager18.getDeposit("CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 495.0d + "'", double23 == 495.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 15.0d + "'", double25 == 15.0d);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        ParkingSystem.Booking booking52 = parkingSpace28.getCurrentBooking();
        int int53 = parkingSpace28.getSpaceId();
        boolean boolean54 = parkingSpace28.isAvailable();
        ParkingSystem.ParkingLot parkingLot56 = new ParkingSystem.ParkingLot("pass");
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        spaceManager58.toggleLot("Jane", false);
        spaceManager58.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager67 = new ParkingSystem.SpaceManager();
        boolean boolean70 = spaceManager67.isSpaceAvailable("hi!", (int) '#');
        spaceManager67.toggleLot("disabled", false);
        ParkingSystem.Booking booking83 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean84 = spaceManager67.assignBooking("empty", (int) (short) 0, booking83);
        boolean boolean85 = spaceManager58.assignBooking("hi!", 0, booking83);
        double double86 = booking83.getTotalCost();
        booking83.setDuration((-1));
        java.lang.String str89 = booking83.getLotId();
        boolean boolean90 = parkingLot56.assignBooking(1, booking83);
        boolean boolean91 = booking83.isCheckedIn();
        boolean boolean92 = booking83.isCheckedIn();
        boolean boolean93 = parkingSpace28.assignBooking(booking83);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertNotNull(booking52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1.0d + "'", double86 == 1.0d);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "jane" + "'", str89, "jane");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        java.lang.String str13 = client0.getName();
        ParkingSystem.User user14 = new ParkingSystem.User();
        java.lang.Object obj15 = user14.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = user14.parkingProxy;
        ParkingSystem.User user17 = new ParkingSystem.User();
        java.lang.Object obj18 = user17.user;
        ParkingSystem.Client client19 = ParkingSystem.Client.getInstance();
        java.lang.String str20 = client19.getName();
        client19.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry24 = parkingSpaceProxy23.getRegistry();
        boolean boolean26 = parkingSpaceProxy23.checkIn("");
        client19.assignProxy(parkingSpaceProxy23);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade28 = parkingSpaceProxy23.getFacade();
        user17.assignProxy(parkingSpaceProxy23);
        user14.parkingProxy = parkingSpaceProxy23;
        ParkingSystem.AccountRegistry accountRegistry34 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager35 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry34);
        java.lang.String str36 = superManager35.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry37 = superManager35.registry;
        java.lang.String str38 = superManager35.getManagerId();
        ParkingSystem.Client client39 = ParkingSystem.Client.getInstance();
        java.lang.String str40 = client39.getName();
        client39.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry44 = parkingSpaceProxy43.getRegistry();
        boolean boolean46 = parkingSpaceProxy43.checkIn("");
        client39.assignProxy(parkingSpaceProxy43);
        boolean boolean48 = client39.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = new ParkingSystem.ParkingSpaceProxy();
        client39.assignProxy(parkingSpaceProxy49);
        superManager35.assignProxy(parkingSpaceProxy49);
        user14.assignProxy(parkingSpaceProxy49);
        ParkingSystem.AccountRegistry accountRegistry53 = parkingSpaceProxy49.getRegistry();
        java.lang.String str56 = parkingSpaceProxy49.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj59 = parkingSpaceProxy49.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade60 = parkingSpaceProxy49.getFacade();
        client0.assignProxy(parkingSpaceProxy49);
        java.lang.String str62 = client0.getUsername();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(parkingSpaceProxy16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade28);
        org.junit.Assert.assertNotNull(superManager35);
// flaky "21) test2118(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str36, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry37);
// flaky "8) test2118(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str38, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(client39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(accountRegistry44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(accountRegistry53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "disabled" + "'", str56, "disabled");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(parkingSpaceFacade60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.checkIn();
        ParkingSystem.Booking booking11 = client0.getBookingDetails();
        boolean boolean12 = client0.getIsValidated();
        client0.setClientInfo("staff", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "Refunded deposit of $0.0", "SRiN5ev00N", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", true);
        java.lang.String str21 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        boolean boolean23 = accountRegistry20.requiresValidation("disabled");
        int int24 = accountRegistry20.getManagersSize();
        boolean boolean30 = accountRegistry20.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj35 = parkingSpaceProxy32.login("empty", "Jane");
        parkingSpaceProxy32.validateClient("Jane");
        parkingSpaceProxy32.toggleSpace("", "staff", false);
        boolean boolean43 = parkingSpaceProxy32.cancelBooking("Jane");
        accountRegistry20.assignProxyToClient("pass", parkingSpaceProxy32);
        parkingSpaceProxy32.autoGenerateManager();
        parkingSpaceProxy32.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        user0.assignProxy(parkingSpaceProxy32);
        java.lang.Object obj51 = user0.user;
        user0.register("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded without deposit ($-42.0)", "Paid $ -1.0 with Mobile Pay", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", "");
        java.lang.Object obj58 = user0.user;
        java.lang.Object obj59 = user0.user;
        user0.register("CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "Refunded without deposit ($-96.0)", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", "Refunded without deposit ($-96.0)");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy66 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj69 = parkingSpaceProxy66.login("empty", "Jane");
        parkingSpaceProxy66.validateClient("Jane");
        parkingSpaceProxy66.toggleSpace("", "staff", false);
        boolean boolean77 = parkingSpaceProxy66.cancelBooking("");
        java.lang.String str80 = parkingSpaceProxy66.scanSpace("staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean83 = parkingSpaceProxy66.extendBooking("jane", (int) ' ');
        parkingSpaceProxy66.autoGenerateManager();
        user0.assignProxy(parkingSpaceProxy66);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc" + "'", str6, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "disabled" + "'", str80, "disabled");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean32 = mobilePay16.processPayment("Refunded total cost of $100.0", (double) 10, "Paid $ 100.0 with Mobile Pay", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        java.lang.String str33 = mobilePay16.getPaymentMessage();
        java.lang.String str34 = mobilePay16.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str33, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str34, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking((int) ' ');
        ParkingSystem.ParkingLotIterator parkingLotIterator10 = parkingLot1.getIterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertNotNull(parkingLotIterator10);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean29 = paymentManager0.refundTotalCost((double) 0L);
        boolean boolean31 = paymentManager0.refundTotalCost((double) 3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        boolean boolean6 = paymentManager0.refundDeposit((double) 1);
        java.lang.String str7 = paymentManager0.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded deposit of $1.0" + "'", str7, "Refunded deposit of $1.0");
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        java.lang.String str9 = booking7.getLotId();
        int int10 = booking7.getDuration();
        java.lang.String str11 = booking7.getLotId();
        booking7.setDuration((int) (byte) 1);
        booking7.setDuration(1);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "jane" + "'", str9, "jane");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean24 = parkingSpaceProxy0.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        boolean boolean28 = parkingSpaceProxy0.editBooking("disabled", "Card number should be 16 digits", (int) (byte) -1);
        java.lang.Object obj31 = parkingSpaceProxy0.login("Paid $ 0.0 with Mobile Pay", "jane");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade32 = parkingSpaceProxy0.getFacade();
        parkingSpaceProxy0.toggleSpace("Refunded without deposit ($0.0)", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", true);
        parkingSpaceProxy0.validateClient("h40rNQ7kR1");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(parkingSpaceFacade32);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        boolean boolean12 = accountRegistry9.requiresValidation("disabled");
        int int13 = accountRegistry9.getManagersSize();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        accountRegistry15.validateClient("pass");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.AccountRegistry accountRegistry21 = superManager18.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry22 = superManager18.registry;
        ParkingSystem.AccountRegistry accountRegistry26 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry26);
        java.lang.String str28 = superManager27.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry32 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager33 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry32);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = null;
        accountRegistry32.assignProxyToManager("disabled", parkingSpaceProxy35);
        superManager27.registry = accountRegistry32;
        ParkingSystem.AccountRegistry accountRegistry38 = superManager27.getRegistry();
        ParkingSystem.Manager manager39 = accountRegistry38.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy41 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry42 = parkingSpaceProxy41.getRegistry();
        boolean boolean48 = parkingSpaceProxy41.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy41.toggleLot("hi!", false);
        accountRegistry38.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy41);
        ParkingSystem.User user54 = new ParkingSystem.User();
        java.lang.Object obj55 = user54.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy56 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj59 = parkingSpaceProxy56.login("empty", "Jane");
        parkingSpaceProxy56.validateClient("Jane");
        java.lang.String str64 = parkingSpaceProxy56.scanSpace("", "");
        parkingSpaceProxy56.toggleSpace("", "disabled", true);
        user54.parkingProxy = parkingSpaceProxy56;
        ParkingSystem.ParkingLot parkingLot71 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator72 = parkingLot71.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator73 = parkingLot71.getIterator();
        user54.user = parkingLot71;
        ParkingSystem.User user75 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy76 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj79 = parkingSpaceProxy76.login("empty", "Jane");
        parkingSpaceProxy76.validateClient("Jane");
        parkingSpaceProxy76.toggleSpace("", "staff", false);
        boolean boolean87 = parkingSpaceProxy76.cancelBooking("");
        user75.assignProxy(parkingSpaceProxy76);
        user54.user = parkingSpaceProxy76;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy90 = user54.parkingProxy;
        parkingSpaceProxy90.addParkingLot("pass");
        accountRegistry38.assignProxyToManager("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", parkingSpaceProxy90);
        superManager18.registry = accountRegistry38;
        java.lang.String str95 = superManager18.getName();
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertNotNull(accountRegistry22);
        org.junit.Assert.assertNotNull(superManager27);
// flaky "22) test2127(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str28, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(superManager33);
        org.junit.Assert.assertNotNull(accountRegistry38);
        org.junit.Assert.assertNotNull(manager39);
        org.junit.Assert.assertNotNull(accountRegistry42);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "disabled" + "'", str64, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator72);
        org.junit.Assert.assertNotNull(parkingLotIterator73);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy90);
// flaky "9) test2127(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "lL3e2yIMXI" + "'", str95, "lL3e2yIMXI");
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        java.lang.String str13 = client0.getPassword();
        client0.setValidated(false);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "disabled" + "'", str13, "disabled");
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        java.lang.String str19 = debitOrCredit6.getPaymentMessage();
        java.lang.String str20 = debitOrCredit6.getPaymentMessage();
        boolean boolean25 = debitOrCredit6.processPayment("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", 30.0d, "", "CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        boolean boolean28 = debitOrCredit6.validateCard("CLT-22138484-eb59-490e-9c41-9fd9c319dcda", (double) 10L);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Card number should be 16 digits" + "'", str19, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Card number should be 16 digits" + "'", str20, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("hi!", (-1.0d), "", "");
        boolean boolean10 = mobilePay0.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str11 = mobilePay0.getPaymentMessage();
        boolean boolean16 = mobilePay0.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded total cost of $1.0", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean21 = mobilePay0.processPayment("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (double) (-1), "disabled", "Paid $ 0.0 with Mobile Pay");
        java.lang.String str22 = mobilePay0.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str11, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str22, "Paid $ -1.0 with Mobile Pay");
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        boolean boolean18 = paymentManager0.processPayment("Paid $ 0.0 with Mobile Pay", (double) (byte) 0, "", "empty");
        boolean boolean23 = paymentManager0.processPayment("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", (double) (-1.0f), "", "Refunded without deposit ($0.0)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList6 = cSVManager0.loadManagers();
// flaky "23) test2132(RegressionTest4)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean26 = bookingManager0.confirmBooking("empty", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Refunded total cost of $1.0", (int) (byte) 1, "Card number should be 16 digits", 32, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled");
        ParkingSystem.BookingManager bookingManager27 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager27);
        ParkingSystem.SpaceManager spaceManager29 = bookingManager27.getSpaceManager();
        double double32 = bookingManager27.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit33 = new ParkingSystem.DebitOrCredit();
        bookingManager27.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        boolean boolean39 = debitOrCredit33.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str40 = debitOrCredit33.getPaymentMessage();
        boolean boolean43 = debitOrCredit33.validateCard("pass", (double) 100.0f);
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        boolean boolean47 = debitOrCredit33.validateCard("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", (double) (byte) 10);
        java.lang.String str48 = debitOrCredit33.getPaymentMessage();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spaceManager29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 165.0d + "'", double32 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Card number should be 16 digits" + "'", str40, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Card number should be 16 digits" + "'", str48, "Card number should be 16 digits");
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        boolean boolean10 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLotIterator7.next();
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        spaceManager12.toggleLot("Jane", false);
        spaceManager12.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager21 = new ParkingSystem.SpaceManager();
        boolean boolean24 = spaceManager21.isSpaceAvailable("hi!", (int) '#');
        spaceManager21.toggleLot("disabled", false);
        ParkingSystem.Booking booking37 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean38 = spaceManager21.assignBooking("empty", (int) (short) 0, booking37);
        boolean boolean39 = spaceManager12.assignBooking("hi!", 0, booking37);
        double double40 = booking37.getTotalCost();
        booking37.setDuration((-1));
        java.lang.String str43 = booking37.getLotId();
        booking37.setStartTime("");
        int int46 = booking37.getDuration();
        boolean boolean47 = parkingSpace11.assignBooking(booking37);
        java.lang.String str48 = booking37.getClientId();
        java.lang.String str49 = booking37.getStartTime();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "jane" + "'", str43, "jane");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "staff" + "'", str48, "staff");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) ' ');
        boolean boolean11 = parkingLot1.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot1.getParkingSpace((int) 'a');
        ParkingSystem.ParkingLot parkingLot15 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking17 = null;
        boolean boolean18 = parkingLot15.assignBooking(0, booking17);
        boolean boolean20 = parkingLot15.isSpaceAvailable((int) '#');
        boolean boolean22 = parkingLot15.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLot15.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking25 = parkingSpace24.getCurrentBooking();
        ParkingSystem.Disabled disabled26 = new ParkingSystem.Disabled();
        parkingSpace24.setState((ParkingSystem.SpaceState) disabled26);
        parkingSpace13.setState((ParkingSystem.SpaceState) disabled26);
        ParkingSystem.ParkingSpace parkingSpace30 = new ParkingSystem.ParkingSpace((int) '4');
        ParkingSystem.Booking booking31 = null;
        boolean boolean32 = parkingSpace30.assignBooking(booking31);
        java.lang.String str33 = disabled26.scanSpace(parkingSpace30);
        int int34 = parkingSpace30.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(parkingSpace13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertNull(booking25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "disabled" + "'", str33, "disabled");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Enabled enabled11 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot13 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator14 = parkingLot13.getIterator();
        ParkingSystem.ParkingSpace parkingSpace16 = parkingLot13.getParkingSpace((int) (byte) -1);
        java.lang.String str17 = enabled11.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled11);
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        boolean boolean27 = parkingLot20.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot20.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking30 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        ParkingSystem.Booking booking32 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        java.lang.String str34 = enabled11.scanSpace(parkingSpace29);
        ParkingSystem.Enabled enabled35 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot37 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking39 = null;
        boolean boolean40 = parkingLot37.assignBooking(0, booking39);
        boolean boolean42 = parkingLot37.isSpaceAvailable((int) '#');
        boolean boolean44 = parkingLot37.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace46 = parkingLot37.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking47 = parkingSpace46.getCurrentBooking();
        parkingSpace46.removeBooking();
        java.lang.String str49 = enabled35.scanSpace(parkingSpace46);
        ParkingSystem.Enabled enabled50 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot52 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking54 = null;
        boolean boolean55 = parkingLot52.assignBooking(0, booking54);
        boolean boolean57 = parkingLot52.isSpaceAvailable((int) '#');
        boolean boolean59 = parkingLot52.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace61 = parkingLot52.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking62 = parkingSpace61.getCurrentBooking();
        parkingSpace61.removeBooking();
        java.lang.String str64 = enabled50.scanSpace(parkingSpace61);
        java.lang.String str65 = enabled35.scanSpace(parkingSpace61);
        java.lang.String str66 = enabled11.scanSpace(parkingSpace61);
        ParkingSystem.ParkingLot parkingLot68 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking70 = null;
        boolean boolean71 = parkingLot68.assignBooking(0, booking70);
        boolean boolean73 = parkingLot68.isSpaceAvailable((int) '#');
        boolean boolean74 = parkingLot68.isEnabled();
        boolean boolean75 = parkingLot68.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace77 = parkingLot68.getParkingSpace((int) ' ');
        java.lang.String str78 = parkingSpace77.scanSpace();
        ParkingSystem.SpaceState spaceState79 = parkingSpace77.getState();
        java.lang.String str80 = enabled11.scanSpace(parkingSpace77);
        java.lang.String str81 = parkingSpace77.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNotNull(parkingLotIterator14);
        org.junit.Assert.assertNotNull(parkingSpace16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertNull(booking32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "empty" + "'", str34, "empty");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(parkingSpace46);
        org.junit.Assert.assertNull(booking47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "empty" + "'", str49, "empty");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(parkingSpace61);
        org.junit.Assert.assertNull(booking62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "empty" + "'", str64, "empty");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "empty" + "'", str65, "empty");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "empty" + "'", str66, "empty");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(parkingSpace77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "empty" + "'", str78, "empty");
        org.junit.Assert.assertNotNull(spaceState79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "empty" + "'", str80, "empty");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "empty" + "'", str81, "empty");
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        ParkingSystem.BookingManager bookingManager3 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager4 = new ParkingSystem.CheckInManager(bookingManager3);
        ParkingSystem.Booking booking6 = bookingManager3.getBooking("");
        ParkingSystem.SpaceManager spaceManager7 = bookingManager3.getSpaceManager();
        double double9 = bookingManager3.getDeposit("Jane");
        ParkingSystem.AccountRegistry accountRegistry10 = bookingManager3.getAccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $-1.0", "hi!", "Refunded without deposit ($-42.0)", accountRegistry10);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry13 = superManager11.registry;
        boolean boolean15 = accountRegistry13.requiresValidation("CLT-631eb509-a6c4-407c-b16d-582a6faabddb");
        org.junit.Assert.assertNull(booking6);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 15.0d + "'", double9 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        boolean boolean22 = accountRegistry20.requiresValidation("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        spaceManager4.addParkingLot("hi!");
        boolean boolean9 = spaceManager4.isSpaceAvailable("Paid $ 0.0 with Mobile Pay", (int) ' ');
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        boolean boolean15 = spaceManager12.isSpaceAvailable("hi!", (int) '#');
        spaceManager12.toggleLot("disabled", false);
        ParkingSystem.Booking booking28 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean29 = spaceManager12.assignBooking("empty", (int) (short) 0, booking28);
        boolean boolean30 = booking28.isCheckedIn();
        java.lang.String str31 = booking28.getClientId();
        java.lang.String str32 = booking28.getStartTime();
        boolean boolean33 = spaceManager4.assignBooking("ST001", (int) ' ', booking28);
        spaceManager4.toggleLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", true);
        java.lang.String str39 = spaceManager4.scanSpace("Refunded without deposit ($0.0)", "CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        spaceManager4.toggleLot("H33Itw4InT", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "staff" + "'", str31, "staff");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Jane" + "'", str32, "Jane");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "disabled" + "'", str39, "disabled");
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        java.lang.String str14 = client0.getUsername();
        ParkingSystem.Booking booking15 = client0.getBookingDetails();
        java.lang.String str16 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
// flaky "24) test2140(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded total cost of $100.0" + "'", str1, "Refunded total cost of $100.0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.CSVManager cSVManager14 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList16 = cSVManager14.readCSV("");
        java.util.List<java.lang.String[]> strArrayList18 = cSVManager14.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap19 = null;
        cSVManager14.loadParkingLots(strMap19);
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.Manager manager26 = superManager25.autoGenerateManager();
        cSVManager14.saveManager((ParkingSystem.Manager) superManager25);
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        spaceManager28.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager28.getParkingLots();
        cSVManager14.loadParkingLots(strMap47);
        ParkingSystem.SpaceManager spaceManager49 = new ParkingSystem.SpaceManager();
        boolean boolean52 = spaceManager49.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str55 = spaceManager49.scanSpace("disabled", "");
        spaceManager49.addParkingLot("hi!");
        java.lang.String str60 = spaceManager49.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap61 = spaceManager49.getParkingLots();
        cSVManager14.saveParkingLots(strMap61);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade63 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str66 = parkingSpaceFacade63.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager67 = parkingSpaceFacade63.getSpaceManager();
        spaceManager67.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap70 = spaceManager67.getParkingLots();
        cSVManager14.saveParkingLots(strMap70);
        cSVManager0.loadParkingLots(strMap70);
        ParkingSystem.Client client73 = ParkingSystem.Client.getInstance();
        java.lang.String str74 = client73.getClientType();
        java.lang.String str75 = client73.getName();
        cSVManager0.saveClient(client73);
        cSVManager0.updateClientValidation("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", true);
        java.util.List<java.lang.String[]> strArrayList81 = cSVManager0.readCSV("Refunded without deposit ($-15.0)");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(strArrayList16);
        org.junit.Assert.assertNotNull(strArrayList18);
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(manager26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "disabled" + "'", str60, "disabled");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertNotNull(spaceManager67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(client73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "disabled" + "'", str74, "disabled");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(strArrayList81);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = user13.parkingProxy;
        ParkingSystem.User user16 = new ParkingSystem.User();
        java.lang.Object obj17 = user16.user;
        ParkingSystem.Client client18 = ParkingSystem.Client.getInstance();
        java.lang.String str19 = client18.getName();
        client18.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy22.getRegistry();
        boolean boolean25 = parkingSpaceProxy22.checkIn("");
        client18.assignProxy(parkingSpaceProxy22);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade27 = parkingSpaceProxy22.getFacade();
        user16.assignProxy(parkingSpaceProxy22);
        user13.parkingProxy = parkingSpaceProxy22;
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        java.lang.String str35 = superManager34.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry36 = superManager34.registry;
        java.lang.String str37 = superManager34.getManagerId();
        ParkingSystem.Client client38 = ParkingSystem.Client.getInstance();
        java.lang.String str39 = client38.getName();
        client38.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry43 = parkingSpaceProxy42.getRegistry();
        boolean boolean45 = parkingSpaceProxy42.checkIn("");
        client38.assignProxy(parkingSpaceProxy42);
        boolean boolean47 = client38.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        client38.assignProxy(parkingSpaceProxy48);
        superManager34.assignProxy(parkingSpaceProxy48);
        user13.assignProxy(parkingSpaceProxy48);
        ParkingSystem.AccountRegistry accountRegistry52 = parkingSpaceProxy48.getRegistry();
        java.lang.String str55 = parkingSpaceProxy48.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        boolean boolean58 = parkingSpaceProxy48.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (byte) 1);
        superManager11.assignProxy(parkingSpaceProxy48);
        ParkingSystem.AccountRegistry accountRegistry60 = superManager11.registry;
        ParkingSystem.Manager manager61 = superManager11.autoGenerateManager();
// flaky "25) test2142(RegressionTest4)":         manager61.validateClient("CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(parkingSpaceProxy15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(client18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade27);
        org.junit.Assert.assertNotNull(superManager34);
// flaky "10) test2142(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str35, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry36);
// flaky "4) test2142(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str37, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(client38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(accountRegistry43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(accountRegistry52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(accountRegistry60);
        org.junit.Assert.assertNotNull(manager61);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        java.lang.String str17 = client0.getClientId();
        java.lang.String str18 = client0.getClientType();
        boolean boolean19 = client0.checkIn();
        java.lang.String str20 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str8 = booking7.getLicensePlate();
        int int9 = booking7.getDuration();
        booking7.setStartTime("CLT-df8d594d-9b12-496d-b1b5-eec06c37337a");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "disabled" + "'", str8, "disabled");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.addParkingLot("Refunded total cost of $1.0");
        spaceManager0.addParkingLot("hi!");
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator25 = parkingLot19.getIterator();
        boolean boolean26 = parkingLotIterator25.hasNext();
        ParkingSystem.ParkingSpace parkingSpace27 = parkingLotIterator25.next();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        ParkingSystem.SpaceManager spaceManager48 = new ParkingSystem.SpaceManager();
        boolean boolean51 = spaceManager48.isSpaceAvailable("hi!", (int) '#');
        spaceManager48.toggleLot("disabled", false);
        ParkingSystem.Booking booking64 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean65 = spaceManager48.assignBooking("empty", (int) (short) 0, booking64);
        boolean boolean66 = spaceManager28.assignBooking("disabled", (int) (byte) 0, booking64);
        boolean boolean67 = parkingSpace27.assignBooking(booking64);
        int int68 = booking64.getSpaceId();
        boolean boolean69 = spaceManager0.assignBooking("empty", (int) (byte) 1, booking64);
        java.lang.String str72 = spaceManager0.scanSpace("cf448544-0e6d-4a41-94c2-e67f848ae8df", "86z9Z9e0MN");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "disabled" + "'", str72, "disabled");
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        java.lang.String str2 = client0.getName();
        java.lang.String str3 = client0.getClientType();
        java.lang.String str4 = client0.getClientType();
        java.lang.String str5 = client0.getUsername();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Client client12 = accountRegistry8.getClient("empty");
        java.lang.Object obj15 = accountRegistry8.login("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "disabled");
        boolean boolean17 = accountRegistry8.requiresValidation("SRiN5ev00N");
        java.util.List<ParkingSystem.Client> clientList18 = accountRegistry8.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNull(client12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(clientList18);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = parkingLot10.assignBooking((int) (short) -1, booking24);
        java.lang.String str26 = booking24.getLotId();
        boolean boolean27 = parkingLot1.assignBooking(0, booking24);
        ParkingSystem.ParkingLotIterator parkingLotIterator28 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLotIterator28.next();
        ParkingSystem.ParkingSpace parkingSpace30 = parkingLotIterator28.next();
        boolean boolean31 = parkingLotIterator28.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator28);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNotNull(parkingSpace30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double17 = bookingManager0.getHourlyRate("Paid $ 0.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap19 = bookingManager0.getActiveBookings();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap20 = bookingManager0.getActiveBookings();
        double double23 = bookingManager0.calculateCost("86z9Z9e0MN", (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 15.0d + "'", double17 == 15.0d);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        java.lang.String str19 = superManager18.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry20 = superManager18.registry;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager18);
        java.lang.String str22 = superManager18.getPassword();
        ParkingSystem.User user23 = new ParkingSystem.User();
        java.lang.Object obj24 = user23.user;
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry37 = parkingSpaceProxy35.getRegistry();
        boolean boolean39 = parkingSpaceProxy35.checkIn("hi!");
        user23.parkingProxy = parkingSpaceProxy35;
        user23.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy47 = user23.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        user23.assignProxy(parkingSpaceProxy48);
        boolean boolean59 = parkingSpaceProxy48.confirmBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "09622cbf-e665-45db-b1ad-365065947a20", "Paid $ 15.0 with Mobile Pay", (int) (byte) -1, "Refunded without deposit ($0.0)", 0, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        superManager18.assignProxy(parkingSpaceProxy48);
        parkingSpaceProxy48.addParkingLot("25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(superManager18);
// flaky "26) test2150(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str19, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry20);
// flaky "11) test2150(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "848f508e-e1d2-4f02-9fc9-e95eee425d36" + "'", str22, "848f508e-e1d2-4f02-9fc9-e95eee425d36");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy47);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        double double5 = bookingManager0.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap6 = bookingManager0.getActiveBookings();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.addParkingLot("pass");
        boolean boolean6 = parkingSpaceProxy0.checkIn("Paid $ 100.0 with Mobile Pay");
        boolean boolean12 = parkingSpaceProxy0.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Refunded without deposit ($-42.0)", "Paid $ 0.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled");
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy0.getRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap14 = accountRegistry13.getManagers();
        java.util.List<ParkingSystem.Client> clientList15 = accountRegistry13.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj20 = parkingSpaceProxy17.login("empty", "Jane");
        parkingSpaceProxy17.validateClient("Jane");
        parkingSpaceProxy17.toggleSpace("", "staff", false);
        boolean boolean28 = parkingSpaceProxy17.cancelBooking("");
        java.lang.String str31 = parkingSpaceProxy17.scanSpace("staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean34 = parkingSpaceProxy17.extendBooking("jane", (int) ' ');
        boolean boolean36 = parkingSpaceProxy17.checkIn("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        boolean boolean38 = parkingSpaceProxy17.checkOut("Refunded without deposit ($-42.0)");
        accountRegistry13.assignProxyToClient("Refunded total cost of $1.0", parkingSpaceProxy17);
        ParkingSystem.Client client41 = accountRegistry13.getClient("H33Itw4InT");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(clientList15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "disabled" + "'", str31, "disabled");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(client41);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        java.lang.String str17 = booking15.getLotId();
        boolean boolean18 = booking15.isCheckedIn();
        java.lang.String str19 = booking15.getLotId();
        boolean boolean20 = booking15.isCheckedIn();
        java.lang.String str21 = booking15.getStartTime();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "jane" + "'", str17, "jane");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "jane" + "'", str19, "jane");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Jane" + "'", str21, "Jane");
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade7.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap9 = spaceManager8.getParkingLots();
        cSVManager0.loadParkingLots(strMap9);
        java.util.List<java.lang.String[]> strArrayList12 = cSVManager0.readCSV("13b04414-31a5-407f-8ea3-fba4613c73d1");
        ParkingSystem.CSVManager cSVManager13 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList15 = cSVManager13.readCSV("");
        java.util.List<java.lang.String[]> strArrayList17 = cSVManager13.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap18 = null;
        cSVManager13.loadParkingLots(strMap18);
        ParkingSystem.AccountRegistry accountRegistry23 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry23);
        ParkingSystem.Manager manager25 = superManager24.autoGenerateManager();
        cSVManager13.saveManager((ParkingSystem.Manager) superManager24);
        ParkingSystem.SpaceManager spaceManager27 = new ParkingSystem.SpaceManager();
        boolean boolean30 = spaceManager27.isSpaceAvailable("hi!", (int) '#');
        spaceManager27.toggleLot("disabled", false);
        ParkingSystem.Booking booking43 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean44 = spaceManager27.assignBooking("empty", (int) (short) 0, booking43);
        spaceManager27.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap46 = spaceManager27.getParkingLots();
        cSVManager13.loadParkingLots(strMap46);
        ParkingSystem.SpaceManager spaceManager48 = new ParkingSystem.SpaceManager();
        boolean boolean51 = spaceManager48.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str54 = spaceManager48.scanSpace("disabled", "");
        spaceManager48.addParkingLot("hi!");
        java.lang.String str59 = spaceManager48.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap60 = spaceManager48.getParkingLots();
        cSVManager13.saveParkingLots(strMap60);
        cSVManager0.loadParkingLots(strMap60);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strArrayList12);
        org.junit.Assert.assertNotNull(strArrayList15);
        org.junit.Assert.assertNotNull(strArrayList17);
        org.junit.Assert.assertNotNull(superManager24);
        org.junit.Assert.assertNotNull(manager25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "disabled" + "'", str54, "disabled");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "disabled" + "'", str59, "disabled");
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        boolean boolean16 = parkingSpaceFacade0.confirmBooking("Refunded without deposit ($-42.0)", "Refunded without deposit ($-42.0)", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ 100.0 with Mobile Pay", (int) '#', "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 0, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Paid $ 10.0 with Mobile Pay");
        boolean boolean19 = parkingSpaceFacade0.extendBooking("02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (byte) 1);
        ParkingSystem.CheckInManager checkInManager20 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.BookingManager bookingManager21 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.BookingManager bookingManager22 = parkingSpaceFacade0.getBookingManager();
        double double25 = bookingManager22.calculateCost("aa9c00f6-ec11-46c5-a72b-a7f620703e51", (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(checkInManager20);
        org.junit.Assert.assertNotNull(bookingManager21);
        org.junit.Assert.assertNotNull(bookingManager22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        java.lang.Object obj10 = accountRegistry3.login("empty", "Refunded total cost of $1.0");
        boolean boolean12 = accountRegistry3.requiresValidation("Refunded total cost of $1.0");
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry3.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.SpaceManager spaceManager15 = new ParkingSystem.SpaceManager();
        boolean boolean18 = spaceManager15.isSpaceAvailable("hi!", (int) '#');
        spaceManager15.toggleLot("disabled", false);
        ParkingSystem.Booking booking31 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean32 = spaceManager15.assignBooking("empty", (int) (short) 0, booking31);
        java.lang.String str33 = booking31.getClientId();
        boolean boolean34 = parkingSpace10.assignBooking(booking31);
        int int35 = booking31.getDuration();
        boolean boolean36 = booking31.isCheckedIn();
        int int37 = booking31.getDuration();
        double double38 = booking31.getTotalCost();
        double double39 = booking31.getTotalCost();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "staff" + "'", str33, "staff");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1.0d + "'", double38 == 1.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade0.getBookingManager();
        boolean boolean8 = parkingSpaceFacade0.editBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "pass", 0);
        java.lang.String str11 = parkingSpaceFacade0.scanSpace("89de8237-29df-4908-9de4-6dc1ce90de94", "CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        ParkingSystem.CheckInManager checkInManager12 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean14 = checkInManager12.checkOut("CLT-390234b0-d56e-4275-bd7b-122280609c69");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertNotNull(checkInManager12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        ParkingSystem.Booking booking16 = bookingManager0.getBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        ParkingSystem.SpaceManager spaceManager17 = bookingManager0.getSpaceManager();
        spaceManager17.toggleLot("Refunded total cost of $1.0", false);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(spaceManager17);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        boolean boolean17 = accountRegistry14.requiresValidation("disabled");
        int int18 = accountRegistry14.getManagersSize();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.getRegistry();
        superManager4.registry = accountRegistry20;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade23 = parkingSpaceProxy22.getFacade();
        superManager4.assignProxy(parkingSpaceProxy22);
        ParkingSystem.AccountRegistry accountRegistry25 = superManager4.getRegistry();
        java.lang.String str26 = superManager4.getManagerId();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "27) test2160(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str5, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
// flaky "12) test2160(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str6, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(parkingSpaceFacade23);
        org.junit.Assert.assertNotNull(accountRegistry25);
// flaky "5) test2160(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str26, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.Booking booking10 = parkingSpaceFacade0.getBookingDetails("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertNull(booking10);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        parkingLot1.setEnabled(false);
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        spaceManager13.toggleLot("Jane", false);
        spaceManager13.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager22 = new ParkingSystem.SpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("hi!", (int) '#');
        spaceManager22.toggleLot("disabled", false);
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = spaceManager22.assignBooking("empty", (int) (short) 0, booking38);
        boolean boolean40 = spaceManager13.assignBooking("hi!", 0, booking38);
        double double41 = booking38.getTotalCost();
        booking38.setDuration((-1));
        java.lang.String str44 = booking38.getLotId();
        boolean boolean45 = parkingLot1.assignBooking((int) (byte) 10, booking38);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "jane" + "'", str44, "jane");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str8 = booking7.getLotId();
        int int9 = booking7.getSpaceId();
        int int10 = booking7.getDuration();
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime11 = booking7.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "jane" + "'", str8, "jane");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray5 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.CSVManager cSVManager7 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList9 = cSVManager7.readCSV("");
        java.util.List<java.lang.String[]> strArrayList11 = cSVManager7.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap12 = null;
        cSVManager7.loadParkingLots(strMap12);
        java.util.List<java.lang.String[]> strArrayList15 = cSVManager7.readCSV("Paid $ -1.0 with Mobile Pay");
        java.lang.String[] strArray16 = cSVManager7.loadSuperManager();
        java.lang.String[] strArray17 = cSVManager7.loadSuperManager();
        ParkingSystem.AccountRegistry accountRegistry21 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry21);
        boolean boolean24 = accountRegistry21.requiresValidation("disabled");
        int int25 = accountRegistry21.getManagersSize();
        boolean boolean31 = accountRegistry21.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj36 = parkingSpaceProxy33.login("empty", "Jane");
        parkingSpaceProxy33.validateClient("Jane");
        parkingSpaceProxy33.toggleSpace("", "staff", false);
        boolean boolean44 = parkingSpaceProxy33.cancelBooking("Jane");
        accountRegistry21.assignProxyToClient("pass", parkingSpaceProxy33);
        parkingSpaceProxy33.autoGenerateManager();
        parkingSpaceProxy33.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade51 = parkingSpaceProxy33.getFacade();
        boolean boolean53 = parkingSpaceFacade51.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean55 = parkingSpaceFacade51.cancelBooking("Jane");
        boolean boolean58 = parkingSpaceFacade51.extendBooking("jane", (int) ' ');
        ParkingSystem.SpaceManager spaceManager59 = parkingSpaceFacade51.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap60 = spaceManager59.getParkingLots();
        cSVManager7.loadParkingLots(strMap60);
        cSVManager0.loadParkingLots(strMap60);
        cSVManager0.updateClientValidation("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", false);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArray5);
// flaky "28) test2164(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray5, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray6);
// flaky "13) test2164(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList9);
        org.junit.Assert.assertNotNull(strArrayList11);
        org.junit.Assert.assertNotNull(strArrayList15);
        org.junit.Assert.assertNotNull(strArray16);
// flaky "6) test2164(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray16, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray17);
// flaky "4) test2164(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray17, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(superManager22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(spaceManager59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.MobilePay mobilePay4 = new ParkingSystem.MobilePay();
        boolean boolean9 = mobilePay4.processPayment("hi!", (-1.0d), "", "");
        boolean boolean14 = mobilePay4.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str15 = mobilePay4.getPaymentMessage();
        bookingManager3.setPaymentStrategy((ParkingSystem.Strategy) mobilePay4);
        java.lang.String str17 = mobilePay4.getPaymentMessage();
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str15, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str17, "Paid $ 100.0 with Mobile Pay");
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        ParkingSystem.Enabled enabled15 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking19 = null;
        boolean boolean20 = parkingLot17.assignBooking(0, booking19);
        boolean boolean22 = parkingLot17.isSpaceAvailable((int) '#');
        boolean boolean24 = parkingLot17.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace26 = parkingLot17.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking27 = parkingSpace26.getCurrentBooking();
        parkingSpace26.removeBooking();
        java.lang.String str29 = enabled15.scanSpace(parkingSpace26);
        java.lang.String str30 = enabled0.scanSpace(parkingSpace26);
        ParkingSystem.ParkingSpace parkingSpace32 = new ParkingSystem.ParkingSpace((int) (short) 0);
        java.lang.String str33 = enabled0.scanSpace(parkingSpace32);
        ParkingSystem.SpaceState spaceState34 = parkingSpace32.getState();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(parkingSpace26);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "empty" + "'", str29, "empty");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "empty" + "'", str30, "empty");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "empty" + "'", str33, "empty");
        org.junit.Assert.assertNotNull(spaceState34);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean26 = bookingManager0.confirmBooking("empty", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Refunded total cost of $1.0", (int) (byte) 1, "Card number should be 16 digits", 32, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled");
        ParkingSystem.BookingManager bookingManager27 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager27);
        ParkingSystem.SpaceManager spaceManager29 = bookingManager27.getSpaceManager();
        double double32 = bookingManager27.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit33 = new ParkingSystem.DebitOrCredit();
        bookingManager27.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        boolean boolean39 = debitOrCredit33.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str40 = debitOrCredit33.getPaymentMessage();
        boolean boolean43 = debitOrCredit33.validateCard("pass", (double) 100.0f);
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        boolean boolean47 = debitOrCredit33.validateCard("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (double) (short) -1);
        boolean boolean52 = debitOrCredit33.processPayment("H33Itw4InT", (double) '#', "Refunded total cost of $10.0", "CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spaceManager29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 165.0d + "'", double32 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Card number should be 16 digits" + "'", str40, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        spaceManager0.loadParkingLots();
        spaceManager0.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        spaceManager0.toggleLot("SRiN5ev00N", true);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        java.lang.String str17 = booking15.getLotId();
        int int18 = booking15.getDuration();
        int int19 = booking15.getSpaceId();
        booking15.setStartTime("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        booking15.setDuration((int) 'a');
        booking15.setStartTime("disabled");
        int int26 = booking15.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "jane" + "'", str17, "jane");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", true);
        ParkingSystem.SpaceManager spaceManager9 = parkingSpaceFacade0.getSpaceManager();
        spaceManager9.addParkingLot("");
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertNotNull(spaceManager9);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.lang.String str8 = superManager7.getManagerId();
        java.lang.String str9 = superManager7.getManagerId();
        ParkingSystem.Manager manager10 = superManager7.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry11 = superManager7.registry;
        java.lang.String str12 = superManager7.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry13 = superManager7.registry;
        java.lang.String str14 = superManager7.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry15 = superManager7.getRegistry();
        accountRegistry15.validateClient("CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", accountRegistry15);
        java.util.List<ParkingSystem.Client> clientList19 = accountRegistry15.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager7);
// flaky "29) test2171(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str8, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
// flaky "14) test2171(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str9, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(manager10);
        org.junit.Assert.assertNotNull(accountRegistry11);
// flaky "7) test2171(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str12, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry13);
// flaky "5) test2171(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str14, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(clientList19);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        boolean boolean17 = parkingLot10.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace19 = parkingLot10.getParkingSpace((int) (byte) 10);
        int int20 = parkingSpace19.getSpaceId();
        ParkingSystem.Booking booking21 = parkingSpace19.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager22 = new ParkingSystem.SpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("hi!", (int) '#');
        spaceManager22.toggleLot("disabled", false);
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = spaceManager22.assignBooking("empty", (int) (short) 0, booking38);
        boolean boolean40 = parkingSpace19.assignBooking(booking38);
        ParkingSystem.SpaceManager spaceManager41 = new ParkingSystem.SpaceManager();
        boolean boolean44 = spaceManager41.isSpaceAvailable("hi!", (int) '#');
        spaceManager41.toggleLot("disabled", false);
        ParkingSystem.Booking booking57 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean58 = spaceManager41.assignBooking("empty", (int) (short) 0, booking57);
        boolean boolean59 = booking57.isCheckedIn();
        java.lang.String str60 = booking57.getClientId();
        boolean boolean61 = parkingSpace19.assignBooking(booking57);
        boolean boolean62 = parkingLot1.assignBooking(1, booking57);
        int int63 = booking57.getDuration();
        boolean boolean64 = booking57.isCheckedIn();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(parkingSpace19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNull(booking21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "staff" + "'", str60, "staff");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        java.lang.String str9 = booking7.getLotId();
        int int10 = booking7.getDuration();
        java.lang.String str11 = booking7.getLotId();
        booking7.setDuration((int) (byte) 1);
        int int14 = booking7.getSpaceId();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "jane" + "'", str9, "jane");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        java.lang.String str22 = superManager21.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager21.registry;
        java.lang.String str24 = superManager21.getManagerId();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        superManager21.assignProxy(parkingSpaceProxy35);
        user0.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry39 = parkingSpaceProxy35.getRegistry();
        java.lang.String str42 = parkingSpaceProxy35.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj45 = parkingSpaceProxy35.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade46 = parkingSpaceProxy35.getFacade();
        ParkingSystem.CheckInManager checkInManager47 = parkingSpaceFacade46.getCheckInManager();
        parkingSpaceFacade46.addParkingLot("qPYDfDnbtD");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
// flaky "30) test2174(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str22, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry23);
// flaky "15) test2174(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str24, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "disabled" + "'", str42, "disabled");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(parkingSpaceFacade46);
        org.junit.Assert.assertNotNull(checkInManager47);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.toggleSpace("Refunded without deposit ($0.0)", "disabled", false);
        spaceManager0.addParkingLot("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        spaceManager0.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        java.lang.String str18 = booking16.getClientId();
        int int19 = booking16.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "staff" + "'", str18, "staff");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.checkOut();
        java.lang.String str11 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        java.lang.String str2 = client0.getPassword();
        boolean boolean3 = client0.getIsValidated();
        boolean boolean5 = client0.extendBooking(32);
        boolean boolean6 = client0.cancelBooking();
        boolean boolean7 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        parkingLot1.setEnabled(true);
        parkingLot1.removeBooking((-1));
        boolean boolean10 = parkingLot1.isSpaceAvailable((int) '#');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.AccountRegistry accountRegistry9 = bookingManager0.getAccountRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap10 = accountRegistry9.getManagers();
        ParkingSystem.Client client12 = accountRegistry9.getClient("CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(client12);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        parkingSpaceProxy6.toggleSpace("Paid $ 100.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", false);
        parkingSpaceProxy6.toggleLot("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6", false);
        user0.parkingProxy = parkingSpaceProxy6;
        org.junit.Assert.assertNull(parkingSpaceProxy1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        parkingSpaceProxy18.toggleLot("disabled", false);
        java.lang.Object obj35 = parkingSpaceProxy18.login("Refunded without deposit ($-42.0)", "86z9Z9e0MN");
        parkingSpaceProxy18.toggleSpace("Refunded total cost of $100.0", "", true);
        boolean boolean41 = parkingSpaceProxy18.checkIn("");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "31) test2182(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str5, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager1 = parkingSpaceFacade0.getBookingManager();
        double double3 = bookingManager1.getHourlyRate("pass");
        boolean boolean7 = bookingManager1.editBooking("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", 4);
        double double10 = bookingManager1.calculateCost("aswfJGJtdF", 0);
        org.junit.Assert.assertNotNull(bookingManager1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 15.0d + "'", double10 == 15.0d);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        java.lang.String str13 = client0.getName();
        ParkingSystem.Booking booking14 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(booking14);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double17 = bookingManager0.getHourlyRate("Paid $ 0.0 with Mobile Pay");
        boolean boolean22 = bookingManager0.extendBooking("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (int) (byte) -1, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4");
        ParkingSystem.Booking booking24 = bookingManager0.getBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 15.0d + "'", double17 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(booking24);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean14 = paymentManager0.processPayment("hi!", (double) 0.0f, "empty", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str15 = paymentManager0.paymentMessage;
        boolean boolean17 = paymentManager0.refundTotalCost((double) 0.0f);
        java.lang.String str18 = paymentManager0.paymentMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded total cost of $1.0" + "'", str7, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str15, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str18, "Paid $ 100.0 with Mobile Pay");
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace4 = parkingLot1.getParkingSpace((int) (byte) -1);
        boolean boolean5 = parkingLot1.isEnabled();
        boolean boolean6 = parkingLot1.isEnabled();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap13 = accountRegistry11.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry16 = parkingSpaceProxy15.getRegistry();
        java.lang.String str19 = parkingSpaceProxy15.scanSpace("empty", "hi!");
        boolean boolean29 = parkingSpaceProxy15.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy15.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean39 = parkingSpaceProxy15.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry11.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy15);
        accountRegistry3.assignProxyToManager("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy15);
        ParkingSystem.Manager manager42 = accountRegistry3.autoGenerateManager();
        java.util.List<ParkingSystem.Client> clientList43 = accountRegistry3.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(accountRegistry16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "disabled" + "'", str19, "disabled");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(manager42);
        org.junit.Assert.assertNotNull(clientList43);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        ParkingSystem.AccountRegistry accountRegistry6 = null;
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj17 = parkingSpaceProxy14.login("empty", "Jane");
        parkingSpaceProxy14.validateClient("Jane");
        parkingSpaceProxy14.toggleSpace("", "staff", false);
        accountRegistry12.assignProxyToManager("pass", parkingSpaceProxy14);
        ParkingSystem.Client client26 = accountRegistry12.getClient("");
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry12);
        superManager7.registry = accountRegistry12;
        ParkingSystem.AccountRegistry accountRegistry29 = superManager7.getRegistry();
        ParkingSystem.Manager manager30 = accountRegistry29.autoGenerateManager();
        ParkingSystem.SuperManager superManager31 = ParkingSystem.SuperManager.createFromCSV("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", accountRegistry29);
        ParkingSystem.Manager manager32 = superManager31.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry36 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager37 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry36);
        boolean boolean39 = accountRegistry36.requiresValidation("disabled");
        int int40 = accountRegistry36.getManagersSize();
        boolean boolean46 = accountRegistry36.registerClient("Paid $ 10.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        accountRegistry36.validateClient("staff");
        boolean boolean54 = accountRegistry36.registerClient("Refunded without deposit ($-96.0)", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        superManager31.registry = accountRegistry36;
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertNotNull(manager30);
        org.junit.Assert.assertNotNull(superManager31);
        org.junit.Assert.assertNotNull(manager32);
        org.junit.Assert.assertNotNull(superManager37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace4 = parkingLot1.getParkingSpace((int) (byte) -1);
        ParkingSystem.ParkingLotIterator parkingLotIterator5 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace7 = parkingLot1.getParkingSpace(32);
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLot1.getParkingSpace(52);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertNotNull(parkingLotIterator5);
        org.junit.Assert.assertNotNull(parkingSpace7);
        org.junit.Assert.assertNotNull(parkingSpace9);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        ParkingSystem.Booking booking12 = client0.getBookingDetails();
        boolean boolean14 = client0.extendBooking((int) ' ');
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str1, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.paymentMessage = "pass";
        paymentManager0.paymentMessage = "empty";
        java.lang.String str8 = paymentManager0.refundMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Refunded total cost of $-1.0" + "'", str8, "Refunded total cost of $-1.0");
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        boolean boolean5 = checkInManager1.checkIn("jane");
        java.lang.String str6 = checkInManager1.refundMessage;
        boolean boolean8 = checkInManager1.checkOut("Refunded total cost of $1.0");
        boolean boolean10 = checkInManager1.checkIn("Refunded total cost of $100.0");
        boolean boolean12 = checkInManager1.checkOut("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap4 = bookingManager0.getActiveBookings();
        boolean boolean8 = bookingManager0.editBooking("Paid $ 100.0 with Mobile Pay", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", (int) (byte) 1);
        boolean boolean12 = bookingManager0.editBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "Refunded total cost of $-1.0", (int) (byte) 0);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.validateClient("02659ad3-0b5c-4c48-a915-a466f2b50775");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        java.lang.Object obj18 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.Client client20 = ParkingSystem.Client.getInstance();
        java.lang.String str21 = client20.getName();
        client20.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry25 = parkingSpaceProxy24.getRegistry();
        boolean boolean27 = parkingSpaceProxy24.checkIn("");
        client20.assignProxy(parkingSpaceProxy24);
        boolean boolean29 = client20.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        client20.assignProxy(parkingSpaceProxy30);
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy30.getRegistry();
        boolean boolean34 = parkingSpaceProxy30.checkIn("hi!");
        user0.assignProxy(parkingSpaceProxy30);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean38 = parkingSpaceProxy36.cancelBooking("pass");
        user0.parkingProxy = parkingSpaceProxy36;
        ParkingSystem.MobilePay mobilePay40 = new ParkingSystem.MobilePay();
        java.lang.String str41 = mobilePay40.getPaymentMessage();
        boolean boolean46 = mobilePay40.processPayment("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", (double) 10, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        java.lang.String str47 = mobilePay40.getPaymentMessage();
        user0.user = mobilePay40;
        java.lang.String str49 = mobilePay40.getPaymentMessage();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNotNull(client20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str47, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str49, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        client0.assignProxy(parkingSpaceProxy17);
        parkingSpaceProxy17.toggleSpace("Paid $ 1470.0 with Mobile Pay", "Refunded without deposit ($-15.0)", false);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.AccountRegistry accountRegistry2 = bookingManager0.getAccountRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap3 = accountRegistry2.getManagers();
        org.junit.Assert.assertNotNull(accountRegistry2);
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.lang.String str8 = superManager7.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = superManager7.registry;
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("H33Itw4InT", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "ST001", accountRegistry9);
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry9.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager7);
// flaky "32) test2199(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str8, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertNotNull(superManager10);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.ParkingLot parkingLot14 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking16 = null;
        boolean boolean17 = parkingLot14.assignBooking(0, booking16);
        boolean boolean19 = parkingLot14.isSpaceAvailable((int) '#');
        boolean boolean21 = parkingLot14.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace23 = parkingLot14.getParkingSpace((int) (byte) 10);
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot26 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator27 = parkingLot26.getIterator();
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot26.getParkingSpace((int) (byte) -1);
        java.lang.String str30 = enabled24.scanSpace(parkingSpace29);
        parkingSpace23.setState((ParkingSystem.SpaceState) enabled24);
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled24);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(parkingSpace23);
        org.junit.Assert.assertNotNull(parkingLotIterator27);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "empty" + "'", str30, "empty");
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        booking15.setCheckedIn(false);
        booking15.setStartTime("SRiN5ev00N");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        java.lang.String str5 = superManager4.getName();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        java.lang.String str13 = superManager12.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry14 = superManager12.registry;
        java.lang.String str15 = superManager12.getManagerId();
        ParkingSystem.Client client16 = ParkingSystem.Client.getInstance();
        java.lang.String str17 = client16.getName();
        client16.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry21 = parkingSpaceProxy20.getRegistry();
        boolean boolean23 = parkingSpaceProxy20.checkIn("");
        client16.assignProxy(parkingSpaceProxy20);
        boolean boolean25 = client16.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        client16.assignProxy(parkingSpaceProxy26);
        superManager12.assignProxy(parkingSpaceProxy26);
        boolean boolean38 = parkingSpaceProxy26.confirmBooking("Paid $ 100.0 with Mobile Pay", "", "Paid $ -1.0 with Mobile Pay", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", 0, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", 32, "ST001", "Refunded total cost of $1.0");
        accountRegistry6.assignProxyToClient("Refunded without deposit ($-96.0)", parkingSpaceProxy26);
        boolean boolean41 = accountRegistry6.requiresValidation("hi!");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "33) test2202(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "lL3e2yIMXI" + "'", str5, "lL3e2yIMXI");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertNotNull(superManager12);
// flaky "16) test2202(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str13, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry14);
// flaky "8) test2202(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str15, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(client16);
// flaky "6) test2202(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Jane" + "'", str17, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean15 = parkingSpaceFacade0.checkOut("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.BookingManager bookingManager16 = parkingSpaceFacade0.getBookingManager();
        boolean boolean18 = parkingSpaceFacade0.cancelBooking("Paid $ -1.0 with Mobile Pay");
        parkingSpaceFacade0.toggleLot("K6PkM9rcCx", true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookingManager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double18 = bookingManager0.calculateCost("Paid $ 10.0 with Mobile Pay", (int) (byte) 1);
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        boolean boolean30 = bookingManager0.confirmBooking("CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "3b453211-7dd1-4452-8741-a206711c1217", "aswfJGJtdF", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", (int) (byte) -1, "e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", (int) (byte) 0, "Refunded without deposit ($-42.0)", "K6PkM9rcCx");
        boolean boolean35 = bookingManager0.extendBooking("", (int) (short) 10, "Refunded without deposit ($1.0)", "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        ParkingSystem.AccountRegistry accountRegistry36 = bookingManager0.getAccountRegistry();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 30.0d + "'", double18 == 30.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(accountRegistry36);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        java.lang.String str7 = superManager4.getName();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "34) test2205(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str5, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
// flaky "17) test2205(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str6, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
// flaky "9) test2205(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "lL3e2yIMXI" + "'", str7, "lL3e2yIMXI");
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        ParkingSystem.ParkingLotIterator parkingLotIterator10 = parkingLot1.getIterator();
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int20 = booking19.getDuration();
        java.lang.String str21 = booking19.getClientId();
        booking19.setStartTime("hi!");
        boolean boolean24 = booking19.isCheckedIn();
        java.lang.String str25 = booking19.getLotId();
        boolean boolean26 = parkingLot1.assignBooking((int) '#', booking19);
        int int27 = booking19.getSpaceId();
        booking19.setDuration((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "jane" + "'", str25, "jane");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean15 = parkingSpaceFacade0.checkOut("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.BookingManager bookingManager16 = parkingSpaceFacade0.getBookingManager();
        boolean boolean18 = parkingSpaceFacade0.checkOut("TXCrKOGD");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookingManager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        parkingSpaceFacade0.toggleLot("Paid $ -1.0 with Mobile Pay", false);
        parkingSpaceFacade0.toggleLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", true);
        ParkingSystem.SpaceManager spaceManager10 = parkingSpaceFacade0.getSpaceManager();
        spaceManager10.addParkingLot("CLT-f02c481e-1504-4abf-b598-76152da8586a");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertNotNull(spaceManager10);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        boolean boolean50 = booking48.isCheckedIn();
        java.lang.String str51 = booking48.getClientId();
        boolean boolean52 = parkingSpace10.assignBooking(booking48);
        ParkingSystem.SpaceManager spaceManager53 = new ParkingSystem.SpaceManager();
        boolean boolean56 = spaceManager53.isSpaceAvailable("hi!", (int) '#');
        spaceManager53.toggleLot("disabled", false);
        ParkingSystem.Booking booking69 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean70 = spaceManager53.assignBooking("empty", (int) (short) 0, booking69);
        boolean boolean71 = booking69.isCheckedIn();
        boolean boolean72 = parkingSpace10.assignBooking(booking69);
        boolean boolean73 = parkingSpace10.isAvailable();
        ParkingSystem.SpaceManager spaceManager74 = new ParkingSystem.SpaceManager();
        boolean boolean77 = spaceManager74.isSpaceAvailable("hi!", (int) '#');
        spaceManager74.toggleLot("disabled", false);
        ParkingSystem.Booking booking90 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean91 = spaceManager74.assignBooking("empty", (int) (short) 0, booking90);
        java.lang.String str92 = booking90.getClientId();
        java.lang.String str93 = booking90.getStartTime();
        boolean boolean94 = parkingSpace10.assignBooking(booking90);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "staff" + "'", str51, "staff");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "staff" + "'", str92, "staff");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Jane" + "'", str93, "Jane");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean19 = bookingManager0.cancelBooking("Refunded total cost of $1.0");
        double double22 = bookingManager0.calculateCost("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", (int) (short) 100);
        boolean boolean26 = bookingManager0.editBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1515.0d + "'", double22 == 1515.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        superManager4.validateClient("Refunded without deposit ($-42.0)");
        java.lang.String str7 = superManager4.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "35) test2211(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "848f508e-e1d2-4f02-9fc9-e95eee425d36" + "'", str7, "848f508e-e1d2-4f02-9fc9-e95eee425d36");
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        java.lang.String str2 = client0.getPassword();
        boolean boolean10 = client0.confirmBooking("ua4ppOLtSl", "Refunded total cost of $10.0", (-1), "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", (int) '4', "Paid $ -1.0 with Mobile Pay", "pass");
        org.junit.Assert.assertNotNull(client0);
// flaky "36) test2212(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
// flaky "18) test2212(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "pass" + "'", str2, "pass");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.Booking booking11 = new ParkingSystem.Booking("Paid $ 100.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (int) (short) 1, "2afd610d-a8cb-413a-bbee-7927f86b526c", 32, "", 30.0d);
        boolean boolean12 = spaceManager1.assignBooking("Paid $ 0.0 with Mobile Pay", (int) (byte) 10, booking11);
        java.lang.String str13 = booking11.getClientId();
        java.lang.String str14 = booking11.getLotId();
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str13, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3" + "'", str14, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        java.util.List<ParkingSystem.Client> clientList11 = accountRegistry8.displayPendingValidations();
        ParkingSystem.Client client13 = accountRegistry8.getClient("Paid $ 1.0 with Mobile Pay");
        java.lang.Object obj16 = accountRegistry8.login("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc");
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry8.loadManagersFromCSV();
// flaky "37) test2214(RegressionTest4)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(clientList11);
        org.junit.Assert.assertNull(client13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = parkingSpaceFacade0.scanSpace("jane", "Refunded without deposit ($0.0)");
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("Jane", "");
        ParkingSystem.Booking booking12 = parkingSpaceFacade0.getBookingDetails("4a1f2343-8b2e-4dea-ba69-efd105414390");
        boolean boolean22 = parkingSpaceFacade0.confirmBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "02659ad3-0b5c-4c48-a915-a466f2b50775", 32, "02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "89de8237-29df-4908-9de4-6dc1ce90de94");
        java.lang.String str25 = parkingSpaceFacade0.scanSpace("83a51dc6-0c8f-4f21-ae40-68699828f95d", "Jane");
        ParkingSystem.CheckInManager checkInManager26 = parkingSpaceFacade0.getCheckInManager();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "disabled" + "'", str25, "disabled");
        org.junit.Assert.assertNotNull(checkInManager26);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("cf448544-0e6d-4a41-94c2-e67f848ae8df");
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.getRegistry();
        ParkingSystem.Client client8 = accountRegistry6.getClient("3b453211-7dd1-4452-8741-a206711c1217");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "38) test2217(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str5, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertNull(client8);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        java.lang.Object obj14 = user0.user;
        ParkingSystem.Client client15 = ParkingSystem.Client.getInstance();
        java.lang.String str16 = client15.getClientType();
        java.lang.String str17 = client15.getPassword();
        ParkingSystem.Client client18 = ParkingSystem.Client.getInstance();
        java.lang.String str19 = client18.getName();
        client18.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str28 = client18.getUsername();
        java.lang.String str29 = client18.getPassword();
        java.lang.String str30 = client18.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = null;
        client18.assignProxy(parkingSpaceProxy31);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj36 = parkingSpaceProxy33.login("empty", "Jane");
        client18.assignProxy(parkingSpaceProxy33);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj41 = parkingSpaceProxy38.login("empty", "Jane");
        parkingSpaceProxy38.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        parkingSpaceProxy38.displayPendingValidations();
        client18.assignProxy(parkingSpaceProxy38);
        client15.assignProxy(parkingSpaceProxy38);
        boolean boolean58 = parkingSpaceProxy38.confirmBooking("Refunded without deposit ($-42.0)", "4a1f2343-8b2e-4dea-ba69-efd105414390", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", (int) (short) 100, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) (byte) 100, "4a1f2343-8b2e-4dea-ba69-efd105414390", "Refunded total cost of $1.0");
        user0.parkingProxy = parkingSpaceProxy38;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(client15);
// flaky "39) test2218(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "staff" + "'", str16, "staff");
// flaky "19) test2218(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pass" + "'", str17, "pass");
        org.junit.Assert.assertNotNull(client18);
// flaky "10) test2218(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Jane" + "'", str19, "Jane");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getUsername();
        client0.setValidated(false);
        client0.setClientInfo("staff", "Refunded total cost of $1.0", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Jane", "Paid $ 10.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay", true);
        boolean boolean15 = client0.editBooking("Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean18 = client0.editBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", (int) 'a');
        boolean boolean19 = client0.cancelBooking();
        boolean boolean21 = client0.extendBooking(52);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "disabled" + "'", str1, "disabled");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        boolean boolean19 = parkingSpaceProxy2.editBooking("Paid $ 1.0 with Mobile Pay", "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e", 10);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("Jane");
        boolean boolean34 = parkingSpaceProxy21.checkOut("empty");
        boolean boolean44 = parkingSpaceProxy21.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        boolean boolean50 = parkingSpaceProxy21.register("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "02659ad3-0b5c-4c48-a915-a466f2b50775", "Paid $ 100.0 with Mobile Pay");
        user0.assignProxy(parkingSpaceProxy21);
        user0.register("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "K6PkM9rcCx", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = spaceManager0.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        boolean boolean15 = spaceManager0.isSpaceAvailable("Refunded total cost of $100.0", (int) (byte) 0);
        ParkingSystem.Booking booking25 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int26 = booking25.getDuration();
        java.lang.String str27 = booking25.getClientId();
        booking25.setStartTime("hi!");
        boolean boolean30 = booking25.isCheckedIn();
        java.lang.String str31 = booking25.getLotId();
        int int32 = booking25.getDuration();
        boolean boolean33 = spaceManager0.assignBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", (int) (short) 1, booking25);
        int int34 = booking25.getDuration();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "staff" + "'", str27, "staff");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "jane" + "'", str31, "jane");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        boolean boolean23 = accountRegistry20.requiresValidation("disabled");
        int int24 = accountRegistry20.getManagersSize();
        boolean boolean30 = accountRegistry20.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj35 = parkingSpaceProxy32.login("empty", "Jane");
        parkingSpaceProxy32.validateClient("Jane");
        parkingSpaceProxy32.toggleSpace("", "staff", false);
        boolean boolean43 = parkingSpaceProxy32.cancelBooking("Jane");
        accountRegistry20.assignProxyToClient("pass", parkingSpaceProxy32);
        parkingSpaceProxy32.autoGenerateManager();
        parkingSpaceProxy32.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        user0.assignProxy(parkingSpaceProxy32);
        java.lang.Object obj51 = user0.user;
        user0.register("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded without deposit ($-42.0)", "Paid $ -1.0 with Mobile Pay", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", "");
        ParkingSystem.Booking booking65 = new ParkingSystem.Booking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Jane", 10, "CLT-390234b0-d56e-4275-bd7b-122280609c69", (-1), "", (double) 0.0f);
        user0.user = 0.0f;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b" + "'", str6, "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        java.lang.String str5 = paymentManager0.refundMessage;
        boolean boolean7 = paymentManager0.refundDeposit((double) ' ');
        java.lang.String str8 = paymentManager0.paymentMessage;
        boolean boolean11 = paymentManager0.refundWithoutDeposit((double) (byte) -1, (double) (-1L));
        boolean boolean14 = paymentManager0.refundWithoutDeposit((double) (byte) 1, 0.0d);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str5, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        parkingSpaceFacade17.toggleSpace("pass", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean25 = parkingSpaceFacade17.editBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 100);
        boolean boolean28 = parkingSpaceFacade17.extendBooking("fhd49ADb", (int) '#');
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str6, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) (short) 1);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        parkingSpaceFacade9.toggleLot("83a51dc6-0c8f-4f21-ae40-68699828f95d", false);
        boolean boolean17 = parkingSpaceFacade9.extendBooking("79e86af2-7061-42df-ba07-6f6ce7f1b89c", (int) (byte) 0);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str1, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        boolean boolean22 = accountRegistry20.requiresValidation("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        boolean boolean24 = accountRegistry20.requiresValidation("h40rNQ7kR1");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        ParkingSystem.Client client30 = ParkingSystem.Client.getInstance();
        java.lang.String str31 = client30.getClientType();
        boolean boolean39 = client30.confirmBooking("", "pass", (int) (byte) 0, "Paid $ 10.0 with Mobile Pay", (int) (byte) 0, "", "Jane");
        boolean boolean40 = client30.checkOut();
        cSVManager0.saveClient(client30);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList42 = cSVManager0.loadManagers();
// flaky "40) test2230(RegressionTest4)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "20) test2230(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "11) test2230(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(client30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "25527a32-01ef-45ba-816a-1d0a2fc2a52d" + "'", str31, "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        java.lang.String str17 = client0.getClientId();
        java.lang.String str18 = client0.getClientType();
        java.lang.String str19 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str1, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
// flaky "41) test2231(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "CLT-578de262-c6ef-49e3-b501-8fdbcb54d0f4" + "'", str17, "CLT-578de262-c6ef-49e3-b501-8fdbcb54d0f4");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "25527a32-01ef-45ba-816a-1d0a2fc2a52d" + "'", str18, "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "25527a32-01ef-45ba-816a-1d0a2fc2a52d" + "'", str19, "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean15 = client0.editBooking("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", 32);
        boolean boolean23 = client0.confirmBooking("8bf217fa-1769-4d04-858b-ce78fe94bf0c", "lL3e2yIMXI", 1, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", 0, "Card number should be 16 digits", "79e86af2-7061-42df-ba07-6f6ce7f1b89c");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str1, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str11, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str12, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        ParkingSystem.Manager manager5 = superManager4.autoGenerateManager();
        superManager4.validateClient("Card number should be 16 digits");
        java.lang.String str8 = superManager4.getManagerId();
        superManager4.setManagerInfo("Paid $ 1470.0 with Mobile Pay", "tbHxuilT", "Paid $ 1.0 with Mobile Pay");
        java.lang.String str13 = superManager4.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(manager5);
// flaky "42) test2233(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str8, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 1.0 with Mobile Pay" + "'", str13, "Paid $ 1.0 with Mobile Pay");
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.SpaceManager spaceManager10 = new ParkingSystem.SpaceManager();
        boolean boolean13 = spaceManager10.isSpaceAvailable("hi!", (int) '#');
        spaceManager10.toggleLot("disabled", false);
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean27 = spaceManager10.assignBooking("empty", (int) (short) 0, booking26);
        ParkingSystem.SpaceManager spaceManager30 = new ParkingSystem.SpaceManager();
        boolean boolean33 = spaceManager30.isSpaceAvailable("hi!", (int) '#');
        spaceManager30.toggleLot("disabled", false);
        ParkingSystem.Booking booking46 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean47 = spaceManager30.assignBooking("empty", (int) (short) 0, booking46);
        boolean boolean48 = spaceManager10.assignBooking("disabled", (int) (byte) 0, booking46);
        boolean boolean49 = parkingSpace9.assignBooking(booking46);
        java.lang.String str50 = booking46.getClientId();
        java.lang.String str51 = booking46.getLotId();
        java.lang.String str52 = booking46.getStartTime();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "staff" + "'", str50, "staff");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "jane" + "'", str51, "jane");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Jane" + "'", str52, "Jane");
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getUsername();
        boolean boolean4 = client0.extendBooking(100);
        java.lang.String str5 = client0.getClientId();
        boolean boolean6 = client0.checkOut();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "25527a32-01ef-45ba-816a-1d0a2fc2a52d" + "'", str1, "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str2, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
// flaky "43) test2235(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-578de262-c6ef-49e3-b501-8fdbcb54d0f4" + "'", str5, "CLT-578de262-c6ef-49e3-b501-8fdbcb54d0f4");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) ' ');
        boolean boolean11 = parkingLot1.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot1.getParkingSpace((int) 'a');
        ParkingSystem.ParkingLot parkingLot15 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking17 = null;
        boolean boolean18 = parkingLot15.assignBooking(0, booking17);
        boolean boolean20 = parkingLot15.isSpaceAvailable((int) '#');
        boolean boolean22 = parkingLot15.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLot15.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking25 = parkingSpace24.getCurrentBooking();
        ParkingSystem.Disabled disabled26 = new ParkingSystem.Disabled();
        parkingSpace24.setState((ParkingSystem.SpaceState) disabled26);
        parkingSpace13.setState((ParkingSystem.SpaceState) disabled26);
        parkingSpace13.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(parkingSpace13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertNull(booking25);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean3 = parkingSpaceFacade0.checkIn("89de8237-29df-4908-9de4-6dc1ce90de94");
        boolean boolean5 = parkingSpaceFacade0.checkOut("pass");
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap20 = bookingManager0.getActiveBookings();
        double double22 = bookingManager0.getDeposit("TXCrKOGD");
        boolean boolean24 = bookingManager0.cancelBooking("I673kmcH");
        double double26 = bookingManager0.getHourlyRate("8812812f-8c58-440e-9188-ca0b1f996ced");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 15.0d + "'", double26 == 15.0d);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.User user20 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("");
        user20.assignProxy(parkingSpaceProxy21);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy34.getRegistry();
        boolean boolean41 = parkingSpaceProxy34.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean45 = parkingSpaceProxy34.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user20.parkingProxy = parkingSpaceProxy34;
        user0.parkingProxy = parkingSpaceProxy34;
        java.lang.Object obj50 = user0.login("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "qPYDfDnbtD");
        user0.register("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "FNuxCiXmkP", "8ca2ec61-774c-409d-89d5-5b9171b40497", "", "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(parkingSpaceProxy18);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(accountRegistry35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.SpaceManager spaceManager15 = new ParkingSystem.SpaceManager();
        boolean boolean18 = spaceManager15.isSpaceAvailable("hi!", (int) '#');
        spaceManager15.toggleLot("disabled", false);
        ParkingSystem.Booking booking31 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean32 = spaceManager15.assignBooking("empty", (int) (short) 0, booking31);
        java.lang.String str33 = booking31.getClientId();
        boolean boolean34 = parkingSpace10.assignBooking(booking31);
        java.lang.String str35 = booking31.getClientId();
        double double36 = booking31.getTotalCost();
        java.lang.String str37 = booking31.getLotId();
        java.lang.String str38 = booking31.getLotId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "staff" + "'", str33, "staff");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "staff" + "'", str35, "staff");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "jane" + "'", str37, "jane");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "jane" + "'", str38, "jane");
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        ParkingSystem.Booking booking3 = client0.getBookingDetails();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj13 = parkingSpaceProxy10.login("empty", "Jane");
        parkingSpaceProxy10.validateClient("Jane");
        parkingSpaceProxy10.toggleSpace("", "staff", false);
        accountRegistry8.assignProxyToManager("pass", parkingSpaceProxy10);
        ParkingSystem.Client client22 = accountRegistry8.getClient("");
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry8);
        boolean boolean29 = accountRegistry8.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy31.getRegistry();
        boolean boolean34 = parkingSpaceProxy31.checkIn("");
        parkingSpaceProxy31.toggleLot("", true);
        accountRegistry8.assignProxyToManager("", parkingSpaceProxy31);
        client0.assignProxy(parkingSpaceProxy31);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy40 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking42 = parkingSpaceProxy40.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade43 = parkingSpaceProxy40.getFacade();
        boolean boolean45 = parkingSpaceProxy40.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy40.autoGenerateManager();
        client0.assignProxy(parkingSpaceProxy40);
        boolean boolean49 = parkingSpaceProxy40.cancelBooking("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "8ca2ec61-774c-409d-89d5-5b9171b40497" + "'", str2, "8ca2ec61-774c-409d-89d5-5b9171b40497");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(booking42);
        org.junit.Assert.assertNotNull(parkingSpaceFacade43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        client0.assignProxy(parkingSpaceProxy17);
        parkingSpaceProxy17.validateClient("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        parkingSpaceProxy17.toggleLot("empty", true);
        java.lang.Object obj29 = parkingSpaceProxy17.login("3b453211-7dd1-4452-8741-a206711c1217", "86z9Z9e0MN");
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy17.getRegistry();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry30.loadSuperManagerFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded total cost of $1.0" + "'", str1, "Refunded total cost of $1.0");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(accountRegistry30);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        boolean boolean50 = booking48.isCheckedIn();
        java.lang.String str51 = booking48.getClientId();
        boolean boolean52 = parkingSpace10.assignBooking(booking48);
        ParkingSystem.SpaceState spaceState53 = parkingSpace10.getState();
        ParkingSystem.SpaceState spaceState54 = parkingSpace10.getState();
        boolean boolean55 = parkingSpace10.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "staff" + "'", str51, "staff");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(spaceState53);
        org.junit.Assert.assertNotNull(spaceState54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        checkInManager1.refundMessage = "13b04414-31a5-407f-8ea3-fba4613c73d1";
        java.lang.String str4 = checkInManager1.refundMessage;
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str4, "13b04414-31a5-407f-8ea3-fba4613c73d1");
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager1 = parkingSpaceFacade0.getBookingManager();
        java.lang.String str4 = parkingSpaceFacade0.scanSpace("jane", "Jane");
        parkingSpaceFacade0.toggleSpace("empty", "Refunded total cost of $1.0", false);
        java.lang.String str11 = parkingSpaceFacade0.scanSpace("qMzKSKOI", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        org.junit.Assert.assertNotNull(bookingManager1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Paid $ 100.0 with Mobile Pay", false);
        boolean boolean21 = parkingSpaceFacade0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "4a1f2343-8b2e-4dea-ba69-efd105414390", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "", (int) (byte) 1, "pass", (int) (byte) 10, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "Paid $ 100.0 with Mobile Pay");
        ParkingSystem.CheckInManager checkInManager22 = parkingSpaceFacade0.getCheckInManager();
        java.lang.String str23 = checkInManager22.refundMessage;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(checkInManager22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        ParkingSystem.AccountRegistry accountRegistry12 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager13 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry12);
        boolean boolean15 = accountRegistry12.requiresValidation("disabled");
        int int16 = accountRegistry12.getManagersSize();
        boolean boolean22 = accountRegistry12.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj27 = parkingSpaceProxy24.login("empty", "Jane");
        parkingSpaceProxy24.validateClient("Jane");
        parkingSpaceProxy24.toggleSpace("", "staff", false);
        boolean boolean35 = parkingSpaceProxy24.cancelBooking("Jane");
        accountRegistry12.assignProxyToClient("pass", parkingSpaceProxy24);
        parkingSpaceProxy24.autoGenerateManager();
        parkingSpaceProxy24.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        superManager4.assignProxy(parkingSpaceProxy24);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade43 = parkingSpaceProxy24.getFacade();
        boolean boolean49 = parkingSpaceProxy24.register("Paid $ 100.0 with Mobile Pay", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4", "Refunded total cost of $100.0", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 1470.0 with Mobile Pay" + "'", str5, "Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 1470.0 with Mobile Pay" + "'", str6, "Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNotNull(superManager13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace(4);
        ParkingSystem.Booking booking2 = parkingSpace1.getCurrentBooking();
        org.junit.Assert.assertNull(booking2);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap2 = bookingManager0.getActiveBookings();
        org.junit.Assert.assertNotNull(strMap2);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = user0.parkingProxy;
        java.lang.Object obj20 = user0.login("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        java.lang.Object obj23 = user0.login("Paid $ 1470.0 with Mobile Pay", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        java.lang.Object obj26 = user0.login("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-22138484-eb59-490e-9c41-9fd9c319dcda");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str6, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceProxy17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = bookingManager0.extendBooking("disabled", 100, "2afd610d-a8cb-413a-bbee-7927f86b526c", "empty");
        boolean boolean8 = bookingManager0.cancelBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.extendBooking("aswfJGJtdF", (int) (byte) -1, "Refunded deposit of $0.0", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager0.getSpaceManager();
        boolean boolean12 = bookingManager0.editBooking("", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0);
        boolean boolean16 = bookingManager0.editBooking("89de8237-29df-4908-9de4-6dc1ce90de94", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 52);
        double double19 = bookingManager0.calculateCost("CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f", 100);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1515.0d + "'", double19 == 1515.0d);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "4a1f2343-8b2e-4dea-ba69-efd105414390", accountRegistry3);
        java.lang.String str5 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 1.0 with Mobile Pay" + "'", str5, "Paid $ 1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry6);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager1 = parkingSpaceFacade0.getBookingManager();
        java.lang.String str4 = parkingSpaceFacade0.scanSpace("jane", "Jane");
        parkingSpaceFacade0.toggleSpace("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "Refunded total cost of $10.0", false);
        boolean boolean11 = parkingSpaceFacade0.extendBooking("Refunded without deposit ($1.0)", (int) ' ');
        org.junit.Assert.assertNotNull(bookingManager1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("8ca2ec61-774c-409d-89d5-5b9171b40497", "CLT-92729d37-9255-42b4-9361-c1978aadacb0", (int) '#', "hi!", 0, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", 0.0d);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        boolean boolean29 = parkingSpaceProxy15.checkOut("Refunded total cost of $-1.0");
        boolean boolean31 = parkingSpaceProxy15.checkIn("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager6.getSpaceManager();
        double double11 = bookingManager6.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit12 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        boolean boolean18 = debitOrCredit12.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        ParkingSystem.MobilePay mobilePay20 = new ParkingSystem.MobilePay();
        boolean boolean25 = mobilePay20.processPayment("hi!", (-1.0d), "", "");
        boolean boolean30 = mobilePay20.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean35 = mobilePay20.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay20);
        ParkingSystem.Booking booking38 = bookingManager0.getBooking("qPYDfDnbtD");
        boolean boolean42 = bookingManager0.editBooking("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) (byte) -1);
        ParkingSystem.BookingManager bookingManager43 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager44 = new ParkingSystem.CheckInManager(bookingManager43);
        ParkingSystem.Booking booking46 = bookingManager43.getBooking("");
        ParkingSystem.SpaceManager spaceManager47 = bookingManager43.getSpaceManager();
        boolean boolean57 = bookingManager43.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double59 = bookingManager43.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit60 = new ParkingSystem.DebitOrCredit();
        bookingManager43.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit60);
        java.lang.String str62 = debitOrCredit60.getPaymentMessage();
        boolean boolean67 = debitOrCredit60.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded without deposit ($0.0)", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit60);
        ParkingSystem.SpaceManager spaceManager69 = bookingManager0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 165.0d + "'", double11 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(booking38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(booking46);
        org.junit.Assert.assertNotNull(spaceManager47);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 15.0d + "'", double59 == 15.0d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(spaceManager69);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager0.loadParkingLots(strMap6);
        ParkingSystem.Client client8 = ParkingSystem.Client.getInstance();
        java.lang.String str9 = client8.getClientType();
        cSVManager0.saveClient(client8);
        boolean boolean11 = client8.checkOut();
        java.lang.String str12 = client8.getClientType();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str9, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.Client client27 = ParkingSystem.Client.getInstance();
        java.lang.String str28 = client27.getClientType();
        java.lang.String str29 = client27.getPassword();
        user0.user = client27;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = null;
        user0.parkingProxy = parkingSpaceProxy31;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry34 = parkingSpaceProxy33.getRegistry();
        java.lang.String str37 = parkingSpaceProxy33.scanSpace("empty", "hi!");
        boolean boolean47 = parkingSpaceProxy33.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy33.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean57 = parkingSpaceProxy33.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        boolean boolean61 = parkingSpaceProxy33.editBooking("disabled", "Card number should be 16 digits", (int) (byte) -1);
        java.lang.Object obj64 = parkingSpaceProxy33.login("Paid $ 0.0 with Mobile Pay", "jane");
        java.lang.Object obj67 = parkingSpaceProxy33.login("", "ST001");
        user0.parkingProxy = parkingSpaceProxy33;
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(client27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "empty" + "'", str28, "empty");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str29, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "disabled" + "'", str37, "disabled");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean16 = parkingSpaceProxy14.cancelBooking("pass");
        parkingSpaceProxy14.toggleSpace("jane", "Paid $ -1.0 with Mobile Pay", false);
        boolean boolean22 = parkingSpaceProxy14.checkOut("Paid $ 0.0 with Mobile Pay");
        boolean boolean26 = parkingSpaceProxy14.editBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", 0);
        client0.assignProxy(parkingSpaceProxy14);
        java.lang.String str28 = client0.getUsername();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Refunded total cost of $1.0" + "'", str10, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "jane" + "'", str12, "jane");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str28, "Paid $ -1.0 with Mobile Pay");
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("hi!", (-1.0d), "", "");
        boolean boolean10 = mobilePay0.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str11 = mobilePay0.getPaymentMessage();
        boolean boolean16 = mobilePay0.processPayment("8812812f-8c58-440e-9188-ca0b1f996ced", (double) (byte) -1, "8ca2ec61-774c-409d-89d5-5b9171b40497", "aa9c00f6-ec11-46c5-a72b-a7f620703e51");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str11, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        ParkingSystem.CSVManager cSVManager5 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList7 = cSVManager5.readCSV("");
        java.util.List<java.lang.String[]> strArrayList9 = cSVManager5.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap10 = null;
        cSVManager5.loadParkingLots(strMap10);
        ParkingSystem.AccountRegistry accountRegistry15 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager16 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry15);
        ParkingSystem.Manager manager17 = superManager16.autoGenerateManager();
        cSVManager5.saveManager((ParkingSystem.Manager) superManager16);
        ParkingSystem.SpaceManager spaceManager19 = new ParkingSystem.SpaceManager();
        boolean boolean22 = spaceManager19.isSpaceAvailable("hi!", (int) '#');
        spaceManager19.toggleLot("disabled", false);
        ParkingSystem.Booking booking35 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean36 = spaceManager19.assignBooking("empty", (int) (short) 0, booking35);
        spaceManager19.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap38 = spaceManager19.getParkingLots();
        cSVManager5.loadParkingLots(strMap38);
        java.lang.String[] strArray40 = cSVManager5.loadSuperManager();
        ParkingSystem.CSVManager cSVManager41 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList43 = cSVManager41.readCSV("");
        java.util.List<java.lang.String[]> strArrayList45 = cSVManager41.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray46 = cSVManager41.loadSuperManager();
        ParkingSystem.SpaceManager spaceManager47 = new ParkingSystem.SpaceManager();
        spaceManager47.removeBooking("hi!", (int) (byte) 0);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap51 = spaceManager47.getParkingLots();
        cSVManager41.saveParkingLots(strMap51);
        cSVManager5.loadParkingLots(strMap51);
        cSVManager0.loadParkingLots(strMap51);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList7);
        org.junit.Assert.assertNotNull(strArrayList9);
        org.junit.Assert.assertNotNull(superManager16);
        org.junit.Assert.assertNotNull(manager17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strArray40);
// flaky "44) test2262(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray40, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList43);
        org.junit.Assert.assertNotNull(strArrayList45);
        org.junit.Assert.assertNotNull(strArray46);
// flaky "21) test2262(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray46, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean21 = debitOrCredit6.validateCard("Jane", (double) '4');
        java.lang.String str22 = debitOrCredit6.getPaymentMessage();
        boolean boolean25 = debitOrCredit6.validateCard("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (double) 0L);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Card number should be 16 digits" + "'", str22, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        cSVManager0.updateClientValidation("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", false);
        cSVManager0.updateClientValidation("Refunded without deposit ($-15.0)", false);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getClientId();
        boolean boolean11 = client0.getIsValidated();
        java.lang.String str12 = client0.getExtraId();
        java.lang.String str13 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "45) test2265(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb" + "'", str10, "CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Refunded total cost of $1.0" + "'", str12, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Refunded total cost of $1.0" + "'", str13, "Refunded total cost of $1.0");
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        boolean boolean11 = client2.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        client2.assignProxy(parkingSpaceProxy12);
        ParkingSystem.AccountRegistry accountRegistry14 = parkingSpaceProxy12.getRegistry();
        boolean boolean16 = parkingSpaceProxy12.checkIn("hi!");
        user0.parkingProxy = parkingSpaceProxy12;
        java.lang.Object obj20 = user0.login("", "Paid $ 15.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "jane" + "'", str3, "jane");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(accountRegistry14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager0.loadParkingLots(strMap6);
        cSVManager0.updateClientValidation("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", true);
        org.junit.Assert.assertNotNull(strArrayList2);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = parkingSpaceProxy15.getFacade();
        boolean boolean23 = parkingSpaceFacade20.extendBooking("empty", (-1));
        ParkingSystem.Booking booking25 = parkingSpaceFacade20.getBookingDetails("jane");
        boolean boolean35 = parkingSpaceFacade20.confirmBooking("qPYDfDnbtD", "Refunded total cost of $-1.0", "Card number should be 16 digits", "disabled", (int) '#', "Refunded total cost of $100.0", (int) (short) 100, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-96.0)");
        boolean boolean37 = parkingSpaceFacade20.checkOut("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(parkingSpaceFacade20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(booking25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        checkInManager1.refundMessage = "";
        boolean boolean5 = checkInManager1.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        java.lang.String str6 = checkInManager1.refundMessage;
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean15 = parkingSpaceFacade0.checkOut("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.BookingManager bookingManager16 = parkingSpaceFacade0.getBookingManager();
        boolean boolean18 = parkingSpaceFacade0.checkIn("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        java.lang.String str21 = parkingSpaceFacade0.scanSpace("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookingManager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "disabled" + "'", str21, "disabled");
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.CSVManager cSVManager14 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList16 = cSVManager14.readCSV("");
        java.util.List<java.lang.String[]> strArrayList18 = cSVManager14.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap19 = null;
        cSVManager14.loadParkingLots(strMap19);
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.Manager manager26 = superManager25.autoGenerateManager();
        cSVManager14.saveManager((ParkingSystem.Manager) superManager25);
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        spaceManager28.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager28.getParkingLots();
        cSVManager14.loadParkingLots(strMap47);
        ParkingSystem.SpaceManager spaceManager49 = new ParkingSystem.SpaceManager();
        boolean boolean52 = spaceManager49.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str55 = spaceManager49.scanSpace("disabled", "");
        spaceManager49.addParkingLot("hi!");
        java.lang.String str60 = spaceManager49.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap61 = spaceManager49.getParkingLots();
        cSVManager14.saveParkingLots(strMap61);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade63 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str66 = parkingSpaceFacade63.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager67 = parkingSpaceFacade63.getSpaceManager();
        spaceManager67.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap70 = spaceManager67.getParkingLots();
        cSVManager14.saveParkingLots(strMap70);
        cSVManager0.loadParkingLots(strMap70);
        ParkingSystem.Client client73 = ParkingSystem.Client.getInstance();
        java.lang.String str74 = client73.getClientType();
        java.lang.String str75 = client73.getName();
        cSVManager0.saveClient(client73);
        ParkingSystem.AccountRegistry accountRegistry80 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager81 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry80);
        java.lang.String str82 = superManager81.getManagerId();
        java.lang.String str83 = superManager81.getManagerId();
        ParkingSystem.Manager manager84 = superManager81.autoGenerateManager();
        manager84.setManagerInfo("pass", "", "staff");
        cSVManager0.saveManager(manager84);
        java.util.List<java.lang.String[]> strArrayList91 = cSVManager0.readCSV("H33Itw4InT");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(strArrayList16);
        org.junit.Assert.assertNotNull(strArrayList18);
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(manager26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "disabled" + "'", str60, "disabled");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertNotNull(spaceManager67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(client73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "disabled" + "'", str74, "disabled");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(superManager81);
// flaky "46) test2271(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
// flaky "22) test2271(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(manager84);
        org.junit.Assert.assertNotNull(strArrayList91);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        ParkingSystem.AccountRegistry accountRegistry12 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager13 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry12);
        boolean boolean15 = accountRegistry12.requiresValidation("disabled");
        int int16 = accountRegistry12.getManagersSize();
        boolean boolean22 = accountRegistry12.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj27 = parkingSpaceProxy24.login("empty", "Jane");
        parkingSpaceProxy24.validateClient("Jane");
        parkingSpaceProxy24.toggleSpace("", "staff", false);
        boolean boolean35 = parkingSpaceProxy24.cancelBooking("Jane");
        accountRegistry12.assignProxyToClient("pass", parkingSpaceProxy24);
        parkingSpaceProxy24.autoGenerateManager();
        parkingSpaceProxy24.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        superManager4.assignProxy(parkingSpaceProxy24);
        superManager4.displayPendingValidations();
        superManager4.validateClient("8ca2ec61-774c-409d-89d5-5b9171b40497");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "47) test2272(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
// flaky "23) test2272(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNotNull(superManager13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str23 = parkingSpaceFacade20.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager24 = parkingSpaceFacade20.getSpaceManager();
        spaceManager24.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap27 = spaceManager24.getParkingLots();
        user0.user = spaceManager24;
        java.lang.Object obj29 = null;
        user0.user = obj29;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy34.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy37 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj40 = parkingSpaceProxy37.login("empty", "Jane");
        parkingSpaceProxy37.validateClient("Jane");
        parkingSpaceProxy37.toggleSpace("", "staff", false);
        accountRegistry35.assignProxyToManager("pass", parkingSpaceProxy37);
        ParkingSystem.Client client49 = accountRegistry35.getClient("");
        ParkingSystem.SuperManager superManager50 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry35);
        boolean boolean56 = accountRegistry35.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy58 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry59 = parkingSpaceProxy58.getRegistry();
        boolean boolean61 = parkingSpaceProxy58.checkIn("");
        parkingSpaceProxy58.toggleLot("", true);
        accountRegistry35.assignProxyToManager("", parkingSpaceProxy58);
        user0.parkingProxy = parkingSpaceProxy58;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy67 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj70 = parkingSpaceProxy67.login("empty", "Jane");
        boolean boolean73 = parkingSpaceProxy67.extendBooking("pass", 0);
        boolean boolean75 = parkingSpaceProxy67.checkOut("Paid $ 10.0 with Mobile Pay");
        java.lang.String str78 = parkingSpaceProxy67.scanSpace("hi!", "Jane");
        boolean boolean80 = parkingSpaceProxy67.cancelBooking("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean82 = parkingSpaceProxy67.checkIn("86z9Z9e0MN");
        boolean boolean85 = parkingSpaceProxy67.extendBooking("staff", (int) (short) -1);
        user0.assignProxy(parkingSpaceProxy67);
        user0.register("SRiN5ev00N", "CLT-631eb509-a6c4-407c-b16d-582a6faabddb", "Refunded deposit of $0.0", "K6PkM9rcCx", "CLT-390234b0-d56e-4275-bd7b-122280609c69");
        java.lang.Object obj95 = user0.login("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(spaceManager24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(accountRegistry35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(client49);
        org.junit.Assert.assertNotNull(superManager50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(accountRegistry59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "disabled" + "'", str78, "disabled");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.ParkingSpace parkingSpace3 = null;
        java.lang.String str4 = disabled0.scanSpace(parkingSpace3);
        ParkingSystem.ParkingLot parkingLot6 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking8 = null;
        boolean boolean9 = parkingLot6.assignBooking(0, booking8);
        boolean boolean11 = parkingLot6.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator12 = parkingLot6.getIterator();
        boolean boolean13 = parkingLotIterator12.hasNext();
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLotIterator12.next();
        ParkingSystem.ParkingSpace parkingSpace15 = parkingLotIterator12.next();
        java.lang.String str16 = disabled0.scanSpace(parkingSpace15);
        boolean boolean17 = parkingSpace15.isAvailable();
        boolean boolean18 = parkingSpace15.isAvailable();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNotNull(parkingSpace15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.CheckInManager checkInManager3 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8", "09622cbf-e665-45db-b1ad-365065947a20", (int) (byte) -1);
        ParkingSystem.Booking booking9 = parkingSpaceFacade0.getBookingDetails("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(checkInManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(booking9);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        spaceManager0.addParkingLot("");
        ParkingSystem.SpaceManager spaceManager8 = new ParkingSystem.SpaceManager();
        boolean boolean11 = spaceManager8.isSpaceAvailable("hi!", (int) '#');
        spaceManager8.toggleLot("disabled", false);
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = spaceManager8.assignBooking("empty", (int) (short) 0, booking24);
        boolean boolean26 = booking24.isCheckedIn();
        boolean boolean27 = spaceManager0.assignBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (byte) 0, booking24);
        spaceManager0.addParkingLot("4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        boolean boolean13 = accountRegistry6.requiresValidation("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking17 = parkingSpaceProxy15.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy15.getRegistry();
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("staff", "Jane", false);
        parkingSpaceProxy15.displayPendingValidations();
        accountRegistry6.assignProxyToClient("8ca2ec61-774c-409d-89d5-5b9171b40497", parkingSpaceProxy15);
        ParkingSystem.AccountRegistry accountRegistry26 = parkingSpaceProxy15.getRegistry();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(booking17);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertNotNull(accountRegistry26);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        java.lang.String str2 = client0.getName();
        java.lang.String str3 = client0.getClientType();
        java.lang.String str4 = client0.getPassword();
        client0.setValidated(true);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "SRiN5ev00N" + "'", str1, "SRiN5ev00N");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "SRiN5ev00N" + "'", str2, "SRiN5ev00N");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "K6PkM9rcCx" + "'", str3, "K6PkM9rcCx");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Refunded deposit of $0.0" + "'", str4, "Refunded deposit of $0.0");
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        parkingSpaceProxy2.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry17 = parkingSpaceProxy2.getRegistry();
        parkingSpaceProxy2.validateClient("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(accountRegistry17);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        boolean boolean22 = parkingSpaceProxy15.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) ' ');
        boolean boolean32 = parkingSpaceProxy15.confirmBooking("", "staff", "Refunded total cost of $1.0", "CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        ParkingSystem.Booking booking34 = parkingSpaceProxy15.getBookingDetails("qMzKSKOI");
        org.junit.Assert.assertNotNull(client0);
// flaky "48) test2280(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(booking34);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        ParkingSystem.Manager manager5 = superManager4.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        java.lang.String str10 = parkingSpaceProxy6.scanSpace("empty", "hi!");
        parkingSpaceProxy6.addParkingLot("empty");
        parkingSpaceProxy6.addParkingLot("");
        superManager4.assignProxy(parkingSpaceProxy6);
        ParkingSystem.Manager manager16 = superManager4.autoGenerateManager();
        java.lang.String str17 = manager16.getPassword();
        java.lang.String str18 = manager16.getManagerId();
// flaky "49) test2281(RegressionTest4)":         manager16.validateClient("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(manager5);
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(manager16);
// flaky "24) test2281(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "kYN6YZxC3k" + "'", str17, "kYN6YZxC3k");
// flaky "12) test2281(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str18, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double4 = bookingManager0.getHourlyRate("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        boolean boolean8 = bookingManager0.editBooking("Paid $ 1.0 with Mobile Pay", "WxoDOyjI", (int) (short) 0);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 15.0d + "'", double4 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry23 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry23);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = null;
        accountRegistry23.assignProxyToManager("disabled", parkingSpaceProxy26);
        boolean boolean29 = accountRegistry23.requiresValidation("disabled");
        int int30 = accountRegistry23.getManagersSize();
        superManager19.registry = accountRegistry23;
        superManager19.displayPendingValidations();
        java.lang.String str33 = superManager19.getManagerId();
        java.lang.String str34 = superManager19.getManagerId();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(superManager24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
// flaky "50) test2283(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
// flaky "25) test2283(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        boolean boolean5 = parkingSpaceFacade0.checkOut("disabled");
        ParkingSystem.SpaceManager spaceManager6 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean9 = parkingSpaceFacade0.extendBooking("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(spaceManager6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        client0.setClientInfo("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Paid $ -1.0 with Mobile Pay", "2afd610d-a8cb-413a-bbee-7927f86b526c", "2afd610d-a8cb-413a-bbee-7927f86b526c", "empty", "disabled", false);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = client0.cancelBooking();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.cancelBooking(String)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceProxy4.addParkingLot("Jane");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade12 = parkingSpaceProxy4.getFacade();
        ParkingSystem.CheckInManager checkInManager13 = parkingSpaceFacade12.getCheckInManager();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str1, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertNotNull(parkingSpaceFacade12);
        org.junit.Assert.assertNotNull(checkInManager13);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.Booking booking6 = parkingSpaceFacade0.getBookingDetails("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNull(booking6);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Paid $ 100.0 with Mobile Pay", false);
        boolean boolean21 = parkingSpaceFacade0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "4a1f2343-8b2e-4dea-ba69-efd105414390", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "", (int) (byte) 1, "pass", (int) (byte) 10, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager22 = parkingSpaceFacade0.getBookingManager();
        double double24 = bookingManager22.getDeposit("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        ParkingSystem.BookingManager bookingManager25 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager26 = new ParkingSystem.CheckInManager(bookingManager25);
        ParkingSystem.SpaceManager spaceManager27 = bookingManager25.getSpaceManager();
        double double30 = bookingManager25.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit31 = new ParkingSystem.DebitOrCredit();
        bookingManager25.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean37 = debitOrCredit31.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str38 = debitOrCredit31.getPaymentMessage();
        boolean boolean43 = debitOrCredit31.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean46 = debitOrCredit31.validateCard("Jane", (double) '4');
        java.lang.String str47 = debitOrCredit31.getPaymentMessage();
        bookingManager22.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean58 = bookingManager22.confirmBooking("86z9Z9e0MN", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", "CLT-7df99776-6818-4843-8c88-c29a926a9d29", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 3, "Refunded without deposit ($1.0)", 0, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bookingManager22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 165.0d + "'", double30 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Card number should be 16 digits" + "'", str38, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Card number should be 16 digits" + "'", str47, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager19 = bookingManager0.getSpaceManager();
        double double21 = bookingManager0.getDeposit("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        double double23 = bookingManager0.getDeposit("Jane");
        double double25 = bookingManager0.getHourlyRate("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(spaceManager19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 15.0d + "'", double23 == 15.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 15.0d + "'", double25 == 15.0d);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        boolean boolean5 = parkingSpaceFacade0.checkOut("disabled");
        ParkingSystem.SpaceManager spaceManager6 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean8 = parkingSpaceFacade0.checkIn("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean11 = parkingSpaceFacade0.extendBooking("Paid $ 100.0 with Mobile Pay", 100);
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(spaceManager6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean35 = parkingSpaceProxy14.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry12.assignProxyToManager("empty", parkingSpaceProxy14);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade39 = parkingSpaceProxy38.getFacade();
        accountRegistry12.assignProxyToManager("", parkingSpaceProxy38);
        ParkingSystem.User user42 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj46 = parkingSpaceProxy43.login("empty", "Jane");
        parkingSpaceProxy43.validateClient("Jane");
        parkingSpaceProxy43.toggleSpace("", "staff", false);
        boolean boolean54 = parkingSpaceProxy43.cancelBooking("");
        user42.assignProxy(parkingSpaceProxy43);
        parkingSpaceProxy43.displayPendingValidations();
        boolean boolean60 = parkingSpaceProxy43.editBooking("Paid $ -1.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", 100);
        accountRegistry12.assignProxyToManager("jane", parkingSpaceProxy43);
        parkingSpaceProxy43.validateClient("fhd49ADb");
        boolean boolean69 = parkingSpaceProxy43.register("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", "Paid $ 10.0 with Mobile Pay", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "CLT-b6a8264c-f386-4429-b59c-b7f465002e13", "e8686ac8-1df7-4a9b-b299-8fbcdd585528");
        parkingSpaceProxy43.displayPendingValidations();
        java.lang.Class<?> wildcardClass71 = parkingSpaceProxy43.getClass();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade39);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        boolean boolean29 = accountRegistry3.requiresValidation("empty");
        boolean boolean31 = accountRegistry3.requiresValidation("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        accountRegistry3.validateClient("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj38 = parkingSpaceProxy35.login("empty", "Jane");
        parkingSpaceProxy35.validateClient("Jane");
        parkingSpaceProxy35.toggleSpace("", "staff", false);
        boolean boolean46 = parkingSpaceProxy35.cancelBooking("Jane");
        accountRegistry3.assignProxyToManager("", parkingSpaceProxy35);
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry3.loadSuperManagerFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        boolean boolean16 = accountRegistry6.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Refunded without deposit ($-42.0)", accountRegistry6);
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(superManager17);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        ParkingSystem.BookingManager bookingManager3 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager4 = new ParkingSystem.CheckInManager(bookingManager3);
        ParkingSystem.Booking booking6 = bookingManager3.getBooking("");
        ParkingSystem.SpaceManager spaceManager7 = bookingManager3.getSpaceManager();
        boolean boolean17 = bookingManager3.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double19 = bookingManager3.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean21 = bookingManager3.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry22 = bookingManager3.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry23 = bookingManager3.getAccountRegistry();
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("pass", "Refunded without deposit ($-15.0)", "9fJ5pCUl", accountRegistry23);
        org.junit.Assert.assertNull(booking6);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 15.0d + "'", double19 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(accountRegistry22);
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertNotNull(superManager24);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap8 = accountRegistry6.getManagers();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry6);
        int int10 = accountRegistry6.getManagersSize();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap11 = accountRegistry6.getManagers();
        java.util.List<ParkingSystem.Client> clientList12 = accountRegistry6.displayPendingValidations();
        boolean boolean14 = accountRegistry6.requiresValidation("staff");
        ParkingSystem.Manager manager15 = accountRegistry6.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(clientList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(manager15);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.paymentMessage = "staff";
        boolean boolean4 = paymentManager0.refundDeposit((double) (-1L));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) ' ');
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) ' ', "Refunded total cost of $-1.0", (int) 'a', "staff", (double) (byte) 10);
        boolean boolean20 = parkingLot1.assignBooking((int) ' ', booking19);
        ParkingSystem.ParkingLot parkingLot23 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking25 = null;
        boolean boolean26 = parkingLot23.assignBooking(0, booking25);
        boolean boolean28 = parkingLot23.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator29 = parkingLot23.getIterator();
        boolean boolean30 = parkingLotIterator29.hasNext();
        ParkingSystem.ParkingSpace parkingSpace31 = parkingLotIterator29.next();
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = spaceManager32.assignBooking("disabled", (int) (byte) 0, booking68);
        boolean boolean71 = parkingSpace31.assignBooking(booking68);
        boolean boolean72 = parkingLot1.assignBooking((int) (byte) 10, booking68);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(parkingSpace31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        boolean boolean15 = debitOrCredit6.validateCard("433f3d1f-f758-4ae3-972b-7fb179aedfd7", (double) 0L);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) (short) 100);
        paymentManager0.paymentMessage = "Refunded deposit of $0.0";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded total cost of $1.0" + "'", str7, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        client0.assignProxy(parkingSpaceProxy10);
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy10.getRegistry();
        java.lang.Object obj15 = parkingSpaceProxy10.login("pass", "Jane");
        parkingSpaceProxy10.validateClient("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        boolean boolean12 = accountRegistry9.requiresValidation("disabled");
        int int13 = accountRegistry9.getManagersSize();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        accountRegistry15.validateClient("pass");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry21 = parkingSpaceProxy20.getRegistry();
        java.lang.String str24 = parkingSpaceProxy20.scanSpace("empty", "hi!");
        accountRegistry15.assignProxyToClient("", parkingSpaceProxy20);
        int int26 = accountRegistry15.getManagersSize();
        boolean boolean32 = accountRegistry15.registerClient("CLT-f02c481e-1504-4abf-b598-76152da8586a", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", "4a1f2343-8b2e-4dea-ba69-efd105414390", "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", "CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "disabled" + "'", str24, "disabled");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (short) 10);
        boolean boolean11 = parkingLot1.isSpaceAvailable((int) (byte) 10);
        ParkingSystem.Booking booking20 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int21 = booking20.getDuration();
        java.lang.String str22 = booking20.getClientId();
        booking20.setStartTime("hi!");
        boolean boolean25 = booking20.isCheckedIn();
        double double26 = booking20.getTotalCost();
        boolean boolean27 = booking20.isCheckedIn();
        boolean boolean28 = parkingLot1.assignBooking((int) (byte) -1, booking20);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "staff" + "'", str22, "staff");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        client0.setClientInfo("Jane", "", "pass", "pass", "pass", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj13 = parkingSpaceProxy10.login("empty", "Jane");
        parkingSpaceProxy10.validateClient("Jane");
        parkingSpaceProxy10.toggleSpace("", "staff", false);
        boolean boolean21 = parkingSpaceProxy10.cancelBooking("");
        boolean boolean27 = parkingSpaceProxy10.register("jane", "jane", "Jane", "hi!", "disabled");
        client0.assignProxy(parkingSpaceProxy10);
        java.lang.String str29 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
// flaky "51) test2303(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded deposit of $0.0" + "'", str1, "Refunded deposit of $0.0");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        boolean boolean50 = booking48.isCheckedIn();
        java.lang.String str51 = booking48.getClientId();
        boolean boolean52 = parkingSpace10.assignBooking(booking48);
        java.lang.String str53 = parkingSpace10.scanSpace();
        ParkingSystem.SpaceState spaceState54 = parkingSpace10.getState();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "staff" + "'", str51, "staff");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "disabled" + "'", str53, "disabled");
        org.junit.Assert.assertNotNull(spaceState54);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        double double5 = bookingManager3.getHourlyRate("jane");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        bookingManager3.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        ParkingSystem.Strategy strategy8 = null;
        bookingManager3.setPaymentStrategy(strategy8);
        boolean boolean14 = bookingManager3.extendBooking("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", (int) (short) -1, "Refunded without deposit ($0.0)", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.CheckInManager checkInManager15 = new ParkingSystem.CheckInManager(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking(0);
        ParkingSystem.ParkingLot parkingLot12 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = parkingLot12.assignBooking(0, booking14);
        boolean boolean17 = parkingLot12.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean27 = parkingLot12.assignBooking((int) (short) -1, booking26);
        java.lang.String str28 = booking26.getLotId();
        java.lang.String str29 = booking26.getLicensePlate();
        boolean boolean30 = parkingLot1.assignBooking((int) (short) -1, booking26);
        booking26.setStartTime("Refunded without deposit ($0.0)");
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime33 = booking26.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Refunded without deposit ($0.0)' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "jane" + "'", str28, "jane");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        client0.assignProxy(parkingSpaceProxy10);
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy10.getRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap13 = accountRegistry12.getManagers();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry12.loadSuperManagerFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade0.getBookingManager();
        double double6 = bookingManager4.getDeposit("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        double double8 = bookingManager4.getHourlyRate("Refunded total cost of $10.0");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 15.0d + "'", double6 == 15.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 15.0d + "'", double8 == 15.0d);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean16 = parkingSpaceProxy14.cancelBooking("pass");
        parkingSpaceProxy14.toggleSpace("jane", "Paid $ -1.0 with Mobile Pay", false);
        boolean boolean22 = parkingSpaceProxy14.checkOut("Paid $ 0.0 with Mobile Pay");
        boolean boolean26 = parkingSpaceProxy14.editBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", 0);
        client0.assignProxy(parkingSpaceProxy14);
        boolean boolean35 = client0.confirmBooking("89de8237-29df-4908-9de4-6dc1ce90de94", "Refunded total cost of $100.0", (int) (byte) 100, "Paid $ 10.0 with Mobile Pay", (-1), "disabled", "CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        boolean boolean36 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "52) test2309(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "staff" + "'", str10, "staff");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "jane" + "'", str12, "jane");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) (byte) 10);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry5 = superManager4.getRegistry();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry5.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry5);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        boolean boolean25 = accountRegistry4.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        boolean boolean30 = parkingSpaceProxy27.checkIn("");
        parkingSpaceProxy27.toggleLot("", true);
        accountRegistry4.assignProxyToManager("", parkingSpaceProxy27);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade35 = parkingSpaceProxy27.getFacade();
        parkingSpaceFacade35.toggleSpace("qPYDfDnbtD", "Refunded without deposit ($-42.0)", true);
        boolean boolean42 = parkingSpaceFacade35.extendBooking("9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (byte) 0);
        boolean boolean44 = parkingSpaceFacade35.checkIn("ST001");
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.User user21 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj25 = parkingSpaceProxy22.login("empty", "Jane");
        parkingSpaceProxy22.validateClient("Jane");
        parkingSpaceProxy22.toggleSpace("", "staff", false);
        boolean boolean33 = parkingSpaceProxy22.cancelBooking("");
        user21.assignProxy(parkingSpaceProxy22);
        user0.user = parkingSpaceProxy22;
        java.lang.Object obj38 = user0.login("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "86z9Z9e0MN");
        ParkingSystem.BookingManager bookingManager39 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager40 = new ParkingSystem.CheckInManager(bookingManager39);
        ParkingSystem.Booking booking42 = bookingManager39.getBooking("");
        double double44 = bookingManager39.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        boolean boolean49 = bookingManager39.extendBooking("hi!", (int) (short) 1, "Paid $ 100.0 with Mobile Pay", "Jane");
        user0.user = (short) 1;
        user0.register("CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb", "disabled", "13b04414-31a5-407f-8ea3-fba4613c73d1", "jane", "aa9c00f6-ec11-46c5-a72b-a7f620703e51");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(booking42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 15.0d + "'", double44 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("pass");
        ParkingSystem.SpaceManager spaceManager3 = new ParkingSystem.SpaceManager();
        spaceManager3.toggleLot("Jane", false);
        spaceManager3.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        boolean boolean15 = spaceManager12.isSpaceAvailable("hi!", (int) '#');
        spaceManager12.toggleLot("disabled", false);
        ParkingSystem.Booking booking28 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean29 = spaceManager12.assignBooking("empty", (int) (short) 0, booking28);
        boolean boolean30 = spaceManager3.assignBooking("hi!", 0, booking28);
        double double31 = booking28.getTotalCost();
        booking28.setDuration((-1));
        java.lang.String str34 = booking28.getLotId();
        boolean boolean35 = parkingLot1.assignBooking(1, booking28);
        boolean boolean36 = booking28.isCheckedIn();
        boolean boolean37 = booking28.isCheckedIn();
        int int38 = booking28.getDuration();
        int int39 = booking28.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "jane" + "'", str34, "jane");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getClientId();
        boolean boolean11 = client0.getIsValidated();
        boolean boolean12 = client0.cancelBooking();
        java.lang.String str13 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
// flaky "53) test2315(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "26) test2315(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pass" + "'", str10, "pass");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky "13) test2315(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pass" + "'", str13, "pass");
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean14 = client0.checkIn();
        org.junit.Assert.assertNotNull(client0);
// flaky "54) test2316(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        boolean boolean11 = parkingLot1.isEnabled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        parkingSpaceFacade17.toggleSpace("pass", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean25 = parkingSpaceFacade17.editBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 100);
        ParkingSystem.Booking booking27 = parkingSpaceFacade17.getBookingDetails("disabled");
        boolean boolean29 = parkingSpaceFacade17.checkIn("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean33 = parkingSpaceFacade17.editBooking("Refunded total cost of $0.0", "Paid $ 0.0 with Mobile Pay", 100);
        boolean boolean37 = parkingSpaceFacade17.editBooking("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", "CLT-22138484-eb59-490e-9c41-9fd9c319dcda", 100);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        boolean boolean11 = parkingSpaceProxy0.cancelBooking("");
        java.lang.String str14 = parkingSpaceProxy0.scanSpace("staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean17 = parkingSpaceProxy0.extendBooking("jane", (int) ' ');
        parkingSpaceProxy0.autoGenerateManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade19 = parkingSpaceProxy0.getFacade();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade19);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("Refunded deposit of $0.0");
        ParkingSystem.SpaceManager spaceManager3 = new ParkingSystem.SpaceManager();
        boolean boolean6 = spaceManager3.isSpaceAvailable("hi!", (int) '#');
        spaceManager3.toggleLot("disabled", false);
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean20 = spaceManager3.assignBooking("empty", (int) (short) 0, booking19);
        ParkingSystem.SpaceManager spaceManager23 = new ParkingSystem.SpaceManager();
        boolean boolean26 = spaceManager23.isSpaceAvailable("hi!", (int) '#');
        spaceManager23.toggleLot("disabled", false);
        ParkingSystem.Booking booking39 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean40 = spaceManager23.assignBooking("empty", (int) (short) 0, booking39);
        boolean boolean41 = spaceManager3.assignBooking("disabled", (int) (byte) 0, booking39);
        boolean boolean42 = parkingLot1.assignBooking((int) (short) 0, booking39);
        booking39.setStartTime("iHAHREGIAH");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.SpaceManager spaceManager14 = new ParkingSystem.SpaceManager();
        boolean boolean17 = spaceManager14.isSpaceAvailable("hi!", (int) '#');
        spaceManager14.toggleLot("disabled", false);
        ParkingSystem.Booking booking30 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean31 = spaceManager14.assignBooking("empty", (int) (short) 0, booking30);
        spaceManager14.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager14.getParkingLots();
        cSVManager0.loadParkingLots(strMap33);
        java.lang.String[] strArray35 = cSVManager0.loadSuperManager();
        java.util.List<java.lang.String[]> strArrayList37 = cSVManager0.readCSV("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strArray35);
// flaky "55) test2321(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray35, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList37);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        boolean boolean12 = accountRegistry9.requiresValidation("disabled");
        int int13 = accountRegistry9.getManagersSize();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        accountRegistry15.validateClient("pass");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.AccountRegistry accountRegistry21 = superManager18.getRegistry();
        int int22 = accountRegistry21.getManagersSize();
        ParkingSystem.Client client24 = accountRegistry21.getClient("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj29 = parkingSpaceProxy26.login("empty", "Jane");
        parkingSpaceProxy26.validateClient("Jane");
        parkingSpaceProxy26.toggleSpace("", "staff", false);
        boolean boolean37 = parkingSpaceProxy26.cancelBooking("");
        parkingSpaceProxy26.toggleLot("Paid $ 10.0 with Mobile Pay", true);
        boolean boolean43 = parkingSpaceProxy26.extendBooking("Paid $ 100.0 with Mobile Pay", 1);
        accountRegistry21.assignProxyToManager("FNuxCiXmkP", parkingSpaceProxy26);
        boolean boolean50 = parkingSpaceProxy26.register("13b04414-31a5-407f-8ea3-fba4613c73d1", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "12fea0ad-7859-47d9-95f1-1985d2c4ed33", "iHAHREGIAH", "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(client24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str23 = parkingSpaceFacade20.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager24 = parkingSpaceFacade20.getSpaceManager();
        spaceManager24.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap27 = spaceManager24.getParkingLots();
        user0.user = spaceManager24;
        ParkingSystem.ParkingLot parkingLot32 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking34 = null;
        boolean boolean35 = parkingLot32.assignBooking(0, booking34);
        boolean boolean37 = parkingLot32.isSpaceAvailable((int) '#');
        boolean boolean39 = parkingLot32.isSpaceAvailable((int) (short) 10);
        ParkingSystem.SpaceManager spaceManager41 = new ParkingSystem.SpaceManager();
        spaceManager41.toggleLot("Jane", false);
        spaceManager41.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager50 = new ParkingSystem.SpaceManager();
        boolean boolean53 = spaceManager50.isSpaceAvailable("hi!", (int) '#');
        spaceManager50.toggleLot("disabled", false);
        ParkingSystem.Booking booking66 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean67 = spaceManager50.assignBooking("empty", (int) (short) 0, booking66);
        boolean boolean68 = spaceManager41.assignBooking("hi!", 0, booking66);
        double double69 = booking66.getTotalCost();
        java.lang.String str70 = booking66.getStartTime();
        java.lang.String str71 = booking66.getLotId();
        boolean boolean72 = parkingLot32.assignBooking((int) (byte) -1, booking66);
        boolean boolean73 = spaceManager24.assignBooking("Paid $ 1470.0 with Mobile Pay", (int) '#', booking66);
        booking66.setCheckedIn(true);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str6, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(spaceManager24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Jane" + "'", str70, "Jane");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "jane" + "'", str71, "jane");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean19 = parkingSpaceFacade17.checkIn("");
        java.lang.String str22 = parkingSpaceFacade17.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager23 = parkingSpaceFacade17.getCheckInManager();
        user0.user = parkingSpaceFacade17;
        boolean boolean27 = parkingSpaceFacade17.extendBooking("kYN6YZxC3k", (int) (short) 1);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str6, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
        org.junit.Assert.assertNotNull(checkInManager23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        boolean boolean2 = paymentManager0.refundDeposit(100.0d);
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        boolean boolean7 = paymentManager0.refundWithoutDeposit(0.0d, 1470.0d);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("848f508e-e1d2-4f02-9fc9-e95eee425d36");
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        ParkingSystem.ParkingLot parkingLot7 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking9 = null;
        boolean boolean10 = parkingLot7.assignBooking(0, booking9);
        boolean boolean12 = parkingLot7.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking21 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean22 = parkingLot7.assignBooking((int) (short) -1, booking21);
        booking21.setCheckedIn(false);
        double double25 = booking21.getTotalCost();
        java.lang.String str26 = booking21.getLicensePlate();
        double double27 = booking21.getTotalCost();
        boolean boolean28 = spaceManager0.assignBooking("89de8237-29df-4908-9de4-6dc1ce90de94", (int) (short) 10, booking21);
        spaceManager0.addParkingLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        spaceManager0.addParkingLot("iHAHREGIAH");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        boolean boolean29 = parkingSpaceProxy15.checkOut("Refunded total cost of $-1.0");
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy15.getRegistry();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(accountRegistry30);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        java.lang.String str17 = booking15.getLotId();
        java.lang.String str18 = booking15.getLicensePlate();
        booking15.setStartTime("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime21 = booking15.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text '9701df9a-2178-4ad5-8076-46ff5f05b3e8' could not be parsed at index 2");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "jane" + "'", str17, "jane");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.CheckInManager checkInManager4 = new ParkingSystem.CheckInManager(bookingManager3);
        boolean boolean6 = checkInManager4.checkIn("hi!");
        java.lang.String str7 = checkInManager4.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        java.lang.Object obj23 = user0.login("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "TXCrKOGD");
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = null;
        accountRegistry27.assignProxyToManager("disabled", parkingSpaceProxy30);
        ParkingSystem.AccountRegistry accountRegistry36 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager37 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry36);
        java.lang.String str38 = superManager37.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry42 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager43 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry42);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy45 = null;
        accountRegistry42.assignProxyToManager("disabled", parkingSpaceProxy45);
        superManager37.registry = accountRegistry42;
        ParkingSystem.AccountRegistry accountRegistry48 = superManager37.getRegistry();
        ParkingSystem.Manager manager49 = accountRegistry48.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy51 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry52 = parkingSpaceProxy51.getRegistry();
        boolean boolean58 = parkingSpaceProxy51.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy51.toggleLot("hi!", false);
        accountRegistry48.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy51);
        accountRegistry27.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy51);
        parkingSpaceProxy51.displayPendingValidations();
        boolean boolean66 = parkingSpaceProxy51.cancelBooking("Refunded total cost of $-1.0");
        boolean boolean68 = parkingSpaceProxy51.checkIn("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        user0.user = "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089";
        java.lang.Object obj70 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy71 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking73 = parkingSpaceProxy71.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        boolean boolean79 = parkingSpaceProxy71.register("staff", "pass", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Refunded without deposit ($0.0)", "hi!");
        user0.parkingProxy = parkingSpaceProxy71;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(superManager28);
        org.junit.Assert.assertNotNull(superManager37);
// flaky "56) test2331(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(superManager43);
        org.junit.Assert.assertNotNull(accountRegistry48);
        org.junit.Assert.assertNotNull(manager49);
        org.junit.Assert.assertNotNull(accountRegistry52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + obj70 + "' != '" + "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089" + "'", obj70, "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        org.junit.Assert.assertNull(booking73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean6 = parkingSpaceFacade0.editBooking("Jane", "staff", (int) (short) 100);
        boolean boolean9 = parkingSpaceFacade0.extendBooking("empty", 100);
        ParkingSystem.SpaceManager spaceManager10 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.BookingManager bookingManager11 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(spaceManager10);
        org.junit.Assert.assertNotNull(bookingManager11);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        java.lang.String str5 = superManager4.getName();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        int int7 = accountRegistry6.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "57) test2333(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52" + "'", str5, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        ParkingSystem.Client client10 = accountRegistry8.getClient("ST001");
        ParkingSystem.AccountRegistry accountRegistry15 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager16 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry15);
        boolean boolean18 = accountRegistry15.requiresValidation("disabled");
        int int19 = accountRegistry15.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("Jane");
        accountRegistry15.assignProxyToClient("pass", parkingSpaceProxy21);
        boolean boolean39 = parkingSpaceProxy21.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean45 = parkingSpaceProxy21.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.Booking booking47 = parkingSpaceProxy21.getBookingDetails("hi!");
        boolean boolean49 = parkingSpaceProxy21.checkOut("ST001");
        accountRegistry8.assignProxyToManager("CLT-f02c481e-1504-4abf-b598-76152da8586a", parkingSpaceProxy21);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy52 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj55 = parkingSpaceProxy52.login("empty", "Jane");
        parkingSpaceProxy52.validateClient("Jane");
        parkingSpaceProxy52.toggleSpace("", "staff", false);
        boolean boolean63 = parkingSpaceProxy52.cancelBooking("");
        java.lang.String str66 = parkingSpaceProxy52.scanSpace("staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean69 = parkingSpaceProxy52.extendBooking("jane", (int) ' ');
        boolean boolean72 = parkingSpaceProxy52.extendBooking("Refunded without deposit ($-42.0)", (int) '4');
        accountRegistry8.assignProxyToClient("8812812f-8c58-440e-9188-ca0b1f996ced", parkingSpaceProxy52);
        java.util.List<ParkingSystem.Client> clientList74 = accountRegistry8.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "58) test2334(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
// flaky "27) test2334(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertNotNull(superManager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(booking47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(clientList74);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean24 = parkingSpaceProxy0.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        boolean boolean28 = parkingSpaceProxy0.editBooking("disabled", "Card number should be 16 digits", (int) (byte) -1);
        java.lang.Object obj31 = parkingSpaceProxy0.login("Paid $ 0.0 with Mobile Pay", "jane");
        java.lang.Object obj34 = parkingSpaceProxy0.login("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        parkingSpaceProxy0.displayPendingValidations();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        boolean boolean6 = parkingSpaceProxy0.extendBooking("pass", 0);
        boolean boolean8 = parkingSpaceProxy0.checkOut("Paid $ 10.0 with Mobile Pay");
        java.lang.String str11 = parkingSpaceProxy0.scanSpace("hi!", "Jane");
        boolean boolean13 = parkingSpaceProxy0.cancelBooking("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean15 = parkingSpaceProxy0.checkIn("86z9Z9e0MN");
        boolean boolean19 = parkingSpaceProxy0.editBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "", 3);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = bookingManager0.extendBooking("jane", (int) (byte) 100, "hi!", "jane");
        boolean boolean10 = bookingManager0.editBooking("jane", "Jane", 0);
        boolean boolean12 = bookingManager0.cancelBooking("CLT-55105d92-54d6-44d2-965a-736022b7f7cd");
        double double14 = bookingManager0.getDeposit("ua4ppOLtSl");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 15.0d + "'", double14 == 15.0d);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        boolean boolean16 = parkingSpaceFacade0.confirmBooking("Refunded without deposit ($-42.0)", "Refunded without deposit ($-42.0)", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ 100.0 with Mobile Pay", (int) '#', "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 0, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Paid $ 10.0 with Mobile Pay");
        boolean boolean19 = parkingSpaceFacade0.extendBooking("02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (byte) 1);
        ParkingSystem.CheckInManager checkInManager20 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.BookingManager bookingManager21 = parkingSpaceFacade0.getBookingManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap22 = bookingManager21.getActiveBookings();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(checkInManager20);
        org.junit.Assert.assertNotNull(bookingManager21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        boolean boolean23 = bookingManager18.extendBooking("Paid $ 0.0 with Mobile Pay", (int) 'a', "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        double double26 = bookingManager18.calculateCost("0K5j4sX8PY", 4);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 75.0d + "'", double26 == 75.0d);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = parkingSpaceProxy0.getFacade();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy0.getRegistry();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry4.loadManagersFromCSV();
// flaky "59) test2340(RegressionTest4)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(parkingSpaceFacade3);
        org.junit.Assert.assertNotNull(accountRegistry4);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry9 = parkingSpaceProxy8.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj14 = parkingSpaceProxy11.login("empty", "Jane");
        parkingSpaceProxy11.validateClient("Jane");
        parkingSpaceProxy11.toggleSpace("", "staff", false);
        accountRegistry9.assignProxyToManager("pass", parkingSpaceProxy11);
        ParkingSystem.Client client23 = accountRegistry9.getClient("");
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry9);
        superManager4.registry = accountRegistry9;
        java.lang.String str26 = superManager4.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertNotNull(superManager24);
// flaky "60) test2341(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Refunded without deposit ($0.0)" + "'", str26, "Refunded without deposit ($0.0)");
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        boolean boolean11 = parkingSpaceProxy0.cancelBooking("");
        java.lang.String str14 = parkingSpaceProxy0.scanSpace("staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean17 = parkingSpaceProxy0.extendBooking("jane", (int) ' ');
        boolean boolean19 = parkingSpaceProxy0.checkIn("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        parkingSpaceProxy0.validateClient("Refunded total cost of $1.0");
        ParkingSystem.Booking booking23 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(booking23);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        parkingLot1.removeBooking(10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(32);
        ParkingSystem.ParkingLotIterator parkingLotIterator12 = parkingLot1.getIterator();
        ParkingSystem.ParkingLot parkingLot15 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking17 = null;
        boolean boolean18 = parkingLot15.assignBooking(0, booking17);
        ParkingSystem.Booking booking20 = null;
        boolean boolean21 = parkingLot15.assignBooking(1, booking20);
        ParkingSystem.ParkingLot parkingLot24 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking26 = null;
        boolean boolean27 = parkingLot24.assignBooking(0, booking26);
        boolean boolean29 = parkingLot24.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = parkingLot24.assignBooking((int) (short) -1, booking38);
        java.lang.String str40 = booking38.getLotId();
        boolean boolean41 = parkingLot15.assignBooking(0, booking38);
        booking38.setCheckedIn(true);
        java.lang.String str44 = booking38.getLotId();
        int int45 = booking38.getSpaceId();
        boolean boolean46 = parkingLot1.assignBooking((-1), booking38);
        java.lang.String str47 = booking38.getStartTime();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNotNull(parkingLotIterator12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "jane" + "'", str40, "jane");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "jane" + "'", str44, "jane");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Jane" + "'", str47, "Jane");
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        java.lang.String str22 = superManager21.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager21.registry;
        java.lang.String str24 = superManager21.getManagerId();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        superManager21.assignProxy(parkingSpaceProxy35);
        user0.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry39 = parkingSpaceProxy35.getRegistry();
        boolean boolean41 = parkingSpaceProxy35.checkOut("Refunded total cost of $1.0");
        parkingSpaceProxy35.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        parkingSpaceProxy35.displayPendingValidations();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
// flaky "61) test2344(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(accountRegistry23);
// flaky "28) test2344(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("", "K6PkM9rcCx", (int) (byte) 100, "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", 10, "4a1f2343-8b2e-4dea-ba69-efd105414390", (double) (byte) 0);
        int int8 = booking7.getSpaceId();
        java.lang.String str9 = booking7.getClientId();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean24 = bookingManager0.editBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", (int) (short) 100);
        double double26 = bookingManager0.getDeposit("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean36 = bookingManager0.confirmBooking("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", "4a1f2343-8b2e-4dea-ba69-efd105414390", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", (int) (byte) 0, "Refunded total cost of $1.0", (int) (short) 100, "empty", "Refunded total cost of $0.0");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 15.0d + "'", double26 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str8 = booking7.getLotId();
        int int9 = booking7.getSpaceId();
        java.lang.String str10 = booking7.getStartTime();
        int int11 = booking7.getSpaceId();
        booking7.setDuration((int) (byte) -1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "jane" + "'", str8, "jane");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Jane" + "'", str10, "Jane");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        ParkingSystem.Manager manager0 = ParkingSystem.Manager.getInstance();
        manager0.setManagerInfo("hi!", "disabled", "hi!");
        java.lang.String str5 = manager0.getManagerId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = null;
        manager0.assignProxy(parkingSpaceProxy6);
        java.lang.String str8 = manager0.getManagerId();
        java.lang.String str9 = manager0.getManagerId();
        java.lang.String str10 = manager0.getName();
        java.lang.String str11 = manager0.getPassword();
        org.junit.Assert.assertNotNull(manager0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str8 = booking7.getLotId();
        int int9 = booking7.getSpaceId();
        java.lang.String str10 = booking7.getLotId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "jane" + "'", str8, "jane");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "jane" + "'", str10, "jane");
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        java.lang.String str6 = spaceManager0.scanSpace("jane", "");
        spaceManager0.addParkingLot("disabled");
        java.lang.String str11 = spaceManager0.scanSpace("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        ParkingSystem.AccountRegistry accountRegistry21 = superManager19.registry;
        java.lang.String str22 = superManager19.getPassword();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(accountRegistry21);
// flaky "62) test2351(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Refunded without deposit ($0.0)" + "'", str22, "Refunded without deposit ($0.0)");
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        parkingLot1.setEnabled(true);
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) '4');
        ParkingSystem.Enabled enabled11 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot13 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking15 = null;
        boolean boolean16 = parkingLot13.assignBooking(0, booking15);
        boolean boolean18 = parkingLot13.isSpaceAvailable((int) '#');
        boolean boolean20 = parkingLot13.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace22 = parkingLot13.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking23 = parkingSpace22.getCurrentBooking();
        parkingSpace22.removeBooking();
        java.lang.String str25 = enabled11.scanSpace(parkingSpace22);
        ParkingSystem.ParkingLot parkingLot27 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking29 = null;
        boolean boolean30 = parkingLot27.assignBooking(0, booking29);
        boolean boolean32 = parkingLot27.isSpaceAvailable((int) '#');
        boolean boolean34 = parkingLot27.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace36 = parkingLot27.getParkingSpace((int) (byte) 10);
        int int37 = parkingSpace36.getSpaceId();
        ParkingSystem.Booking booking38 = parkingSpace36.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager39 = new ParkingSystem.SpaceManager();
        boolean boolean42 = spaceManager39.isSpaceAvailable("hi!", (int) '#');
        spaceManager39.toggleLot("disabled", false);
        ParkingSystem.Booking booking55 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean56 = spaceManager39.assignBooking("empty", (int) (short) 0, booking55);
        boolean boolean57 = parkingSpace36.assignBooking(booking55);
        java.lang.String str58 = enabled11.scanSpace(parkingSpace36);
        ParkingSystem.Disabled disabled59 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace60 = null;
        java.lang.String str61 = disabled59.scanSpace(parkingSpace60);
        ParkingSystem.ParkingSpace parkingSpace62 = null;
        java.lang.String str63 = disabled59.scanSpace(parkingSpace62);
        ParkingSystem.ParkingLot parkingLot65 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking67 = null;
        boolean boolean68 = parkingLot65.assignBooking(0, booking67);
        boolean boolean70 = parkingLot65.isSpaceAvailable((int) '#');
        boolean boolean72 = parkingLot65.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace74 = parkingLot65.getParkingSpace((int) (byte) 10);
        int int75 = parkingSpace74.getSpaceId();
        ParkingSystem.Booking booking76 = parkingSpace74.getCurrentBooking();
        java.lang.String str77 = parkingSpace74.scanSpace();
        ParkingSystem.Enabled enabled78 = new ParkingSystem.Enabled();
        parkingSpace74.setState((ParkingSystem.SpaceState) enabled78);
        java.lang.String str80 = disabled59.scanSpace(parkingSpace74);
        java.lang.String str81 = enabled11.scanSpace(parkingSpace74);
        int int82 = parkingSpace74.getSpaceId();
        ParkingSystem.Booking booking90 = new ParkingSystem.Booking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 10.0 with Mobile Pay", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 1, "2afd610d-a8cb-413a-bbee-7927f86b526c", (-1.0d));
        boolean boolean91 = booking90.isCheckedIn();
        java.lang.String str92 = booking90.getLotId();
        booking90.setStartTime("89de8237-29df-4908-9de4-6dc1ce90de94");
        boolean boolean95 = parkingSpace74.assignBooking(booking90);
        boolean boolean96 = parkingLot1.assignBooking(0, booking90);
        parkingLot1.removeBooking((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(parkingSpace22);
        org.junit.Assert.assertNull(booking23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "empty" + "'", str25, "empty");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(parkingSpace36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNull(booking38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "disabled" + "'", str58, "disabled");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "disabled" + "'", str61, "disabled");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "disabled" + "'", str63, "disabled");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(parkingSpace74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertNull(booking76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "empty" + "'", str77, "empty");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "disabled" + "'", str80, "disabled");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "empty" + "'", str81, "empty");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str92, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap16 = accountRegistry14.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        java.lang.String str22 = parkingSpaceProxy18.scanSpace("empty", "hi!");
        boolean boolean32 = parkingSpaceProxy18.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy18.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean42 = parkingSpaceProxy18.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry14.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy18);
        accountRegistry6.assignProxyToManager("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        ParkingSystem.SuperManager superManager45 = ParkingSystem.SuperManager.createFromCSV("hi!", "hi!", "pass", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap46 = accountRegistry6.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry49 = parkingSpaceProxy48.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy51 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj54 = parkingSpaceProxy51.login("empty", "Jane");
        parkingSpaceProxy51.validateClient("Jane");
        parkingSpaceProxy51.toggleSpace("", "staff", false);
        boolean boolean62 = parkingSpaceProxy51.cancelBooking("");
        boolean boolean68 = parkingSpaceProxy51.register("jane", "jane", "Jane", "hi!", "disabled");
        accountRegistry49.assignProxyToManager("empty", parkingSpaceProxy51);
        boolean boolean71 = parkingSpaceProxy51.checkOut("Paid $ 10.0 with Mobile Pay");
        accountRegistry6.assignProxyToManager("Refunded total cost of $1.0", parkingSpaceProxy51);
        ParkingSystem.Client client74 = accountRegistry6.getClient("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(superManager45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(accountRegistry49);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(client74);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str6 = mobilePay0.getPaymentMessage();
        boolean boolean11 = mobilePay0.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = mobilePay0.getPaymentMessage();
        java.lang.String str13 = mobilePay0.getPaymentMessage();
        boolean boolean18 = mobilePay0.processPayment("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", (double) 0L, "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "ST001");
        boolean boolean23 = mobilePay0.processPayment("CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f", (double) 10, "CLT-f02c481e-1504-4abf-b598-76152da8586a", "Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str6, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str13, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry13 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry13);
        boolean boolean16 = accountRegistry13.requiresValidation("disabled");
        int int17 = accountRegistry13.getManagersSize();
        boolean boolean23 = accountRegistry13.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        java.util.List<ParkingSystem.Client> clientList24 = accountRegistry13.displayPendingValidations();
        superManager4.registry = accountRegistry13;
        ParkingSystem.AccountRegistry accountRegistry32 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager33 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry32);
        ParkingSystem.AccountRegistry accountRegistry37 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager38 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry37);
        superManager33.registry = accountRegistry37;
        ParkingSystem.SuperManager superManager40 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry37);
        superManager4.registry = accountRegistry37;
        ParkingSystem.AccountRegistry accountRegistry42 = superManager4.getRegistry();
        java.lang.String str43 = superManager4.getManagerId();
        java.lang.String str44 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry45 = superManager4.registry;
        ParkingSystem.AccountRegistry accountRegistry46 = superManager4.registry;
        org.junit.Assert.assertNotNull(superManager4);
// flaky "63) test2355(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
// flaky "29) test2355(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
// flaky "14) test2355(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Refunded without deposit ($0.0)" + "'", str9, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(clientList24);
        org.junit.Assert.assertNotNull(superManager33);
        org.junit.Assert.assertNotNull(superManager38);
        org.junit.Assert.assertNotNull(superManager40);
        org.junit.Assert.assertNotNull(accountRegistry42);
// flaky "7) test2355(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
// flaky "3) test2355(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(accountRegistry45);
        org.junit.Assert.assertNotNull(accountRegistry46);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        boolean boolean22 = mobilePay6.processPayment("Refunded without deposit ($1.0)", (double) (-1.0f), "09622cbf-e665-45db-b1ad-365065947a20", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj17 = user0.user;
        ParkingSystem.User user18 = new ParkingSystem.User();
        java.lang.Object obj19 = user18.user;
        ParkingSystem.Client client20 = ParkingSystem.Client.getInstance();
        java.lang.String str21 = client20.getName();
        client20.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry25 = parkingSpaceProxy24.getRegistry();
        boolean boolean27 = parkingSpaceProxy24.checkIn("");
        client20.assignProxy(parkingSpaceProxy24);
        boolean boolean29 = client20.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        client20.assignProxy(parkingSpaceProxy30);
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy30.getRegistry();
        boolean boolean34 = parkingSpaceProxy30.checkIn("hi!");
        user18.parkingProxy = parkingSpaceProxy30;
        user18.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = user18.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        user18.assignProxy(parkingSpaceProxy43);
        user0.user = user18;
        ParkingSystem.AccountRegistry accountRegistry49 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager50 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry49);
        java.lang.String str51 = superManager50.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry55 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager56 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry55);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy58 = null;
        accountRegistry55.assignProxyToManager("disabled", parkingSpaceProxy58);
        superManager50.registry = accountRegistry55;
        ParkingSystem.AccountRegistry accountRegistry61 = superManager50.getRegistry();
        ParkingSystem.Manager manager62 = accountRegistry61.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy64 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry65 = parkingSpaceProxy64.getRegistry();
        boolean boolean71 = parkingSpaceProxy64.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy64.toggleLot("hi!", false);
        accountRegistry61.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy64);
        parkingSpaceProxy64.toggleLot("disabled", false);
        java.lang.Object obj81 = parkingSpaceProxy64.login("Refunded without deposit ($-42.0)", "86z9Z9e0MN");
        user18.assignProxy(parkingSpaceProxy64);
        ParkingSystem.User user83 = new ParkingSystem.User();
        java.lang.Object obj84 = user83.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy85 = user83.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy86 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry87 = parkingSpaceProxy86.getRegistry();
        boolean boolean89 = parkingSpaceProxy86.checkIn("");
        parkingSpaceProxy86.validateClient("");
        user83.assignProxy(parkingSpaceProxy86);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy93 = user83.parkingProxy;
        user18.parkingProxy = parkingSpaceProxy93;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(client20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "jane" + "'", str21, "jane");
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy42);
        org.junit.Assert.assertNotNull(superManager50);
// flaky "64) test2357(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(superManager56);
        org.junit.Assert.assertNotNull(accountRegistry61);
        org.junit.Assert.assertNotNull(manager62);
        org.junit.Assert.assertNotNull(accountRegistry65);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(parkingSpaceProxy85);
        org.junit.Assert.assertNotNull(accountRegistry87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy93);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        java.lang.String[] strArray30 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade31 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager32 = parkingSpaceFacade31.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager32.getParkingLots();
        cSVManager0.saveParkingLots(strMap33);
        ParkingSystem.Client client35 = ParkingSystem.Client.getInstance();
        java.lang.String str36 = client35.getName();
        client35.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str45 = client35.getUsername();
        java.lang.String str46 = client35.getPassword();
        java.lang.String str47 = client35.getUsername();
        java.lang.String str48 = client35.getPassword();
        cSVManager0.saveClient(client35);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList50 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "65) test2358(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "30) test2358(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
// flaky "15) test2358(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(client35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "empty" + "'", str36, "empty");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "disabled" + "'", str48, "disabled");
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay11 = new ParkingSystem.MobilePay();
        boolean boolean16 = mobilePay11.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str17 = mobilePay11.getPaymentMessage();
        java.lang.String str18 = mobilePay11.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay11);
        boolean boolean22 = paymentManager0.refundWithoutDeposit(0.0d, (-1.0d));
        java.lang.String str23 = paymentManager0.refundMessage;
        paymentManager0.refundMessage = "86z9Z9e0MN";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str17, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Refunded without deposit ($1.0)" + "'", str23, "Refunded without deposit ($1.0)");
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = spaceManager4.scanSpace("hi!", "Jane");
        ParkingSystem.ParkingLot parkingLot11 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking13 = null;
        boolean boolean14 = parkingLot11.assignBooking(0, booking13);
        boolean boolean16 = parkingLot11.isSpaceAvailable((int) '#');
        boolean boolean18 = parkingLot11.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace20 = parkingLot11.getParkingSpace((int) (byte) 10);
        int int21 = parkingSpace20.getSpaceId();
        ParkingSystem.Booking booking22 = parkingSpace20.getCurrentBooking();
        java.lang.String str23 = parkingSpace20.scanSpace();
        int int24 = parkingSpace20.getSpaceId();
        ParkingSystem.SpaceManager spaceManager25 = new ParkingSystem.SpaceManager();
        boolean boolean28 = spaceManager25.isSpaceAvailable("hi!", (int) '#');
        spaceManager25.toggleLot("disabled", false);
        ParkingSystem.Booking booking41 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean42 = spaceManager25.assignBooking("empty", (int) (short) 0, booking41);
        java.lang.String str43 = booking41.getClientId();
        boolean boolean44 = parkingSpace20.assignBooking(booking41);
        boolean boolean45 = spaceManager4.assignBooking("", (int) (short) 1, booking41);
        java.lang.String str48 = spaceManager4.scanSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "Refunded total cost of $10.0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parkingSpace20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "empty" + "'", str23, "empty");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "staff" + "'", str43, "staff");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "disabled" + "'", str48, "disabled");
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.PaymentManager paymentManager21 = new ParkingSystem.PaymentManager();
        java.lang.String str22 = paymentManager21.refundMessage;
        boolean boolean24 = paymentManager21.refundTotalCost((-1.0d));
        paymentManager21.refundMessage = "disabled";
        boolean boolean31 = paymentManager21.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay32 = new ParkingSystem.MobilePay();
        boolean boolean37 = mobilePay32.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str38 = mobilePay32.getPaymentMessage();
        java.lang.String str39 = mobilePay32.getPaymentMessage();
        paymentManager21.setStrategy((ParkingSystem.Strategy) mobilePay32);
        user0.user = paymentManager21;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj45 = parkingSpaceProxy42.login("empty", "Jane");
        boolean boolean48 = parkingSpaceProxy42.extendBooking("pass", 0);
        boolean boolean50 = parkingSpaceProxy42.checkOut("Paid $ 10.0 with Mobile Pay");
        java.lang.String str53 = parkingSpaceProxy42.scanSpace("hi!", "Jane");
        parkingSpaceProxy42.validateClient("0b35479f-5869-423e-9abc-e4ab9cef903d");
        user0.assignProxy(parkingSpaceProxy42);
        boolean boolean58 = parkingSpaceProxy42.checkIn("9fJ5pCUl");
        ParkingSystem.Booking booking60 = parkingSpaceProxy42.getBookingDetails("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str38, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str39, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "disabled" + "'", str53, "disabled");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(booking60);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        boolean boolean20 = parkingSpaceProxy3.register("jane", "jane", "Jane", "hi!", "disabled");
        accountRegistry1.assignProxyToManager("empty", parkingSpaceProxy3);
        ParkingSystem.Client client23 = accountRegistry1.getClient("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str35 = client25.getUsername();
        java.lang.String str36 = client25.getPassword();
        java.lang.String str37 = client25.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = null;
        client25.assignProxy(parkingSpaceProxy38);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy40 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj43 = parkingSpaceProxy40.login("empty", "Jane");
        client25.assignProxy(parkingSpaceProxy40);
        parkingSpaceProxy40.validateClient("13b04414-31a5-407f-8ea3-fba4613c73d1");
        accountRegistry1.assignProxyToClient("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", parkingSpaceProxy40);
        parkingSpaceProxy40.addParkingLot("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "disabled" + "'", str36, "disabled");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.registry;
        java.lang.String str11 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry12 = superManager4.getRegistry();
        accountRegistry12.validateClient("CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        accountRegistry12.validateClient("Refunded without deposit ($0.0)");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "66) test2363(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
// flaky "31) test2363(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
// flaky "16) test2363(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
// flaky "8) test2363(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(accountRegistry12);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleSpace("Paid $ 10.0 with Mobile Pay", "disabled", true);
        boolean boolean24 = parkingSpaceFacade0.confirmBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (int) '4', "pass", (int) '4', "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str27 = parkingSpaceFacade0.scanSpace("pass", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        parkingSpaceFacade0.toggleLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", false);
        parkingSpaceFacade0.addParkingLot("CLT-b6a8264c-f386-4429-b59c-b7f465002e13");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "disabled" + "'", str27, "disabled");
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        java.lang.String[] strArray30 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade31 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager32 = parkingSpaceFacade31.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager32.getParkingLots();
        cSVManager0.saveParkingLots(strMap33);
        ParkingSystem.Client client35 = ParkingSystem.Client.getInstance();
        java.lang.String str36 = client35.getName();
        client35.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str45 = client35.getUsername();
        java.lang.String str46 = client35.getPassword();
        java.lang.String str47 = client35.getUsername();
        java.lang.String str48 = client35.getPassword();
        cSVManager0.saveClient(client35);
        java.lang.String str50 = client35.getUsername();
        org.junit.Assert.assertNotNull(strArray1);
// flaky "67) test2365(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "32) test2365(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
// flaky "17) test2365(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(client35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "disabled" + "'", str48, "disabled");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Disabled disabled3 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace4 = null;
        java.lang.String str5 = disabled3.scanSpace(parkingSpace4);
        ParkingSystem.Enabled enabled6 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot8 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking10 = null;
        boolean boolean11 = parkingLot8.assignBooking(0, booking10);
        boolean boolean13 = parkingLot8.isSpaceAvailable((int) '#');
        boolean boolean15 = parkingLot8.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace17 = parkingLot8.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking18 = parkingSpace17.getCurrentBooking();
        parkingSpace17.removeBooking();
        java.lang.String str20 = enabled6.scanSpace(parkingSpace17);
        ParkingSystem.ParkingLot parkingLot22 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking24 = null;
        boolean boolean25 = parkingLot22.assignBooking(0, booking24);
        boolean boolean27 = parkingLot22.isSpaceAvailable((int) '#');
        boolean boolean29 = parkingLot22.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace31 = parkingLot22.getParkingSpace((int) (byte) 10);
        int int32 = parkingSpace31.getSpaceId();
        ParkingSystem.Booking booking33 = parkingSpace31.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager34 = new ParkingSystem.SpaceManager();
        boolean boolean37 = spaceManager34.isSpaceAvailable("hi!", (int) '#');
        spaceManager34.toggleLot("disabled", false);
        ParkingSystem.Booking booking50 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean51 = spaceManager34.assignBooking("empty", (int) (short) 0, booking50);
        boolean boolean52 = parkingSpace31.assignBooking(booking50);
        java.lang.String str53 = enabled6.scanSpace(parkingSpace31);
        java.lang.String str54 = disabled3.scanSpace(parkingSpace31);
        ParkingSystem.Booking booking55 = parkingSpace31.getCurrentBooking();
        int int56 = parkingSpace31.getSpaceId();
        boolean boolean57 = parkingSpace31.isAvailable();
        java.lang.String str58 = disabled0.scanSpace(parkingSpace31);
        ParkingSystem.ParkingSpace parkingSpace60 = new ParkingSystem.ParkingSpace(10);
        ParkingSystem.ParkingLot parkingLot62 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking64 = null;
        boolean boolean65 = parkingLot62.assignBooking(0, booking64);
        boolean boolean67 = parkingLot62.isSpaceAvailable((int) '#');
        boolean boolean69 = parkingLot62.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace71 = parkingLot62.getParkingSpace((int) (byte) 10);
        int int72 = parkingSpace71.getSpaceId();
        ParkingSystem.Booking booking73 = parkingSpace71.getCurrentBooking();
        java.lang.String str74 = parkingSpace71.scanSpace();
        ParkingSystem.Enabled enabled75 = new ParkingSystem.Enabled();
        parkingSpace71.setState((ParkingSystem.SpaceState) enabled75);
        parkingSpace60.setState((ParkingSystem.SpaceState) enabled75);
        java.lang.String str78 = disabled0.scanSpace(parkingSpace60);
        ParkingSystem.ParkingSpace parkingSpace80 = new ParkingSystem.ParkingSpace(2);
        java.lang.String str81 = parkingSpace80.scanSpace();
        java.lang.String str82 = disabled0.scanSpace(parkingSpace80);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(parkingSpace17);
        org.junit.Assert.assertNull(booking18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "empty" + "'", str20, "empty");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(parkingSpace31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNull(booking33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "disabled" + "'", str53, "disabled");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "disabled" + "'", str54, "disabled");
        org.junit.Assert.assertNotNull(booking55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "disabled" + "'", str58, "disabled");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(parkingSpace71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertNull(booking73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "empty" + "'", str74, "empty");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "disabled" + "'", str78, "disabled");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "empty" + "'", str81, "empty");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "disabled" + "'", str82, "disabled");
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.Disabled disabled21 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace22 = null;
        java.lang.String str23 = disabled21.scanSpace(parkingSpace22);
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot26 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking28 = null;
        boolean boolean29 = parkingLot26.assignBooking(0, booking28);
        boolean boolean31 = parkingLot26.isSpaceAvailable((int) '#');
        boolean boolean33 = parkingLot26.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace35 = parkingLot26.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking36 = parkingSpace35.getCurrentBooking();
        parkingSpace35.removeBooking();
        java.lang.String str38 = enabled24.scanSpace(parkingSpace35);
        ParkingSystem.ParkingLot parkingLot40 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking42 = null;
        boolean boolean43 = parkingLot40.assignBooking(0, booking42);
        boolean boolean45 = parkingLot40.isSpaceAvailable((int) '#');
        boolean boolean47 = parkingLot40.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace49 = parkingLot40.getParkingSpace((int) (byte) 10);
        int int50 = parkingSpace49.getSpaceId();
        ParkingSystem.Booking booking51 = parkingSpace49.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = parkingSpace49.assignBooking(booking68);
        java.lang.String str71 = enabled24.scanSpace(parkingSpace49);
        java.lang.String str72 = disabled21.scanSpace(parkingSpace49);
        user0.user = str72;
        user0.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "Jane", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Client client80 = ParkingSystem.Client.getInstance();
        java.lang.String str81 = client80.getName();
        java.lang.String str82 = client80.getClientId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy83 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj86 = parkingSpaceProxy83.login("empty", "Jane");
        parkingSpaceProxy83.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        client80.assignProxy(parkingSpaceProxy83);
        user0.user = parkingSpaceProxy83;
        boolean boolean96 = parkingSpaceProxy83.editBooking("", "empty", 0);
        parkingSpaceProxy83.addParkingLot("13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpace35);
        org.junit.Assert.assertNull(booking36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "empty" + "'", str38, "empty");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(parkingSpace49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNull(booking51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "disabled" + "'", str71, "disabled");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "disabled" + "'", str72, "disabled");
        org.junit.Assert.assertNotNull(client80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str81, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
// flaky "68) test2367(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "CLT-0018b5f2-4f8d-4ac6-8c8d-394f6b7b51a1" + "'", str82, "CLT-0018b5f2-4f8d-4ac6-8c8d-394f6b7b51a1");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = parkingSpaceFacade0.scanSpace("jane", "Refunded without deposit ($0.0)");
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("Jane", "");
        ParkingSystem.Booking booking12 = parkingSpaceFacade0.getBookingDetails("4a1f2343-8b2e-4dea-ba69-efd105414390");
        boolean boolean22 = parkingSpaceFacade0.confirmBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "02659ad3-0b5c-4c48-a915-a466f2b50775", 32, "02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "89de8237-29df-4908-9de4-6dc1ce90de94");
        ParkingSystem.CheckInManager checkInManager23 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean26 = parkingSpaceFacade0.extendBooking("ua4ppOLtSl", 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(checkInManager23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleSpace("Paid $ 10.0 with Mobile Pay", "disabled", true);
        boolean boolean24 = parkingSpaceFacade0.confirmBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (int) '4', "pass", (int) '4', "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str27 = parkingSpaceFacade0.scanSpace("pass", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        parkingSpaceFacade0.toggleLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", false);
        boolean boolean32 = parkingSpaceFacade0.checkIn("Refunded without deposit ($0.0)");
        ParkingSystem.SpaceManager spaceManager33 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean43 = parkingSpaceFacade0.confirmBooking("CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "aa9c00f6-ec11-46c5-a72b-a7f620703e51", "e8686ac8-1df7-4a9b-b299-8fbcdd585528", "Paid $ 0.0 with Mobile Pay", (int) (short) 100, "Refunded without deposit ($0.0)", (int) (byte) 0, "Refunded without deposit ($-15.0)", "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "disabled" + "'", str27, "disabled");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(spaceManager33);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.MobilePay mobilePay21 = new ParkingSystem.MobilePay();
        boolean boolean26 = mobilePay21.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean31 = mobilePay21.processPayment("jane", 15.0d, "jane", "");
        boolean boolean36 = mobilePay21.processPayment("", (double) 0, "Refunded without deposit ($-42.0)", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        user0.user = mobilePay21;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = user0.parkingProxy;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy38);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry13 = superManager11.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry14 = superManager11.getRegistry();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNotNull(accountRegistry14);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        java.lang.String str13 = client0.getClientType();
        boolean boolean21 = client0.confirmBooking("disabled", "CLT-f02c481e-1504-4abf-b598-76152da8586a", 0, "Paid $ 10.0 with Mobile Pay", (int) (byte) 1, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "TXCrKOGD");
        ParkingSystem.AccountRegistry accountRegistry25 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager26 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry25);
        boolean boolean28 = accountRegistry25.requiresValidation("disabled");
        int int29 = accountRegistry25.getManagersSize();
        boolean boolean35 = accountRegistry25.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy37 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj40 = parkingSpaceProxy37.login("empty", "Jane");
        parkingSpaceProxy37.validateClient("Jane");
        parkingSpaceProxy37.toggleSpace("", "staff", false);
        boolean boolean48 = parkingSpaceProxy37.cancelBooking("Jane");
        accountRegistry25.assignProxyToClient("pass", parkingSpaceProxy37);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap50 = accountRegistry25.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy52 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj55 = parkingSpaceProxy52.login("empty", "Jane");
        parkingSpaceProxy52.validateClient("Jane");
        parkingSpaceProxy52.toggleSpace("", "staff", false);
        boolean boolean63 = parkingSpaceProxy52.cancelBooking("Jane");
        boolean boolean65 = parkingSpaceProxy52.checkOut("empty");
        boolean boolean75 = parkingSpaceProxy52.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        accountRegistry25.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy52);
        client0.assignProxy(parkingSpaceProxy52);
        parkingSpaceProxy52.displayPendingValidations();
        boolean boolean82 = parkingSpaceProxy52.editBooking("433f3d1f-f758-4ae3-972b-7fb179aedfd7", "", 32);
        boolean boolean84 = parkingSpaceProxy52.checkIn("Refunded without deposit ($-42.0)");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str1, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str10, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str11, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str12, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Jane" + "'", str13, "Jane");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(superManager26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        java.lang.String str8 = debitOrCredit6.getPaymentMessage();
        boolean boolean11 = debitOrCredit6.validateCard("7aecb00c-028c-4dcf-96cc-14d25bd709ab", 0.0d);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean10 = checkInManager8.checkIn("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        boolean boolean12 = checkInManager8.checkIn("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        checkInManager8.refundMessage = "Paid $ 1.0 with Mobile Pay";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean6 = parkingSpaceFacade0.editBooking("Jane", "staff", (int) (short) 100);
        ParkingSystem.Booking booking8 = parkingSpaceFacade0.getBookingDetails("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        boolean boolean10 = parkingSpaceFacade0.checkOut("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        boolean boolean12 = parkingSpaceFacade0.checkOut("empty");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean15 = parkingSpaceFacade0.checkOut("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.SpaceManager spaceManager16 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(spaceManager16);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.paymentMessage = "pass";
        paymentManager0.paymentMessage = "Paid $ -1.0 with Mobile Pay";
        paymentManager0.paymentMessage = "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7";
        ParkingSystem.Strategy strategy10 = null;
        paymentManager0.setStrategy(strategy10);
        java.lang.String str12 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager13 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager14 = new ParkingSystem.CheckInManager(bookingManager13);
        ParkingSystem.SpaceManager spaceManager15 = bookingManager13.getSpaceManager();
        double double18 = bookingManager13.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit19 = new ParkingSystem.DebitOrCredit();
        bookingManager13.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit19);
        boolean boolean25 = debitOrCredit19.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str26 = debitOrCredit19.getPaymentMessage();
        boolean boolean29 = debitOrCredit19.validateCard("pass", (double) (byte) 1);
        java.lang.String str30 = debitOrCredit19.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit19);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7" + "'", str12, "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertNotNull(spaceManager15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 165.0d + "'", double18 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Card number should be 16 digits" + "'", str26, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Card number should be 16 digits" + "'", str30, "Card number should be 16 digits");
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj12 = parkingSpaceProxy9.login("empty", "Jane");
        parkingSpaceProxy9.validateClient("Jane");
        parkingSpaceProxy9.toggleSpace("", "staff", false);
        boolean boolean20 = parkingSpaceProxy9.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy9);
        boolean boolean27 = parkingSpaceProxy9.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean33 = parkingSpaceProxy9.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean39 = parkingSpaceProxy9.register("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "staff", "Refunded total cost of $1.0", "Paid $ 10.0 with Mobile Pay", "jane");
        parkingSpaceProxy9.autoGenerateManager();
        java.lang.Object obj43 = parkingSpaceProxy9.login("Refunded without deposit ($1.0)", "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        boolean boolean11 = parkingSpaceProxy0.cancelBooking("");
        parkingSpaceProxy0.toggleLot("Paid $ 10.0 with Mobile Pay", true);
        boolean boolean17 = parkingSpaceProxy0.extendBooking("Paid $ 100.0 with Mobile Pay", 1);
        boolean boolean27 = parkingSpaceProxy0.confirmBooking("Refunded without deposit ($-68.0)", "CLT-390234b0-d56e-4275-bd7b-122280609c69", "I673kmcH", "Refunded deposit of $0.0", (int) (short) 10, "empty", (-1), "Jane", "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost(15.0d);
        paymentManager0.refundMessage = "8bf217fa-1769-4d04-858b-ce78fe94bf0c";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.Enabled enabled1 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot3 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking5 = null;
        boolean boolean6 = parkingLot3.assignBooking(0, booking5);
        boolean boolean8 = parkingLot3.isSpaceAvailable((int) '#');
        boolean boolean10 = parkingLot3.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot3.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking13 = parkingSpace12.getCurrentBooking();
        parkingSpace12.removeBooking();
        java.lang.String str15 = enabled1.scanSpace(parkingSpace12);
        java.lang.String str16 = parkingSpace12.scanSpace();
        java.lang.String str17 = disabled0.scanSpace(parkingSpace12);
        java.lang.String str18 = parkingSpace12.scanSpace();
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int27 = booking26.getDuration();
        java.lang.String str28 = booking26.getClientId();
        boolean boolean29 = parkingSpace12.assignBooking(booking26);
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime30 = booking26.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "empty" + "'", str15, "empty");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "empty" + "'", str16, "empty");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "empty" + "'", str18, "empty");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "staff" + "'", str28, "staff");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLotIterator parkingLotIterator8 = parkingLot1.getIterator();
        parkingLot1.setEnabled(false);
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", (int) '#', "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 52, "ST001", (-1.0d));
        boolean boolean20 = parkingLot1.assignBooking((-1), booking19);
        int int21 = booking19.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator8);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        boolean boolean25 = accountRegistry4.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean27 = accountRegistry4.requiresValidation("02659ad3-0b5c-4c48-a915-a466f2b50775");
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap28 = accountRegistry4.getManagers();
        boolean boolean34 = accountRegistry4.registerClient("13b04414-31a5-407f-8ea3-fba4613c73d1", "", "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", "e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("empty", "", 3, "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", 35, "89de8237-29df-4908-9de4-6dc1ce90de94", 795.0d);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy16 = null;
        paymentManager0.setStrategy(strategy16);
        java.lang.String str18 = paymentManager0.refundMessage;
        paymentManager0.refundMessage = "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c";
        ParkingSystem.User user21 = new ParkingSystem.User();
        java.lang.Object obj22 = user21.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = user21.parkingProxy;
        ParkingSystem.User user24 = new ParkingSystem.User();
        java.lang.Object obj25 = user24.user;
        ParkingSystem.Client client26 = ParkingSystem.Client.getInstance();
        java.lang.String str27 = client26.getName();
        client26.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry31 = parkingSpaceProxy30.getRegistry();
        boolean boolean33 = parkingSpaceProxy30.checkIn("");
        client26.assignProxy(parkingSpaceProxy30);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade35 = parkingSpaceProxy30.getFacade();
        user24.assignProxy(parkingSpaceProxy30);
        user21.parkingProxy = parkingSpaceProxy30;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade38 = parkingSpaceProxy30.getFacade();
        ParkingSystem.BookingManager bookingManager39 = parkingSpaceFacade38.getBookingManager();
        ParkingSystem.BookingManager bookingManager40 = parkingSpaceFacade38.getBookingManager();
        ParkingSystem.SpaceManager spaceManager41 = bookingManager40.getSpaceManager();
        ParkingSystem.AccountRegistry accountRegistry42 = bookingManager40.getAccountRegistry();
        boolean boolean52 = bookingManager40.confirmBooking("empty", "staff", "Refunded without deposit ($0.0)", "Paid $ 10.0 with Mobile Pay", (int) (byte) 10, "02659ad3-0b5c-4c48-a915-a466f2b50775", (-1), "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5");
        double double55 = bookingManager40.calculateCost("CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (byte) 100);
        ParkingSystem.MobilePay mobilePay56 = new ParkingSystem.MobilePay();
        boolean boolean61 = mobilePay56.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str62 = mobilePay56.getPaymentMessage();
        boolean boolean67 = mobilePay56.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        bookingManager40.setPaymentStrategy((ParkingSystem.Strategy) mobilePay56);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay56);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str18, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(parkingSpaceProxy23);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(client26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "13b04414-31a5-407f-8ea3-fba4613c73d1" + "'", str27, "13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNotNull(accountRegistry31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade35);
        org.junit.Assert.assertNotNull(parkingSpaceFacade38);
        org.junit.Assert.assertNotNull(bookingManager39);
        org.junit.Assert.assertNotNull(bookingManager40);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertNotNull(accountRegistry42);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1515.0d + "'", double55 == 1515.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str62, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry5 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry12 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager13 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry12);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap14 = accountRegistry12.getManagers();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry12);
        int int16 = accountRegistry12.getManagersSize();
        ParkingSystem.AccountRegistry accountRegistry21 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry21);
        java.lang.String str23 = superManager22.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = null;
        accountRegistry27.assignProxyToManager("disabled", parkingSpaceProxy30);
        superManager22.registry = accountRegistry27;
        ParkingSystem.AccountRegistry accountRegistry33 = superManager22.getRegistry();
        ParkingSystem.Manager manager34 = accountRegistry33.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry37 = parkingSpaceProxy36.getRegistry();
        boolean boolean43 = parkingSpaceProxy36.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy36.toggleLot("hi!", false);
        accountRegistry33.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy36);
        ParkingSystem.User user49 = new ParkingSystem.User();
        java.lang.Object obj50 = user49.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy51 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj54 = parkingSpaceProxy51.login("empty", "Jane");
        parkingSpaceProxy51.validateClient("Jane");
        java.lang.String str59 = parkingSpaceProxy51.scanSpace("", "");
        parkingSpaceProxy51.toggleSpace("", "disabled", true);
        user49.parkingProxy = parkingSpaceProxy51;
        ParkingSystem.ParkingLot parkingLot66 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator67 = parkingLot66.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator68 = parkingLot66.getIterator();
        user49.user = parkingLot66;
        ParkingSystem.User user70 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy71 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj74 = parkingSpaceProxy71.login("empty", "Jane");
        parkingSpaceProxy71.validateClient("Jane");
        parkingSpaceProxy71.toggleSpace("", "staff", false);
        boolean boolean82 = parkingSpaceProxy71.cancelBooking("");
        user70.assignProxy(parkingSpaceProxy71);
        user49.user = parkingSpaceProxy71;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy85 = user49.parkingProxy;
        parkingSpaceProxy85.addParkingLot("pass");
        accountRegistry33.assignProxyToManager("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", parkingSpaceProxy85);
        accountRegistry12.assignProxyToClient("13b04414-31a5-407f-8ea3-fba4613c73d1", parkingSpaceProxy85);
        superManager4.assignProxy(parkingSpaceProxy85);
        superManager4.validateClient("CLT-f5f3129f-6f77-4a04-a68b-486f89449455");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertNotNull(superManager13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(superManager22);
// flaky "69) test2387(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(superManager28);
        org.junit.Assert.assertNotNull(accountRegistry33);
        org.junit.Assert.assertNotNull(manager34);
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "disabled" + "'", str59, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator67);
        org.junit.Assert.assertNotNull(parkingLotIterator68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy85);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        superManager7.registry = accountRegistry11;
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry11);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        superManager14.setManagerInfo("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "tbHxuilT", "Refunded total cost of $0.0");
        java.lang.String str20 = superManager14.getManagerId();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str20, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.getRegistry();
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        java.lang.String str12 = manager11.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str6, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str9, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertNotNull(manager11);
// flaky "70) test2389(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4CGFxoSEo5" + "'", str12, "4CGFxoSEo5");
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager5.getSpaceManager();
        boolean boolean19 = bookingManager5.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double21 = bookingManager5.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit22 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit22);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit22);
        java.lang.String str25 = paymentManager0.refundMessage;
        java.lang.String str26 = paymentManager0.refundMessage;
        boolean boolean28 = paymentManager0.refundTotalCost((double) (-1));
        paymentManager0.refundMessage = "Refunded total cost of $-1.0";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Refunded total cost of $-1.0" + "'", str25, "Refunded total cost of $-1.0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Refunded total cost of $-1.0" + "'", str26, "Refunded total cost of $-1.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.BookingManager bookingManager19 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.SpaceManager spaceManager20 = bookingManager19.getSpaceManager();
        ParkingSystem.AccountRegistry accountRegistry21 = bookingManager19.getAccountRegistry();
        boolean boolean27 = accountRegistry21.registerClient("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 0.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "ST001");
        accountRegistry21.validateClient("");
        java.util.List<ParkingSystem.Client> clientList30 = accountRegistry21.displayPendingValidations();
        java.util.List<ParkingSystem.Client> clientList31 = accountRegistry21.displayPendingValidations();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
// flaky "71) test2391(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49" + "'", str6, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(bookingManager19);
        org.junit.Assert.assertNotNull(spaceManager20);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(clientList30);
        org.junit.Assert.assertNotNull(clientList31);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = spaceManager0.assignBooking("", 100, booking14);
        spaceManager0.removeBooking("3b453211-7dd1-4452-8741-a206711c1217", 0);
        ParkingSystem.BookingManager bookingManager21 = new ParkingSystem.BookingManager();
        double double24 = bookingManager21.calculateCost("", 0);
        boolean boolean28 = bookingManager21.editBooking("Jane", "empty", 10);
        boolean boolean38 = bookingManager21.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap39 = bookingManager21.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager40 = bookingManager21.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager43 = new ParkingSystem.SpaceManager();
        spaceManager43.toggleLot("Jane", false);
        spaceManager43.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = spaceManager43.assignBooking("hi!", 0, booking68);
        double double71 = booking68.getTotalCost();
        booking68.setDuration((-1));
        java.lang.String str74 = booking68.getLotId();
        booking68.setStartTime("");
        java.lang.String str77 = booking68.getLicensePlate();
        booking68.setStartTime("8bf217fa-1769-4d04-858b-ce78fe94bf0c");
        boolean boolean80 = spaceManager40.assignBooking("Refunded total cost of $0.0", (int) 'a', booking68);
        boolean boolean81 = spaceManager0.assignBooking("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", (int) (short) -1, booking68);
        spaceManager0.removeBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", 4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(spaceManager40);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "jane" + "'", str74, "jane");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "disabled" + "'", str77, "disabled");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundDeposit((double) 1.0f);
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        double double10 = bookingManager5.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay11 = new ParkingSystem.MobilePay();
        boolean boolean16 = mobilePay11.processPayment("hi!", (-1.0d), "", "");
        boolean boolean21 = mobilePay11.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean26 = mobilePay11.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) mobilePay11);
        ParkingSystem.Booking booking29 = bookingManager5.getBooking("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Booking booking31 = bookingManager5.getBooking("pass");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap32 = bookingManager5.getActiveBookings();
        boolean boolean34 = bookingManager5.cancelBooking("CLT-45a3d895-9bc3-45d3-9068-d4559eae3183");
        ParkingSystem.MobilePay mobilePay35 = new ParkingSystem.MobilePay();
        boolean boolean40 = mobilePay35.processPayment("hi!", (-1.0d), "", "");
        boolean boolean45 = mobilePay35.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str46 = mobilePay35.getPaymentMessage();
        boolean boolean51 = mobilePay35.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded total cost of $1.0", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean56 = mobilePay35.processPayment("Paid $ 100.0 with Mobile Pay", 165.0d, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) mobilePay35);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay35);
        java.lang.String str59 = paymentManager0.paymentMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 15.0d + "'", double10 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(booking29);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str46, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getPassword();
        boolean boolean17 = client0.extendBooking((int) (short) 10);
        java.lang.String str18 = client0.getClientType();
        client0.setValidated(false);
        boolean boolean21 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
// flaky "72) test2394(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = parkingSpaceProxy0.getFacade();
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy0.getRegistry();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry7.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(parkingSpaceFacade3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(accountRegistry7);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        java.lang.String str19 = superManager18.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry20 = superManager18.registry;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager18);
        java.lang.String str22 = superManager18.getPassword();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager18.getRegistry();
        superManager18.validateClient("09622cbf-e665-45db-b1ad-365065947a20");
        ParkingSystem.AccountRegistry accountRegistry26 = superManager18.registry;
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str19, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Refunded total cost of $0.0" + "'", str22, "Refunded total cost of $0.0");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertNotNull(accountRegistry26);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceProxy4.addParkingLot("Jane");
        parkingSpaceProxy4.toggleSpace("", "Refunded without deposit ($-42.0)", true);
        boolean boolean17 = parkingSpaceProxy4.checkIn("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade18 = parkingSpaceProxy4.getFacade();
        org.junit.Assert.assertNotNull(client0);
// flaky "73) test2397(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade18);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean35 = parkingSpaceProxy14.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry12.assignProxyToManager("empty", parkingSpaceProxy14);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade39 = parkingSpaceProxy38.getFacade();
        accountRegistry12.assignProxyToManager("", parkingSpaceProxy38);
        boolean boolean43 = parkingSpaceProxy38.extendBooking("8de59b10-a65c-4d90-b56c-a637505ce1de", (int) (byte) 0);
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        boolean boolean12 = accountRegistry9.requiresValidation("disabled");
        int int13 = accountRegistry9.getManagersSize();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        accountRegistry15.validateClient("pass");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.AccountRegistry accountRegistry21 = superManager18.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry22 = superManager18.registry;
        ParkingSystem.Manager manager23 = accountRegistry22.autoGenerateManager();
        java.lang.String str24 = manager23.getPassword();
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertNotNull(accountRegistry22);
        org.junit.Assert.assertNotNull(manager23);
// flaky "74) test2399(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "XBERLIguFg" + "'", str24, "XBERLIguFg");
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap4 = bookingManager0.getActiveBookings();
        boolean boolean8 = bookingManager0.editBooking("Paid $ 100.0 with Mobile Pay", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", (int) (byte) 1);
        ParkingSystem.Booking booking10 = bookingManager0.getBooking("fhd49ADb");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(booking10);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        spaceManager0.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap19 = spaceManager0.getParkingLots();
        spaceManager0.addParkingLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        spaceManager0.removeBooking("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", (-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        client0.setClientInfo("Jane", "", "pass", "pass", "pass", "hi!", true);
        java.lang.String str10 = client0.getName();
        boolean boolean11 = client0.cancelBooking();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean14 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "disabled" + "'", str1, "disabled");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pass" + "'", str12, "pass");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        boolean boolean15 = debitOrCredit6.validateCard("02659ad3-0b5c-4c48-a915-a466f2b50775", (double) (short) -1);
        java.lang.String str16 = debitOrCredit6.getPaymentMessage();
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Card number should be 16 digits" + "'", str16, "Card number should be 16 digits");
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean6 = paymentManager0.processPayment("pass", (double) 1, "Paid $ 10.0 with Mobile Pay", "Jane");
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) 100);
        boolean boolean14 = paymentManager0.processPayment("kYN6YZxC3k", 795.0d, "Jane", "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e");
        paymentManager0.refundMessage = "CLT-0018b5f2-4f8d-4ac6-8c8d-394f6b7b51a1";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        cSVManager0.updateClientValidation("empty", false);
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean17 = parkingSpaceProxy14.checkIn("");
        client4.assignProxy(parkingSpaceProxy14);
        cSVManager0.saveClient(client4);
        boolean boolean20 = client4.getIsValidated();
        client4.setValidated(false);
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean24 = bookingManager0.editBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", (int) (short) 100);
        java.lang.Class<?> wildcardClass25 = bookingManager0.getClass();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = user13.parkingProxy;
        ParkingSystem.User user16 = new ParkingSystem.User();
        java.lang.Object obj17 = user16.user;
        ParkingSystem.Client client18 = ParkingSystem.Client.getInstance();
        java.lang.String str19 = client18.getName();
        client18.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy22.getRegistry();
        boolean boolean25 = parkingSpaceProxy22.checkIn("");
        client18.assignProxy(parkingSpaceProxy22);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade27 = parkingSpaceProxy22.getFacade();
        user16.assignProxy(parkingSpaceProxy22);
        user13.parkingProxy = parkingSpaceProxy22;
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        java.lang.String str35 = superManager34.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry36 = superManager34.registry;
        java.lang.String str37 = superManager34.getManagerId();
        ParkingSystem.Client client38 = ParkingSystem.Client.getInstance();
        java.lang.String str39 = client38.getName();
        client38.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry43 = parkingSpaceProxy42.getRegistry();
        boolean boolean45 = parkingSpaceProxy42.checkIn("");
        client38.assignProxy(parkingSpaceProxy42);
        boolean boolean47 = client38.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        client38.assignProxy(parkingSpaceProxy48);
        superManager34.assignProxy(parkingSpaceProxy48);
        user13.assignProxy(parkingSpaceProxy48);
        ParkingSystem.AccountRegistry accountRegistry52 = parkingSpaceProxy48.getRegistry();
        java.lang.String str55 = parkingSpaceProxy48.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        boolean boolean58 = parkingSpaceProxy48.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (byte) 1);
        superManager11.assignProxy(parkingSpaceProxy48);
        java.lang.String str60 = superManager11.getPassword();
        ParkingSystem.Manager manager61 = superManager11.autoGenerateManager();
        ParkingSystem.Manager manager62 = superManager11.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry63 = superManager11.getRegistry();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(parkingSpaceProxy15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(client18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade27);
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str35, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str37, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(client38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(accountRegistry43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(accountRegistry52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Refunded total cost of $0.0" + "'", str60, "Refunded total cost of $0.0");
        org.junit.Assert.assertNotNull(manager61);
        org.junit.Assert.assertNotNull(manager62);
        org.junit.Assert.assertNotNull(accountRegistry63);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.registry;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry12 = superManager4.registry;
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str6, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str9, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertNotNull(manager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.loadParkingLots();
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        boolean boolean46 = parkingSpace25.assignBooking(booking44);
        ParkingSystem.SpaceManager spaceManager47 = new ParkingSystem.SpaceManager();
        boolean boolean50 = spaceManager47.isSpaceAvailable("hi!", (int) '#');
        spaceManager47.toggleLot("disabled", false);
        ParkingSystem.Booking booking63 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean64 = spaceManager47.assignBooking("empty", (int) (short) 0, booking63);
        ParkingSystem.SpaceManager spaceManager67 = new ParkingSystem.SpaceManager();
        boolean boolean70 = spaceManager67.isSpaceAvailable("hi!", (int) '#');
        spaceManager67.toggleLot("disabled", false);
        ParkingSystem.Booking booking83 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean84 = spaceManager67.assignBooking("empty", (int) (short) 0, booking83);
        boolean boolean85 = spaceManager47.assignBooking("disabled", (int) (byte) 0, booking83);
        boolean boolean86 = parkingSpace25.assignBooking(booking83);
        boolean boolean87 = spaceManager0.assignBooking("", (int) (byte) 0, booking83);
        spaceManager0.toggleSpace("13b04414-31a5-407f-8ea3-fba4613c73d1", "CLT-92729d37-9255-42b4-9361-c1978aadacb0", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        java.lang.String str12 = parkingSpace10.scanSpace();
        ParkingSystem.SpaceState spaceState13 = parkingSpace10.getState();
        ParkingSystem.ParkingLot parkingLot15 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking17 = null;
        boolean boolean18 = parkingLot15.assignBooking(0, booking17);
        boolean boolean20 = parkingLot15.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator21 = parkingLot15.getIterator();
        boolean boolean22 = parkingLotIterator21.hasNext();
        ParkingSystem.ParkingSpace parkingSpace23 = parkingLotIterator21.next();
        ParkingSystem.ParkingLot parkingLot25 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking27 = null;
        boolean boolean28 = parkingLot25.assignBooking(0, booking27);
        boolean boolean30 = parkingLot25.isSpaceAvailable((int) '#');
        boolean boolean32 = parkingLot25.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace34 = parkingLot25.getParkingSpace((int) (byte) 10);
        int int35 = parkingSpace34.getSpaceId();
        ParkingSystem.Booking booking36 = parkingSpace34.getCurrentBooking();
        java.lang.String str37 = parkingSpace34.scanSpace();
        ParkingSystem.Enabled enabled38 = new ParkingSystem.Enabled();
        parkingSpace34.setState((ParkingSystem.SpaceState) enabled38);
        parkingSpace23.setState((ParkingSystem.SpaceState) enabled38);
        ParkingSystem.ParkingLot parkingLot42 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator43 = parkingLot42.getIterator();
        ParkingSystem.Booking booking45 = null;
        boolean boolean46 = parkingLot42.assignBooking((int) (short) 1, booking45);
        ParkingSystem.ParkingSpace parkingSpace48 = parkingLot42.getParkingSpace((int) ' ');
        java.lang.String str49 = enabled38.scanSpace(parkingSpace48);
        int int50 = parkingSpace48.getSpaceId();
        ParkingSystem.ParkingLot parkingLot52 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking54 = null;
        boolean boolean55 = parkingLot52.assignBooking(0, booking54);
        boolean boolean57 = parkingLot52.isSpaceAvailable((int) '#');
        boolean boolean59 = parkingLot52.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace61 = parkingLot52.getParkingSpace((int) (byte) 10);
        int int62 = parkingSpace61.getSpaceId();
        ParkingSystem.Booking booking63 = parkingSpace61.getCurrentBooking();
        java.lang.String str64 = parkingSpace61.scanSpace();
        ParkingSystem.Enabled enabled65 = new ParkingSystem.Enabled();
        parkingSpace61.setState((ParkingSystem.SpaceState) enabled65);
        parkingSpace48.setState((ParkingSystem.SpaceState) enabled65);
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled65);
        ParkingSystem.ParkingLot parkingLot70 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking72 = null;
        boolean boolean73 = parkingLot70.assignBooking(0, booking72);
        boolean boolean75 = parkingLot70.isSpaceAvailable((int) '#');
        boolean boolean77 = parkingLot70.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace79 = parkingLot70.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking80 = parkingSpace79.getCurrentBooking();
        java.lang.String str81 = parkingSpace79.scanSpace();
        java.lang.String str82 = parkingSpace79.scanSpace();
        java.lang.String str83 = enabled65.scanSpace(parkingSpace79);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "empty" + "'", str12, "empty");
        org.junit.Assert.assertNotNull(spaceState13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(parkingSpace23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(parkingSpace34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNull(booking36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "empty" + "'", str37, "empty");
        org.junit.Assert.assertNotNull(parkingLotIterator43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(parkingSpace48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "empty" + "'", str49, "empty");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(parkingSpace61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNull(booking63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "empty" + "'", str64, "empty");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(parkingSpace79);
        org.junit.Assert.assertNull(booking80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "empty" + "'", str81, "empty");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "empty" + "'", str82, "empty");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "empty" + "'", str83, "empty");
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean4 = parkingSpaceFacade0.cancelBooking("jane");
        boolean boolean7 = parkingSpaceFacade0.extendBooking("hi!", (-1));
        parkingSpaceFacade0.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        boolean boolean12 = parkingSpaceFacade0.cancelBooking("Card number should be 16 digits");
        parkingSpaceFacade0.addParkingLot("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean16 = parkingSpaceFacade0.checkIn("4CGFxoSEo5");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        double double6 = bookingManager0.getDeposit("Jane");
        ParkingSystem.AccountRegistry accountRegistry7 = bookingManager0.getAccountRegistry();
        boolean boolean17 = bookingManager0.confirmBooking("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "Refunded total cost of $1.0", "CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", "Refunded without deposit ($0.0)", 32, "ST001", (int) (short) 1, "", "CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        boolean boolean19 = bookingManager0.cancelBooking("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        ParkingSystem.MobilePay mobilePay20 = new ParkingSystem.MobilePay();
        boolean boolean25 = mobilePay20.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean30 = mobilePay20.processPayment("jane", 15.0d, "jane", "");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay20);
        boolean boolean33 = bookingManager0.cancelBooking("Refunded total cost of $10.0");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 15.0d + "'", double6 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        parkingSpaceProxy18.validateClient("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        boolean boolean34 = parkingSpaceProxy18.extendBooking("pass", (int) (short) 100);
        parkingSpaceProxy18.autoGenerateManager();
        parkingSpaceProxy18.validateClient("XBERLIguFg");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "4a1f2343-8b2e-4dea-ba69-efd105414390", accountRegistry3);
        java.lang.String str5 = superManager4.getPassword();
        superManager4.validateClient("Jane");
        superManager4.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded total cost of $0.0" + "'", str5, "Refunded total cost of $0.0");
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        boolean boolean12 = accountRegistry9.requiresValidation("disabled");
        int int13 = accountRegistry9.getManagersSize();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        accountRegistry15.validateClient("pass");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.Manager manager21 = superManager18.autoGenerateManager();
        java.lang.String str22 = manager21.getManagerId();
        java.lang.String str23 = manager21.getManagerId();
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(manager21);
// flaky "75) test2415(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54" + "'", str22, "62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54");
// flaky "33) test2415(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54" + "'", str23, "62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54");
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade6 = parkingSpaceProxy0.getFacade();
        boolean boolean8 = parkingSpaceFacade6.checkIn("CLT-f02c481e-1504-4abf-b598-76152da8586a");
        ParkingSystem.Booking booking10 = parkingSpaceFacade6.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(booking10);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        boolean boolean10 = parkingLot1.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot1.getParkingSpace((int) '4');
        int int13 = parkingSpace12.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking((int) ' ');
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(0);
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot1.getParkingSpace((int) '#');
        parkingLot1.removeBooking(52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNotNull(parkingSpace13);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getExtraId();
        client0.setClientInfo("cf448544-0e6d-4a41-94c2-e67f848ae8df", "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "jane", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "89de8237-29df-4908-9de4-6dc1ce90de94", "fhd49ADb", true);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "jane" + "'", str10, "jane");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str23 = parkingSpaceFacade20.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager24 = parkingSpaceFacade20.getSpaceManager();
        spaceManager24.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap27 = spaceManager24.getParkingLots();
        user0.user = spaceManager24;
        java.lang.Object obj29 = null;
        user0.user = obj29;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy34.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy37 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj40 = parkingSpaceProxy37.login("empty", "Jane");
        parkingSpaceProxy37.validateClient("Jane");
        parkingSpaceProxy37.toggleSpace("", "staff", false);
        accountRegistry35.assignProxyToManager("pass", parkingSpaceProxy37);
        ParkingSystem.Client client49 = accountRegistry35.getClient("");
        ParkingSystem.SuperManager superManager50 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry35);
        boolean boolean56 = accountRegistry35.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy58 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry59 = parkingSpaceProxy58.getRegistry();
        boolean boolean61 = parkingSpaceProxy58.checkIn("");
        parkingSpaceProxy58.toggleLot("", true);
        accountRegistry35.assignProxyToManager("", parkingSpaceProxy58);
        user0.parkingProxy = parkingSpaceProxy58;
        parkingSpaceProxy58.displayPendingValidations();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786" + "'", str6, "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(spaceManager24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(accountRegistry35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(client49);
        org.junit.Assert.assertNotNull(superManager50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(accountRegistry59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        ParkingSystem.Client client10 = accountRegistry8.getClient("ST001");
        ParkingSystem.AccountRegistry accountRegistry15 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager16 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry15);
        boolean boolean18 = accountRegistry15.requiresValidation("disabled");
        int int19 = accountRegistry15.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("Jane");
        accountRegistry15.assignProxyToClient("pass", parkingSpaceProxy21);
        boolean boolean39 = parkingSpaceProxy21.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean45 = parkingSpaceProxy21.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.Booking booking47 = parkingSpaceProxy21.getBookingDetails("hi!");
        boolean boolean49 = parkingSpaceProxy21.checkOut("ST001");
        accountRegistry8.assignProxyToManager("CLT-f02c481e-1504-4abf-b598-76152da8586a", parkingSpaceProxy21);
        int int51 = accountRegistry8.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str6, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertNotNull(superManager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(booking47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        boolean boolean4 = client0.editBooking("jane", (int) (short) 0);
        boolean boolean6 = client0.extendBooking(32);
        ParkingSystem.Booking booking7 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(booking7);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade9.getBookingManager();
        boolean boolean14 = parkingSpaceFacade9.cancelBooking("Refunded total cost of $10.0");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = spaceManager32.assignBooking("disabled", (int) (byte) 0, booking68);
        boolean boolean71 = parkingSpace10.assignBooking(booking68);
        parkingSpace10.removeBooking();
        ParkingSystem.SpaceState spaceState73 = parkingSpace10.getState();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(spaceState73);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        ParkingSystem.Booking booking16 = bookingManager0.getBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        ParkingSystem.SpaceManager spaceManager17 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager18 = bookingManager0.getSpaceManager();
        spaceManager18.toggleSpace("CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3", "e8686ac8-1df7-4a9b-b299-8fbcdd585528", true);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(spaceManager17);
        org.junit.Assert.assertNotNull(spaceManager18);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        boolean boolean11 = client2.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        client2.assignProxy(parkingSpaceProxy12);
        ParkingSystem.AccountRegistry accountRegistry14 = parkingSpaceProxy12.getRegistry();
        boolean boolean16 = parkingSpaceProxy12.checkIn("hi!");
        user0.parkingProxy = parkingSpaceProxy12;
        java.lang.Object obj20 = user0.login("ST001", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.User user21 = new ParkingSystem.User();
        java.lang.Object obj22 = user21.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = user21.parkingProxy;
        ParkingSystem.PaymentManager paymentManager24 = new ParkingSystem.PaymentManager();
        java.lang.String str25 = paymentManager24.refundMessage;
        boolean boolean27 = paymentManager24.refundTotalCost((-1.0d));
        paymentManager24.refundMessage = "disabled";
        boolean boolean34 = paymentManager24.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean37 = paymentManager24.refundWithoutDeposit(165.0d, 10.0d);
        user21.user = boolean37;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy39 = user21.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy40 = user21.parkingProxy;
        ParkingSystem.User user41 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj45 = parkingSpaceProxy42.login("empty", "Jane");
        parkingSpaceProxy42.validateClient("Jane");
        parkingSpaceProxy42.toggleSpace("", "staff", false);
        boolean boolean53 = parkingSpaceProxy42.cancelBooking("");
        user41.assignProxy(parkingSpaceProxy42);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy55 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry56 = parkingSpaceProxy55.getRegistry();
        boolean boolean62 = parkingSpaceProxy55.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean66 = parkingSpaceProxy55.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user41.parkingProxy = parkingSpaceProxy55;
        user21.parkingProxy = parkingSpaceProxy55;
        user0.assignProxy(parkingSpaceProxy55);
        parkingSpaceProxy55.displayPendingValidations();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str3, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(accountRegistry14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(parkingSpaceProxy23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(parkingSpaceProxy39);
        org.junit.Assert.assertNull(parkingSpaceProxy40);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(accountRegistry56);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean10 = mobilePay0.processPayment("disabled", (double) (-1), "hi!", "hi!");
        java.lang.String str11 = mobilePay0.getPaymentMessage();
        boolean boolean16 = mobilePay0.processPayment("Refunded without deposit ($1.0)", (double) (short) -1, "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str11, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("86z9Z9e0MN", (double) (byte) 1, "staff", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        paymentManager0.refundMessage = "Refunded total cost of $0.0";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray5 = cSVManager0.loadSuperManager();
        ParkingSystem.SpaceManager spaceManager6 = new ParkingSystem.SpaceManager();
        spaceManager6.removeBooking("hi!", (int) (byte) 0);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap10 = spaceManager6.getParkingLots();
        cSVManager0.saveParkingLots(strMap10);
        java.lang.String[] strArray12 = cSVManager0.loadSuperManager();
        ParkingSystem.CSVManager cSVManager13 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList15 = cSVManager13.readCSV("");
        java.util.List<java.lang.String[]> strArrayList17 = cSVManager13.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap18 = null;
        cSVManager13.loadParkingLots(strMap18);
        ParkingSystem.AccountRegistry accountRegistry23 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry23);
        ParkingSystem.Manager manager25 = superManager24.autoGenerateManager();
        cSVManager13.saveManager((ParkingSystem.Manager) superManager24);
        ParkingSystem.AccountRegistry accountRegistry30 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager31 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry30);
        java.lang.String str32 = superManager31.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry33 = superManager31.registry;
        cSVManager13.saveManager((ParkingSystem.Manager) superManager31);
        ParkingSystem.Manager manager35 = superManager31.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry36 = superManager31.getRegistry();
        superManager31.setManagerInfo("Refunded total cost of $0.0", "disabled", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        cSVManager0.saveManager((ParkingSystem.Manager) superManager31);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArray5);
// flaky "76) test2429(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray5, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strArray12);
// flaky "34) test2429(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray12, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList15);
        org.junit.Assert.assertNotNull(strArrayList17);
        org.junit.Assert.assertNotNull(superManager24);
        org.junit.Assert.assertNotNull(manager25);
        org.junit.Assert.assertNotNull(superManager31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str32, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry33);
        org.junit.Assert.assertNotNull(manager35);
        org.junit.Assert.assertNotNull(accountRegistry36);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        boolean boolean18 = booking16.isCheckedIn();
        booking16.setCheckedIn(true);
        java.lang.String str21 = booking16.getClientId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        boolean boolean18 = paymentManager0.processPayment("disabled", (double) 10.0f, "2afd610d-a8cb-413a-bbee-7927f86b526c", "pass");
        boolean boolean21 = paymentManager0.refundWithoutDeposit(0.0d, (double) (-1.0f));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        boolean boolean11 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot1.getParkingSpace(0);
        ParkingSystem.ParkingLotIterator parkingLotIterator14 = parkingLot1.getIterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(parkingSpace13);
        org.junit.Assert.assertNotNull(parkingLotIterator14);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        client0.setClientInfo("0b35479f-5869-423e-9abc-e4ab9cef903d", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "86z9Z9e0MN", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "86z9Z9e0MN", "hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = client0.editBooking("Paid $ 15.0 with Mobile Pay", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.editBooking(String, String, int)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        boolean boolean16 = accountRegistry6.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj21 = parkingSpaceProxy18.login("empty", "Jane");
        parkingSpaceProxy18.validateClient("Jane");
        parkingSpaceProxy18.toggleSpace("", "staff", false);
        boolean boolean29 = parkingSpaceProxy18.cancelBooking("Jane");
        accountRegistry6.assignProxyToClient("pass", parkingSpaceProxy18);
        boolean boolean32 = accountRegistry6.requiresValidation("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        ParkingSystem.SuperManager superManager33 = ParkingSystem.SuperManager.createFromCSV("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6", "hi!", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", accountRegistry6);
        ParkingSystem.Manager manager34 = accountRegistry6.autoGenerateManager();
        ParkingSystem.User user35 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj39 = parkingSpaceProxy36.login("empty", "Jane");
        parkingSpaceProxy36.validateClient("Jane");
        parkingSpaceProxy36.toggleSpace("", "staff", false);
        boolean boolean47 = parkingSpaceProxy36.cancelBooking("");
        user35.assignProxy(parkingSpaceProxy36);
        java.lang.Object obj51 = parkingSpaceProxy36.login("disabled", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        parkingSpaceProxy36.displayPendingValidations();
        manager34.assignProxy(parkingSpaceProxy36);
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(superManager33);
        org.junit.Assert.assertNotNull(manager34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean4 = parkingSpaceFacade0.cancelBooking("jane");
        boolean boolean7 = parkingSpaceFacade0.extendBooking("hi!", (-1));
        parkingSpaceFacade0.toggleSpace("", "86z9Z9e0MN", true);
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        java.lang.String str6 = spaceManager0.scanSpace("hi!", "disabled");
        spaceManager0.addParkingLot("Card number should be 16 digits");
        spaceManager0.addParkingLot("");
        java.lang.String str13 = spaceManager0.scanSpace("h40rNQ7kR1", "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "disabled" + "'", str13, "disabled");
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = parkingLot10.assignBooking((int) (short) -1, booking24);
        java.lang.String str26 = booking24.getLotId();
        boolean boolean27 = parkingLot1.assignBooking(0, booking24);
        ParkingSystem.ParkingLotIterator parkingLotIterator28 = parkingLot1.getIterator();
        parkingLot1.removeBooking(2);
        boolean boolean32 = parkingLot1.isSpaceAvailable((int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.Enabled enabled16 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled16);
        ParkingSystem.Enabled enabled18 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        boolean boolean27 = parkingLot20.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot20.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking30 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        java.lang.String str32 = enabled18.scanSpace(parkingSpace29);
        ParkingSystem.ParkingLot parkingLot34 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking36 = null;
        boolean boolean37 = parkingLot34.assignBooking(0, booking36);
        boolean boolean39 = parkingLot34.isSpaceAvailable((int) '#');
        boolean boolean41 = parkingLot34.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace43 = parkingLot34.getParkingSpace((int) (byte) 10);
        int int44 = parkingSpace43.getSpaceId();
        ParkingSystem.Booking booking45 = parkingSpace43.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager46 = new ParkingSystem.SpaceManager();
        boolean boolean49 = spaceManager46.isSpaceAvailable("hi!", (int) '#');
        spaceManager46.toggleLot("disabled", false);
        ParkingSystem.Booking booking62 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean63 = spaceManager46.assignBooking("empty", (int) (short) 0, booking62);
        boolean boolean64 = parkingSpace43.assignBooking(booking62);
        java.lang.String str65 = enabled18.scanSpace(parkingSpace43);
        ParkingSystem.Disabled disabled66 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace67 = null;
        java.lang.String str68 = disabled66.scanSpace(parkingSpace67);
        ParkingSystem.ParkingSpace parkingSpace69 = null;
        java.lang.String str70 = disabled66.scanSpace(parkingSpace69);
        ParkingSystem.ParkingLot parkingLot72 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking74 = null;
        boolean boolean75 = parkingLot72.assignBooking(0, booking74);
        boolean boolean77 = parkingLot72.isSpaceAvailable((int) '#');
        boolean boolean79 = parkingLot72.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace81 = parkingLot72.getParkingSpace((int) (byte) 10);
        int int82 = parkingSpace81.getSpaceId();
        ParkingSystem.Booking booking83 = parkingSpace81.getCurrentBooking();
        java.lang.String str84 = parkingSpace81.scanSpace();
        ParkingSystem.Enabled enabled85 = new ParkingSystem.Enabled();
        parkingSpace81.setState((ParkingSystem.SpaceState) enabled85);
        java.lang.String str87 = disabled66.scanSpace(parkingSpace81);
        java.lang.String str88 = enabled18.scanSpace(parkingSpace81);
        int int89 = parkingSpace81.getSpaceId();
        java.lang.String str90 = parkingSpace81.scanSpace();
        java.lang.String str91 = enabled16.scanSpace(parkingSpace81);
        boolean boolean92 = parkingSpace81.isAvailable();
        boolean boolean93 = parkingSpace81.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "empty" + "'", str32, "empty");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(parkingSpace43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNull(booking45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "disabled" + "'", str65, "disabled");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "disabled" + "'", str68, "disabled");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "disabled" + "'", str70, "disabled");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(parkingSpace81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertNull(booking83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "empty" + "'", str84, "empty");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "disabled" + "'", str87, "disabled");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "empty" + "'", str88, "empty");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "empty" + "'", str90, "empty");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "empty" + "'", str91, "empty");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (short) 10);
        parkingLot1.removeBooking(4);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj12 = parkingSpaceProxy9.login("empty", "Jane");
        parkingSpaceProxy9.validateClient("Jane");
        parkingSpaceProxy9.toggleSpace("", "staff", false);
        accountRegistry7.assignProxyToManager("pass", parkingSpaceProxy9);
        ParkingSystem.Client client21 = accountRegistry7.getClient("");
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry7);
        boolean boolean28 = accountRegistry7.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry31 = parkingSpaceProxy30.getRegistry();
        boolean boolean33 = parkingSpaceProxy30.checkIn("");
        parkingSpaceProxy30.toggleLot("", true);
        accountRegistry7.assignProxyToManager("", parkingSpaceProxy30);
        accountRegistry7.validateClient("Paid $ 0.0 with Mobile Pay");
        java.lang.Object obj42 = accountRegistry7.login("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.SuperManager superManager43 = ParkingSystem.SuperManager.createFromCSV("3b453211-7dd1-4452-8741-a206711c1217", "Refunded total cost of $100.0", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", accountRegistry7);
        ParkingSystem.Client client45 = accountRegistry7.getClient("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(client21);
        org.junit.Assert.assertNotNull(superManager22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(accountRegistry31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(superManager43);
        org.junit.Assert.assertNull(client45);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("staff", false);
        ParkingSystem.BookingManager bookingManager8 = parkingSpaceFacade0.getBookingManager();
        boolean boolean11 = parkingSpaceFacade0.extendBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (int) '#');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(bookingManager8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        boolean boolean29 = accountRegistry3.requiresValidation("empty");
        ParkingSystem.Manager manager30 = accountRegistry3.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(manager30);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        java.lang.String str22 = superManager21.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager21.registry;
        java.lang.String str24 = superManager21.getManagerId();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        superManager21.assignProxy(parkingSpaceProxy35);
        user0.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry39 = parkingSpaceProxy35.getRegistry();
        java.lang.String str42 = parkingSpaceProxy35.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj45 = parkingSpaceProxy35.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade46 = parkingSpaceProxy35.getFacade();
        ParkingSystem.CheckInManager checkInManager47 = parkingSpaceFacade46.getCheckInManager();
        boolean boolean49 = checkInManager47.checkIn("FNuxCiXmkP");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
// flaky "77) test2443(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str22, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(accountRegistry23);
// flaky "35) test2443(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str24, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "disabled" + "'", str42, "disabled");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(parkingSpaceFacade46);
        org.junit.Assert.assertNotNull(checkInManager47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        java.lang.Object obj27 = user0.user;
        java.lang.Object obj30 = user0.login("Card number should be 16 digits", "Card number should be 16 digits");
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        java.lang.String str40 = spaceManager31.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        ParkingSystem.ParkingLot parkingLot44 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking46 = null;
        boolean boolean47 = parkingLot44.assignBooking(0, booking46);
        boolean boolean49 = parkingLot44.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking58 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean59 = parkingLot44.assignBooking((int) (short) -1, booking58);
        java.lang.String str60 = booking58.getLotId();
        java.lang.String str61 = booking58.getLicensePlate();
        booking58.setStartTime("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        booking58.setDuration((int) (short) 10);
        boolean boolean66 = spaceManager31.assignBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", (-1), booking58);
        booking58.setStartTime("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        user0.user = booking58;
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "disabled" + "'", str40, "disabled");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "jane" + "'", str60, "jane");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "disabled" + "'", str61, "disabled");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        java.lang.Object obj22 = user0.login("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "Refunded without deposit ($-96.0)");
        java.lang.Object obj25 = user0.login("Card number should be 16 digits", "iHAHREGIAH");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade5 = parkingSpaceProxy0.getFacade();
        parkingSpaceProxy0.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        parkingSpaceProxy0.autoGenerateManager();
        java.lang.Object obj11 = parkingSpaceProxy0.login("", "Refunded total cost of $10.0");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertNotNull(parkingSpaceFacade5);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade9.getBookingManager();
        ParkingSystem.PaymentManager paymentManager13 = new ParkingSystem.PaymentManager();
        paymentManager13.paymentMessage = "staff";
        boolean boolean17 = paymentManager13.refundTotalCost((double) (short) 0);
        boolean boolean19 = paymentManager13.refundTotalCost((double) (byte) 100);
        paymentManager13.paymentMessage = "";
        ParkingSystem.BookingManager bookingManager22 = new ParkingSystem.BookingManager();
        double double25 = bookingManager22.calculateCost("", 0);
        double double27 = bookingManager22.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager28 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager29 = new ParkingSystem.CheckInManager(bookingManager28);
        ParkingSystem.SpaceManager spaceManager30 = bookingManager28.getSpaceManager();
        double double33 = bookingManager28.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit34 = new ParkingSystem.DebitOrCredit();
        bookingManager28.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit34);
        boolean boolean40 = debitOrCredit34.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager22.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit34);
        boolean boolean46 = debitOrCredit34.processPayment("Paid $ 0.0 with Mobile Pay", 15.0d, "", "Paid $ 0.0 with Mobile Pay");
        paymentManager13.setStrategy((ParkingSystem.Strategy) debitOrCredit34);
        bookingManager12.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit34);
        ParkingSystem.AccountRegistry accountRegistry49 = bookingManager12.getAccountRegistry();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 15.0d + "'", double25 == 15.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 15.0d + "'", double27 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager30);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 165.0d + "'", double33 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(accountRegistry49);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.CSVManager cSVManager14 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList16 = cSVManager14.readCSV("");
        java.util.List<java.lang.String[]> strArrayList18 = cSVManager14.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap19 = null;
        cSVManager14.loadParkingLots(strMap19);
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.Manager manager26 = superManager25.autoGenerateManager();
        cSVManager14.saveManager((ParkingSystem.Manager) superManager25);
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        spaceManager28.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager28.getParkingLots();
        cSVManager14.loadParkingLots(strMap47);
        ParkingSystem.SpaceManager spaceManager49 = new ParkingSystem.SpaceManager();
        boolean boolean52 = spaceManager49.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str55 = spaceManager49.scanSpace("disabled", "");
        spaceManager49.addParkingLot("hi!");
        java.lang.String str60 = spaceManager49.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap61 = spaceManager49.getParkingLots();
        cSVManager14.saveParkingLots(strMap61);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade63 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str66 = parkingSpaceFacade63.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager67 = parkingSpaceFacade63.getSpaceManager();
        spaceManager67.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap70 = spaceManager67.getParkingLots();
        cSVManager14.saveParkingLots(strMap70);
        cSVManager0.loadParkingLots(strMap70);
        java.lang.String[] strArray73 = cSVManager0.loadSuperManager();
        ParkingSystem.SpaceManager spaceManager74 = new ParkingSystem.SpaceManager();
        spaceManager74.removeBooking("hi!", (int) (byte) 0);
        spaceManager74.addParkingLot("");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap80 = spaceManager74.getParkingLots();
        cSVManager0.loadParkingLots(strMap80);
        ParkingSystem.AccountRegistry accountRegistry85 = null;
        ParkingSystem.SuperManager superManager86 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry85);
        ParkingSystem.Manager manager87 = superManager86.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy88 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry89 = parkingSpaceProxy88.getRegistry();
        java.lang.String str92 = parkingSpaceProxy88.scanSpace("empty", "hi!");
        parkingSpaceProxy88.addParkingLot("empty");
        parkingSpaceProxy88.addParkingLot("");
        superManager86.assignProxy(parkingSpaceProxy88);
        ParkingSystem.Manager manager98 = superManager86.autoGenerateManager();
        cSVManager0.saveManager(manager98);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(strArrayList16);
        org.junit.Assert.assertNotNull(strArrayList18);
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(manager26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "disabled" + "'", str60, "disabled");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertNotNull(spaceManager67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strArray73);
// flaky "78) test2448(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray73, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(superManager86);
        org.junit.Assert.assertNotNull(manager87);
        org.junit.Assert.assertNotNull(accountRegistry89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "disabled" + "'", str92, "disabled");
        org.junit.Assert.assertNotNull(manager98);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean21 = debitOrCredit6.validateCard("Jane", (double) '4');
        java.lang.String str22 = debitOrCredit6.getPaymentMessage();
        boolean boolean27 = debitOrCredit6.processPayment("02659ad3-0b5c-4c48-a915-a466f2b50775", 0.0d, "TXCrKOGD", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        java.lang.String str28 = debitOrCredit6.getPaymentMessage();
        java.lang.String str29 = debitOrCredit6.getPaymentMessage();
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Card number should be 16 digits" + "'", str22, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Card number should be 16 digits" + "'", str28, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Card number should be 16 digits" + "'", str29, "Card number should be 16 digits");
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        ParkingSystem.ParkingSpace parkingSpace7 = parkingLot1.getParkingSpace((int) ' ');
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLot1.getParkingSpace(32);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(parkingSpace7);
        org.junit.Assert.assertNotNull(parkingSpace9);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceProxy4.addParkingLot("Jane");
        parkingSpaceProxy4.validateClient("fhd49ADb");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean29 = paymentManager0.refundDeposit(0.0d);
        boolean boolean34 = paymentManager0.processPayment("8ca2ec61-774c-409d-89d5-5b9171b40497", (double) 1, "", "9fJ5pCUl");
        java.lang.String str35 = paymentManager0.refundMessage;
        boolean boolean40 = paymentManager0.processPayment("Paid $ -1.0 with Mobile Pay", 1470.0d, "SRiN5ev00N", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        boolean boolean42 = paymentManager0.refundTotalCost((double) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Refunded deposit of $0.0" + "'", str35, "Refunded deposit of $0.0");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.toggleLot("pass", true);
        spaceManager0.addParkingLot("pass");
        spaceManager0.removeBooking("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 32);
        spaceManager0.removeBooking("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", (-1));
        spaceManager0.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.validateClient("");
        parkingSpaceProxy0.autoGenerateManager();
        boolean boolean8 = parkingSpaceProxy0.cancelBooking("cf448544-0e6d-4a41-94c2-e67f848ae8df");
        java.lang.Object obj11 = parkingSpaceProxy0.login("2afd610d-a8cb-413a-bbee-7927f86b526c", "Refunded total cost of $0.0");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj17 = user0.user;
        ParkingSystem.User user18 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj22 = parkingSpaceProxy19.login("empty", "Jane");
        parkingSpaceProxy19.validateClient("Jane");
        parkingSpaceProxy19.toggleSpace("", "staff", false);
        boolean boolean30 = parkingSpaceProxy19.cancelBooking("");
        user18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry33 = parkingSpaceProxy32.getRegistry();
        boolean boolean39 = parkingSpaceProxy32.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean43 = parkingSpaceProxy32.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user18.parkingProxy = parkingSpaceProxy32;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy45 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry46 = parkingSpaceProxy45.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj51 = parkingSpaceProxy48.login("empty", "Jane");
        parkingSpaceProxy48.validateClient("Jane");
        parkingSpaceProxy48.toggleSpace("", "staff", false);
        accountRegistry46.assignProxyToManager("pass", parkingSpaceProxy48);
        boolean boolean64 = parkingSpaceProxy48.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled", "Refunded total cost of $1.0", "", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user18.parkingProxy = parkingSpaceProxy48;
        user18.user = (byte) 10;
        user0.user = user18;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(accountRegistry33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(accountRegistry46);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.loadParkingLots();
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        boolean boolean46 = parkingSpace25.assignBooking(booking44);
        ParkingSystem.SpaceManager spaceManager47 = new ParkingSystem.SpaceManager();
        boolean boolean50 = spaceManager47.isSpaceAvailable("hi!", (int) '#');
        spaceManager47.toggleLot("disabled", false);
        ParkingSystem.Booking booking63 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean64 = spaceManager47.assignBooking("empty", (int) (short) 0, booking63);
        ParkingSystem.SpaceManager spaceManager67 = new ParkingSystem.SpaceManager();
        boolean boolean70 = spaceManager67.isSpaceAvailable("hi!", (int) '#');
        spaceManager67.toggleLot("disabled", false);
        ParkingSystem.Booking booking83 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean84 = spaceManager67.assignBooking("empty", (int) (short) 0, booking83);
        boolean boolean85 = spaceManager47.assignBooking("disabled", (int) (byte) 0, booking83);
        boolean boolean86 = parkingSpace25.assignBooking(booking83);
        boolean boolean87 = spaceManager0.assignBooking("", (int) (byte) 0, booking83);
        int int88 = booking83.getDuration();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 32 + "'", int88 == 32);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.CheckInManager checkInManager11 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean13 = checkInManager11.checkOut("86z9Z9e0MN");
        checkInManager11.refundMessage = "09622cbf-e665-45db-b1ad-365065947a20";
        boolean boolean17 = checkInManager11.checkIn("CLT-22138484-eb59-490e-9c41-9fd9c319dcda");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(checkInManager11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean11 = bookingManager0.editBooking("Jane", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (short) 1);
        ParkingSystem.SpaceManager spaceManager12 = bookingManager0.getSpaceManager();
        ParkingSystem.AccountRegistry accountRegistry13 = bookingManager0.getAccountRegistry();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(spaceManager12);
        org.junit.Assert.assertNotNull(accountRegistry13);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        ParkingSystem.MobilePay mobilePay4 = new ParkingSystem.MobilePay();
        boolean boolean9 = mobilePay4.processPayment("hi!", (-1.0d), "", "");
        boolean boolean14 = mobilePay4.processPayment("staff", (double) (-1L), "disabled", "pass");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay4);
        java.lang.String str16 = paymentManager0.paymentMessage;
        boolean boolean18 = paymentManager0.refundTotalCost(100.0d);
        java.lang.String str19 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager20 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager21 = new ParkingSystem.CheckInManager(bookingManager20);
        ParkingSystem.SpaceManager spaceManager22 = bookingManager20.getSpaceManager();
        double double25 = bookingManager20.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit26 = new ParkingSystem.DebitOrCredit();
        bookingManager20.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit26);
        boolean boolean32 = debitOrCredit26.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str33 = debitOrCredit26.getPaymentMessage();
        java.lang.String str34 = debitOrCredit26.getPaymentMessage();
        java.lang.String str35 = debitOrCredit26.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit26);
        boolean boolean41 = debitOrCredit26.processPayment("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", 100.0d, "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "staff");
        boolean boolean46 = debitOrCredit26.processPayment("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", (double) 2, "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        boolean boolean49 = debitOrCredit26.validateCard("ST001", 165.0d);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 165.0d + "'", double25 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Card number should be 16 digits" + "'", str33, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Card number should be 16 digits" + "'", str34, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Card number should be 16 digits" + "'", str35, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        java.lang.String str2 = client0.getClientId();
        java.lang.String str3 = client0.getUsername();
        java.lang.String str4 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
// flaky "79) test2460(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
// flaky "36) test2460(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
// flaky "18) test2460(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
// flaky "9) test2460(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot16.assignBooking(1, booking21);
        ParkingSystem.ParkingLotIterator parkingLotIterator23 = parkingLot16.getIterator();
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLotIterator23.next();
        java.lang.String str25 = enabled0.scanSpace(parkingSpace24);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator23);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "empty" + "'", str25, "empty");
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        java.lang.Object obj16 = user0.login("Refunded total cost of $1.0", "Jane");
        java.lang.Object obj19 = user0.login("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "empty");
        java.lang.Object obj22 = user0.login("721fcb72-c57d-4e99-81b7-06e4c7e1ed40", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade1.checkIn("");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade1.getBookingManager();
        parkingSpaceFacade1.toggleLot("Paid $ -1.0 with Mobile Pay", false);
        user0.user = "Paid $ -1.0 with Mobile Pay";
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj12 = parkingSpaceProxy9.login("empty", "Jane");
        boolean boolean15 = parkingSpaceProxy9.extendBooking("", 100);
        boolean boolean19 = parkingSpaceProxy9.editBooking("Paid $ 10.0 with Mobile Pay", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (short) 10);
        parkingSpaceProxy9.toggleLot("2afd610d-a8cb-413a-bbee-7927f86b526c", true);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.String str26 = parkingSpaceProxy9.scanSpace("Refunded total cost of $10.0", "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.addParkingLot("Refunded total cost of $1.0");
        boolean boolean16 = spaceManager0.isSpaceAvailable("Refunded total cost of $-1.0", (int) ' ');
        spaceManager0.addParkingLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        ParkingSystem.ParkingLot parkingLot53 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking55 = null;
        boolean boolean56 = parkingLot53.assignBooking(0, booking55);
        boolean boolean58 = parkingLot53.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator59 = parkingLot53.getIterator();
        parkingLot53.removeBooking(0);
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLot53.getParkingSpace(0);
        java.lang.String str64 = disabled0.scanSpace(parkingSpace63);
        ParkingSystem.ParkingLot parkingLot66 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking68 = null;
        boolean boolean69 = parkingLot66.assignBooking(0, booking68);
        boolean boolean71 = parkingLot66.isSpaceAvailable((int) '#');
        boolean boolean73 = parkingLot66.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator74 = parkingLot66.getIterator();
        boolean boolean75 = parkingLot66.isEnabled();
        boolean boolean77 = parkingLot66.isSpaceAvailable((int) (short) -1);
        ParkingSystem.ParkingSpace parkingSpace79 = parkingLot66.getParkingSpace(32);
        java.lang.String str80 = disabled0.scanSpace(parkingSpace79);
        ParkingSystem.SpaceState spaceState81 = parkingSpace79.getState();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator59);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "disabled" + "'", str64, "disabled");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(parkingSpace79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "disabled" + "'", str80, "disabled");
        org.junit.Assert.assertNotNull(spaceState81);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.toggleLot("", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = parkingSpaceProxy0.getFacade();
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade7.getSpaceManager();
        parkingSpaceFacade7.toggleLot("Paid $ 1470.0 with Mobile Pay", false);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade7);
        org.junit.Assert.assertNotNull(spaceManager8);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry5 = superManager4.getRegistry();
        ParkingSystem.Manager manager6 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.registry;
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertNotNull(manager6);
        org.junit.Assert.assertNotNull(accountRegistry7);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager5.getSpaceManager();
        boolean boolean19 = bookingManager5.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double21 = bookingManager5.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit22 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit22);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit22);
        java.lang.String str25 = paymentManager0.refundMessage;
        java.lang.String str26 = paymentManager0.refundMessage;
        boolean boolean28 = paymentManager0.refundTotalCost((double) (-1));
        java.lang.String str29 = paymentManager0.refundMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Refunded total cost of $-1.0" + "'", str25, "Refunded total cost of $-1.0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Refunded total cost of $-1.0" + "'", str26, "Refunded total cost of $-1.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Refunded total cost of $-1.0" + "'", str29, "Refunded total cost of $-1.0");
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        java.lang.String str29 = superManager28.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = null;
        accountRegistry33.assignProxyToManager("disabled", parkingSpaceProxy36);
        superManager28.registry = accountRegistry33;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager28);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade40 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str43 = parkingSpaceFacade40.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager44 = parkingSpaceFacade40.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap45 = spaceManager44.getParkingLots();
        cSVManager0.saveParkingLots(strMap45);
        ParkingSystem.User user47 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj51 = parkingSpaceProxy48.login("empty", "Jane");
        parkingSpaceProxy48.validateClient("Jane");
        parkingSpaceProxy48.toggleSpace("", "staff", false);
        boolean boolean59 = parkingSpaceProxy48.cancelBooking("");
        user47.assignProxy(parkingSpaceProxy48);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy61 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry62 = parkingSpaceProxy61.getRegistry();
        boolean boolean68 = parkingSpaceProxy61.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean72 = parkingSpaceProxy61.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user47.parkingProxy = parkingSpaceProxy61;
        ParkingSystem.Client client74 = ParkingSystem.Client.getInstance();
        java.lang.String str75 = client74.getClientType();
        java.lang.String str76 = client74.getPassword();
        user47.user = client74;
        client74.setValidated(false);
        cSVManager0.saveClient(client74);
        org.junit.Assert.assertNotNull(strArray1);
// flaky "80) test2469(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "37) test2469(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
// flaky "19) test2469(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky "10) test2469(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str13, "2afd610d-a8cb-413a-bbee-7927f86b526c");
// flaky "4) test2469(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(superManager28);
// flaky "2) test2469(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str29, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "disabled" + "'", str43, "disabled");
        org.junit.Assert.assertNotNull(spaceManager44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(accountRegistry62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(client74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "empty" + "'", str75, "empty");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str76, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking19 = null;
        boolean boolean20 = parkingLot17.assignBooking(0, booking19);
        boolean boolean22 = parkingLot17.isSpaceAvailable((int) '#');
        boolean boolean24 = parkingLot17.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace26 = parkingLot17.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking27 = parkingSpace26.getCurrentBooking();
        parkingSpace26.removeBooking();
        ParkingSystem.Booking booking29 = parkingSpace26.getCurrentBooking();
        java.lang.String str30 = enabled14.scanSpace(parkingSpace26);
        ParkingSystem.ParkingLot parkingLot32 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking34 = null;
        boolean boolean35 = parkingLot32.assignBooking(0, booking34);
        boolean boolean37 = parkingLot32.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator38 = parkingLot32.getIterator();
        boolean boolean39 = parkingLotIterator38.hasNext();
        ParkingSystem.ParkingSpace parkingSpace40 = parkingLotIterator38.next();
        ParkingSystem.ParkingLot parkingLot42 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking44 = null;
        boolean boolean45 = parkingLot42.assignBooking(0, booking44);
        boolean boolean47 = parkingLot42.isSpaceAvailable((int) '#');
        boolean boolean49 = parkingLot42.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace51 = parkingLot42.getParkingSpace((int) (byte) 10);
        int int52 = parkingSpace51.getSpaceId();
        ParkingSystem.Booking booking53 = parkingSpace51.getCurrentBooking();
        java.lang.String str54 = parkingSpace51.scanSpace();
        ParkingSystem.Enabled enabled55 = new ParkingSystem.Enabled();
        parkingSpace51.setState((ParkingSystem.SpaceState) enabled55);
        parkingSpace40.setState((ParkingSystem.SpaceState) enabled55);
        ParkingSystem.ParkingLot parkingLot59 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator60 = parkingLot59.getIterator();
        ParkingSystem.Booking booking62 = null;
        boolean boolean63 = parkingLot59.assignBooking((int) (short) 1, booking62);
        ParkingSystem.ParkingSpace parkingSpace65 = parkingLot59.getParkingSpace((int) ' ');
        java.lang.String str66 = enabled55.scanSpace(parkingSpace65);
        ParkingSystem.ParkingSpace parkingSpace68 = new ParkingSystem.ParkingSpace(10);
        java.lang.String str69 = enabled55.scanSpace(parkingSpace68);
        java.lang.String str70 = enabled14.scanSpace(parkingSpace68);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(parkingSpace26);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertNull(booking29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "empty" + "'", str30, "empty");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(parkingSpace40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(parkingSpace51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertNull(booking53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "empty" + "'", str54, "empty");
        org.junit.Assert.assertNotNull(parkingLotIterator60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(parkingSpace65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "empty" + "'", str66, "empty");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "empty" + "'", str69, "empty");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "empty" + "'", str70, "empty");
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace4 = parkingLot1.getParkingSpace((int) (byte) -1);
        ParkingSystem.ParkingLot parkingLot6 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking8 = null;
        boolean boolean9 = parkingLot6.assignBooking(0, booking8);
        boolean boolean11 = parkingLot6.isSpaceAvailable((int) '#');
        boolean boolean13 = parkingLot6.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace15 = parkingLot6.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking16 = parkingSpace15.getCurrentBooking();
        parkingSpace15.removeBooking();
        int int18 = parkingSpace15.getSpaceId();
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("jane", "Paid $ 10.0 with Mobile Pay", (-1), "Paid $ 10.0 with Mobile Pay", (int) (short) 1, "hi!", (double) 100);
        boolean boolean27 = parkingSpace15.assignBooking(booking26);
        boolean boolean28 = parkingSpace4.assignBooking(booking26);
        java.lang.String str29 = booking26.getLotId();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(parkingSpace15);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str29, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.checkIn();
        client0.setClientInfo("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", true);
        java.lang.String str22 = client0.getClientId();
        java.lang.String str23 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "staff" + "'", str22, "staff");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str23, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean13 = parkingSpaceProxy4.editBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "02659ad3-0b5c-4c48-a915-a466f2b50775", 32);
        boolean boolean19 = parkingSpaceProxy4.register("83a51dc6-0c8f-4f21-ae40-68699828f95d", "Refunded total cost of $1.0", "disabled", "WxoDOyjI", "CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str1, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        java.lang.Object obj16 = user0.login("Refunded total cost of $1.0", "Jane");
        java.lang.Object obj19 = user0.login("721fcb72-c57d-4e99-81b7-06e4c7e1ed40", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap16 = accountRegistry14.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        java.lang.String str22 = parkingSpaceProxy18.scanSpace("empty", "hi!");
        boolean boolean32 = parkingSpaceProxy18.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy18.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean42 = parkingSpaceProxy18.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry14.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy18);
        accountRegistry6.assignProxyToManager("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        ParkingSystem.SuperManager superManager45 = ParkingSystem.SuperManager.createFromCSV("hi!", "hi!", "pass", accountRegistry6);
        java.util.List<ParkingSystem.Client> clientList46 = accountRegistry6.displayPendingValidations();
        accountRegistry6.validateClient("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(superManager45);
        org.junit.Assert.assertNotNull(clientList46);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.SpaceState spaceState11 = parkingSpace10.getState();
        ParkingSystem.ParkingLot parkingLot13 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking15 = null;
        boolean boolean16 = parkingLot13.assignBooking(0, booking15);
        boolean boolean18 = parkingLot13.isSpaceAvailable((int) '#');
        boolean boolean19 = parkingLot13.isEnabled();
        boolean boolean21 = parkingLot13.isSpaceAvailable((int) (byte) 100);
        ParkingSystem.ParkingLotIterator parkingLotIterator22 = parkingLot13.getIterator();
        boolean boolean23 = parkingLotIterator22.hasNext();
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLotIterator22.next();
        java.lang.String str25 = spaceState11.scanSpace(parkingSpace24);
        ParkingSystem.ParkingLot parkingLot27 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking29 = null;
        boolean boolean30 = parkingLot27.assignBooking(0, booking29);
        ParkingSystem.Booking booking32 = null;
        boolean boolean33 = parkingLot27.assignBooking(1, booking32);
        ParkingSystem.ParkingLot parkingLot36 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking38 = null;
        boolean boolean39 = parkingLot36.assignBooking(0, booking38);
        boolean boolean41 = parkingLot36.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking50 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean51 = parkingLot36.assignBooking((int) (short) -1, booking50);
        java.lang.String str52 = booking50.getLotId();
        boolean boolean53 = parkingLot27.assignBooking(0, booking50);
        ParkingSystem.ParkingLotIterator parkingLotIterator54 = parkingLot27.getIterator();
        ParkingSystem.ParkingSpace parkingSpace55 = parkingLotIterator54.next();
        ParkingSystem.SpaceState spaceState56 = parkingSpace55.getState();
        java.lang.String str57 = spaceState11.scanSpace(parkingSpace55);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNotNull(spaceState11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "empty" + "'", str25, "empty");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "jane" + "'", str52, "jane");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator54);
        org.junit.Assert.assertNotNull(parkingSpace55);
        org.junit.Assert.assertNotNull(spaceState56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "disabled" + "'", str57, "disabled");
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry9 = parkingSpaceProxy8.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj14 = parkingSpaceProxy11.login("empty", "Jane");
        parkingSpaceProxy11.validateClient("Jane");
        parkingSpaceProxy11.toggleSpace("", "staff", false);
        accountRegistry9.assignProxyToManager("pass", parkingSpaceProxy11);
        ParkingSystem.Client client23 = accountRegistry9.getClient("");
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry9);
        superManager4.registry = accountRegistry9;
        int int26 = accountRegistry9.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertNotNull(superManager24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        ParkingSystem.ParkingLotIterator parkingLotIterator10 = parkingLot1.getIterator();
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int20 = booking19.getDuration();
        java.lang.String str21 = booking19.getClientId();
        booking19.setStartTime("hi!");
        boolean boolean24 = booking19.isCheckedIn();
        java.lang.String str25 = booking19.getLotId();
        boolean boolean26 = parkingLot1.assignBooking((int) '#', booking19);
        boolean boolean28 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.SpaceManager spaceManager30 = new ParkingSystem.SpaceManager();
        boolean boolean33 = spaceManager30.isSpaceAvailable("hi!", (int) '#');
        spaceManager30.toggleLot("disabled", false);
        java.lang.String str39 = spaceManager30.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str42 = spaceManager30.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        ParkingSystem.Booking booking52 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double53 = booking52.getTotalCost();
        boolean boolean54 = spaceManager30.assignBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", 0, booking52);
        boolean boolean55 = parkingLot1.assignBooking((int) (short) 0, booking52);
        parkingLot1.setEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "jane" + "'", str25, "jane");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "disabled" + "'", str39, "disabled");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "disabled" + "'", str42, "disabled");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 1.0d + "'", double53 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        java.lang.Object obj32 = parkingSpaceProxy18.login("", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean34 = parkingSpaceProxy18.cancelBooking("Refunded without deposit ($0.0)");
        boolean boolean38 = parkingSpaceProxy18.editBooking("4a1f2343-8b2e-4dea-ba69-efd105414390", "86z9Z9e0MN", (int) (byte) 10);
        boolean boolean48 = parkingSpaceProxy18.confirmBooking("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", "CLT-b6a8264c-f386-4429-b59c-b7f465002e13", "Refunded total cost of $100.0", "12fea0ad-7859-47d9-95f1-1985d2c4ed33", (int) (byte) 0, "Refunded total cost of $0.0", (int) (byte) 0, "lL3e2yIMXI", "CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "81) test2479(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str5, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        boolean boolean6 = paymentManager0.refundDeposit((double) 1);
        paymentManager0.paymentMessage = "Paid $ 10.0 with Mobile Pay";
        ParkingSystem.BookingManager bookingManager9 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager10 = new ParkingSystem.CheckInManager(bookingManager9);
        ParkingSystem.SpaceManager spaceManager11 = bookingManager9.getSpaceManager();
        double double14 = bookingManager9.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit15 = new ParkingSystem.DebitOrCredit();
        bookingManager9.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit15);
        boolean boolean21 = debitOrCredit15.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str22 = debitOrCredit15.getPaymentMessage();
        boolean boolean27 = debitOrCredit15.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean30 = debitOrCredit15.validateCard("Jane", (double) '4');
        java.lang.String str31 = debitOrCredit15.getPaymentMessage();
        boolean boolean36 = debitOrCredit15.processPayment("02659ad3-0b5c-4c48-a915-a466f2b50775", 0.0d, "TXCrKOGD", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit15);
        boolean boolean39 = paymentManager0.refundDeposit((double) (byte) 1);
        paymentManager0.paymentMessage = "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(spaceManager11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 165.0d + "'", double14 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Card number should be 16 digits" + "'", str22, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Card number should be 16 digits" + "'", str31, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.checkIn();
        boolean boolean14 = client0.checkIn();
        java.lang.String str15 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace(35);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) (short) -1);
        int int2 = parkingSpace1.getSpaceId();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean35 = parkingSpaceProxy14.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry12.assignProxyToManager("empty", parkingSpaceProxy14);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade39 = parkingSpaceProxy38.getFacade();
        accountRegistry12.assignProxyToManager("", parkingSpaceProxy38);
        parkingSpaceProxy38.addParkingLot("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean44 = parkingSpaceProxy38.cancelBooking("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry45 = parkingSpaceProxy38.getRegistry();
        parkingSpaceProxy38.toggleSpace("", "", true);
        boolean boolean53 = parkingSpaceProxy38.editBooking("86z9Z9e0MN", "lL3e2yIMXI", (int) ' ');
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(accountRegistry45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        boolean boolean40 = parkingSpaceFacade33.extendBooking("jane", (int) ' ');
        ParkingSystem.SpaceManager spaceManager41 = parkingSpaceFacade33.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap42 = spaceManager41.getParkingLots();
        spaceManager41.loadParkingLots();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 0.0d, "disabled", "");
        boolean boolean21 = debitOrCredit6.validateCard("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", 60.0d);
        boolean boolean24 = debitOrCredit6.validateCard("Refunded total cost of $100.0", 1.0d);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = spaceManager0.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        ParkingSystem.Booking booking22 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double23 = booking22.getTotalCost();
        boolean boolean24 = spaceManager0.assignBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", 0, booking22);
        int int25 = booking22.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.AccountRegistry accountRegistry2 = bookingManager0.getAccountRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap3 = bookingManager0.getActiveBookings();
        boolean boolean7 = bookingManager0.editBooking("CLT-22138484-eb59-490e-9c41-9fd9c319dcda", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", 4);
        org.junit.Assert.assertNotNull(accountRegistry2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        superManager4.validateClient("Refunded without deposit ($-42.0)");
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.registry;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry9 = parkingSpaceProxy8.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj14 = parkingSpaceProxy11.login("empty", "Jane");
        parkingSpaceProxy11.validateClient("Jane");
        parkingSpaceProxy11.toggleSpace("", "staff", false);
        boolean boolean22 = parkingSpaceProxy11.cancelBooking("");
        boolean boolean28 = parkingSpaceProxy11.register("jane", "jane", "Jane", "hi!", "disabled");
        accountRegistry9.assignProxyToManager("empty", parkingSpaceProxy11);
        int int30 = accountRegistry9.getManagersSize();
        superManager4.registry = accountRegistry9;
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.SpaceManager spaceManager7 = bookingManager5.getSpaceManager();
        double double10 = bookingManager5.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit11 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit11);
        boolean boolean17 = debitOrCredit11.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit11);
        boolean boolean21 = debitOrCredit11.validateCard("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (double) '#');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 165.0d + "'", double10 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean5 = spaceManager2.isSpaceAvailable("Paid $ 0.0 with Mobile Pay", (int) (short) 1);
        spaceManager2.toggleLot("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", true);
        java.lang.String str11 = spaceManager2.scanSpace("Paid $ 1470.0 with Mobile Pay", "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) '#');
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        accountRegistry1.assignProxyToManager("pass", parkingSpaceProxy3);
        parkingSpaceProxy3.toggleSpace("Paid $ 100.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", false);
        parkingSpaceProxy3.toggleLot("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6", false);
        parkingSpaceProxy3.displayPendingValidations();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager6.getSpaceManager();
        double double11 = bookingManager6.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit12 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        boolean boolean18 = debitOrCredit12.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        double double21 = bookingManager0.getHourlyRate("");
        ParkingSystem.CheckInManager checkInManager22 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean24 = checkInManager22.checkIn("13b04414-31a5-407f-8ea3-fba4613c73d1");
        java.lang.String str25 = checkInManager22.refundMessage;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 165.0d + "'", double11 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.Client client7 = ParkingSystem.Client.getInstance();
        java.lang.String str8 = client7.getName();
        client7.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        boolean boolean14 = parkingSpaceProxy11.checkIn("");
        client7.assignProxy(parkingSpaceProxy11);
        boolean boolean16 = client7.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        client7.assignProxy(parkingSpaceProxy17);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        client7.assignProxy(parkingSpaceProxy19);
        cSVManager0.saveClient(client7);
        ParkingSystem.CSVManager cSVManager22 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray23 = cSVManager22.loadSuperManager();
        java.lang.String[] strArray24 = cSVManager22.loadSuperManager();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        java.lang.String str35 = client25.getExtraId();
        java.lang.String str36 = client25.getName();
        client25.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager22.saveClient(client25);
        ParkingSystem.AccountRegistry accountRegistry49 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager50 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry49);
        java.lang.String str51 = superManager50.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry55 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager56 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry55);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy58 = null;
        accountRegistry55.assignProxyToManager("disabled", parkingSpaceProxy58);
        superManager50.registry = accountRegistry55;
        cSVManager22.saveManager((ParkingSystem.Manager) superManager50);
        cSVManager0.saveManager((ParkingSystem.Manager) superManager50);
        ParkingSystem.AccountRegistry accountRegistry69 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager70 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry69);
        boolean boolean72 = accountRegistry69.requiresValidation("disabled");
        int int73 = accountRegistry69.getManagersSize();
        ParkingSystem.SuperManager superManager74 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry69);
        ParkingSystem.AccountRegistry accountRegistry75 = superManager74.getRegistry();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager74);
        ParkingSystem.Manager manager77 = superManager74.autoGenerateManager();
        org.junit.Assert.assertNotNull(strArray1);
// flaky "82) test2495(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "38) test2495(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(client7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "jane" + "'", str8, "jane");
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray23);
// flaky "20) test2495(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray23, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray24);
// flaky "11) test2495(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray24, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "disabled" + "'", str35, "disabled");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "jane" + "'", str36, "jane");
        org.junit.Assert.assertNotNull(superManager50);
// flaky "5) test2495(RegressionTest4)":         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str51, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(superManager56);
        org.junit.Assert.assertNotNull(superManager70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(superManager74);
        org.junit.Assert.assertNotNull(accountRegistry75);
        org.junit.Assert.assertNotNull(manager77);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        java.lang.String str13 = client0.getClientType();
        boolean boolean14 = client0.checkOut();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Refunded total cost of $1.0" + "'", str10, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "empty" + "'", str11, "empty");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "empty" + "'", str12, "empty");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str13, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        java.lang.String[] strArray30 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade31 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager32 = parkingSpaceFacade31.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager32.getParkingLots();
        cSVManager0.saveParkingLots(strMap33);
        java.util.List<java.lang.String[]> strArrayList36 = cSVManager0.readCSV("Refunded without deposit ($0.0)");
        org.junit.Assert.assertNotNull(strArray1);
// flaky "83) test2497(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "39) test2497(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
// flaky "21) test2497(RegressionTest4)":         org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strArrayList36);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        java.lang.String str5 = parkingSpaceFacade0.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager6 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean8 = checkInManager6.checkOut("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        checkInManager6.refundMessage = "13b04414-31a5-407f-8ea3-fba4613c73d1";
        boolean boolean12 = checkInManager6.checkIn("qMzKSKOI");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertNotNull(checkInManager6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry3 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.Manager manager4 = accountRegistry3.autoGenerateManager();
        java.lang.Object obj7 = accountRegistry3.login("433f3d1f-f758-4ae3-972b-7fb179aedfd7", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.Client client9 = accountRegistry3.getClient("9fJ5pCUl");
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(accountRegistry3);
        org.junit.Assert.assertNotNull(manager4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(client9);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) 2);
        boolean boolean11 = paymentManager0.refundTotalCost(540.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded total cost of $1.0" + "'", str7, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }
}
