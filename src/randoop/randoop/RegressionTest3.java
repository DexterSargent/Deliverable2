package randoop;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Class<?> wildcardClass17 = user0.getClass();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
// flaky "1) test1501(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean13 = bookingManager0.extendBooking("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", 10, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-96.0)");
        ParkingSystem.Booking booking15 = bookingManager0.getBooking("tbHxuilT");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(booking15);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        int int9 = booking7.getDuration();
        java.lang.String str10 = booking7.getClientId();
        double double11 = booking7.getTotalCost();
        booking7.setDuration((int) (short) -1);
        booking7.setStartTime("qMzKSKOI");
        java.lang.String str16 = booking7.getClientId();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "staff" + "'", str10, "staff");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "staff" + "'", str16, "staff");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.paymentMessage = "pass";
        paymentManager0.paymentMessage = "empty";
        boolean boolean9 = paymentManager0.refundTotalCost((double) (byte) 0);
        boolean boolean11 = paymentManager0.refundTotalCost((double) 2);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = null;
        accountRegistry3.assignProxyToManager("disabled", parkingSpaceProxy6);
        boolean boolean9 = accountRegistry3.requiresValidation("disabled");
        int int10 = accountRegistry3.getManagersSize();
        int int11 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.requiresValidation("");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        spaceManager0.loadParkingLots();
        spaceManager0.addParkingLot("staff");
        spaceManager0.removeBooking("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) (short) 1);
        spaceManager0.removeBooking("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.toggleSpace("Refunded without deposit ($0.0)", "disabled", false);
        spaceManager0.removeBooking("qPYDfDnbtD", (int) (byte) 1);
        spaceManager0.removeBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (byte) 100);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap17 = spaceManager0.getParkingLots();
        boolean boolean20 = spaceManager0.isSpaceAvailable("Paid $ 15.0 with Mobile Pay", (int) 'a');
        spaceManager0.removeBooking("86z9Z9e0MN", 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.Object obj4 = accountRegistry1.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        boolean boolean6 = accountRegistry1.requiresValidation("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        java.lang.Object obj9 = accountRegistry1.login("86z9Z9e0MN", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        ParkingSystem.Manager manager10 = accountRegistry1.autoGenerateManager();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(manager10);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = bookingManager0.extendBooking("jane", (int) (byte) 100, "hi!", "jane");
        ParkingSystem.SpaceManager spaceManager7 = bookingManager0.getSpaceManager();
        boolean boolean12 = bookingManager0.extendBooking("Refunded without deposit ($0.0)", (int) (byte) 1, "hi!", "pass");
        boolean boolean17 = bookingManager0.extendBooking("Refunded without deposit ($-42.0)", 0, "Refunded total cost of $1.0", "Jane");
        ParkingSystem.CheckInManager checkInManager18 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean20 = checkInManager18.checkIn("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        java.lang.String str21 = checkInManager18.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean24 = parkingSpaceProxy0.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        parkingSpaceProxy0.toggleSpace("jane", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", false);
        parkingSpaceProxy0.toggleLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41", true);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", "CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", 3, "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", (-1), "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", (double) (byte) -1);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        boolean boolean18 = paymentManager0.processPayment("disabled", (double) 10.0f, "2afd610d-a8cb-413a-bbee-7927f86b526c", "pass");
        boolean boolean23 = paymentManager0.processPayment("CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", (double) '4', "89de8237-29df-4908-9de4-6dc1ce90de94", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        paymentManager0.paymentMessage = "pass";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        boolean boolean17 = debitOrCredit6.processPayment("Jane", (double) 10.0f, "Card number should be 16 digits", "Jane");
        java.lang.String str18 = debitOrCredit6.getPaymentMessage();
        boolean boolean21 = debitOrCredit6.validateCard("Refunded without deposit ($-42.0)", (double) 'a');
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Card number should be 16 digits" + "'", str18, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean32 = mobilePay16.processPayment("Refunded total cost of $100.0", (double) 10, "Paid $ 100.0 with Mobile Pay", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = mobilePay16.processPayment("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (double) 52, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "lL3e2yIMXI");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = parkingSpaceProxy0.getFacade();
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy0.getRegistry();
        int int8 = accountRegistry7.getManagersSize();
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(parkingSpaceFacade3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        parkingLot1.setEnabled(true);
        ParkingSystem.ParkingSpace parkingSpace5 = parkingLot1.getParkingSpace((int) (byte) -1);
        ParkingSystem.Booking booking6 = parkingSpace5.getCurrentBooking();
        org.junit.Assert.assertNotNull(parkingSpace5);
        org.junit.Assert.assertNull(booking6);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot1.getParkingSpace((int) (byte) 0);
        java.lang.String str13 = parkingSpace12.scanSpace();
        ParkingSystem.SpaceState spaceState14 = parkingSpace12.getState();
        boolean boolean15 = parkingSpace12.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertNotNull(spaceState14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getClientId();
        boolean boolean11 = client0.getIsValidated();
        boolean boolean12 = client0.cancelBooking();
        boolean boolean13 = client0.checkIn();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "2) test1518(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750" + "'", str10, "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.paymentMessage = "staff";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (short) 0);
        boolean boolean7 = paymentManager0.refundWithoutDeposit((double) (-1.0f), (double) (short) -1);
        paymentManager0.refundMessage = "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.Booking booking4 = client0.getBookingDetails();
        java.lang.String str5 = client0.getUsername();
        java.lang.String str6 = client0.getUsername();
        java.lang.String str7 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
// flaky "3) test1520(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "H33Itw4InT" + "'", str1, "H33Itw4InT");
        org.junit.Assert.assertNull(booking4);
// flaky "1) test1520(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "FNuxCiXmkP" + "'", str5, "FNuxCiXmkP");
// flaky "1) test1520(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "FNuxCiXmkP" + "'", str6, "FNuxCiXmkP");
// flaky "1) test1520(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str7, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        ParkingSystem.DebitOrCredit debitOrCredit21 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit21);
        ParkingSystem.BookingManager bookingManager23 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager24 = new ParkingSystem.CheckInManager(bookingManager23);
        ParkingSystem.SpaceManager spaceManager25 = bookingManager23.getSpaceManager();
        double double28 = bookingManager23.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit29 = new ParkingSystem.DebitOrCredit();
        bookingManager23.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit29);
        boolean boolean35 = debitOrCredit29.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str36 = debitOrCredit29.getPaymentMessage();
        boolean boolean41 = debitOrCredit29.processPayment("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 0.0d, "disabled", "");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit29);
        ParkingSystem.CheckInManager checkInManager43 = new ParkingSystem.CheckInManager(bookingManager0);
        checkInManager43.refundMessage = "lL3e2yIMXI";
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(spaceManager25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 165.0d + "'", double28 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Card number should be 16 digits" + "'", str36, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        boolean boolean35 = parkingSpaceProxy18.register("disabled", "pass", "Card number should be 16 digits", "Paid $ 0.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean45 = parkingSpaceProxy18.confirmBooking("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "Jane", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "Paid $ 0.0 with Mobile Pay", (int) (byte) -1, "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 100, "fhd49ADb", "Refunded total cost of $100.0");
        boolean boolean47 = parkingSpaceProxy18.cancelBooking("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "4) test1522(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str5, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        boolean boolean25 = accountRegistry4.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        boolean boolean30 = parkingSpaceProxy27.checkIn("");
        parkingSpaceProxy27.toggleLot("", true);
        accountRegistry4.assignProxyToManager("", parkingSpaceProxy27);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade35 = parkingSpaceProxy27.getFacade();
        boolean boolean37 = parkingSpaceFacade35.cancelBooking("Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.AccountRegistry accountRegistry4 = bookingManager3.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry5 = bookingManager3.getAccountRegistry();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNotNull(accountRegistry5);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        java.lang.String[] strArray30 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade31 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager32 = parkingSpaceFacade31.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager33 = parkingSpaceFacade31.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap34 = spaceManager33.getParkingLots();
        cSVManager0.saveParkingLots(strMap34);
        java.util.List<java.lang.String[]> strArrayList37 = cSVManager0.readCSV("fhd49ADb");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList38 = cSVManager0.loadManagers();
// flaky "5) test1525(RegressionTest3)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "2) test1525(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "2) test1525(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
// flaky "2) test1525(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(checkInManager32);
        org.junit.Assert.assertNotNull(spaceManager33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strArrayList37);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        double double20 = bookingManager0.calculateCost("aswfJGJtdF", (int) ' ');
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 495.0d + "'", double20 == 495.0d);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace((int) (byte) 100);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        java.lang.String str8 = parkingSpaceProxy0.scanSpace("", "");
        java.lang.Object obj11 = parkingSpaceProxy0.login("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff");
        parkingSpaceProxy0.toggleLot("Refunded without deposit ($-42.0)", false);
        parkingSpaceProxy0.autoGenerateManager();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "disabled" + "'", str8, "disabled");
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean6 = parkingSpaceFacade0.editBooking("Jane", "staff", (int) (short) 100);
        boolean boolean9 = parkingSpaceFacade0.extendBooking("empty", 100);
        ParkingSystem.SpaceManager spaceManager10 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean14 = parkingSpaceFacade0.editBooking("Paid $ -1.0 with Mobile Pay", "qPYDfDnbtD", 52);
        parkingSpaceFacade0.toggleSpace("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", true);
        ParkingSystem.CheckInManager checkInManager19 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean29 = parkingSpaceFacade0.confirmBooking("Refunded without deposit ($0.0)", "I673kmcH", "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", 0, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", (int) ' ', "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-631eb509-a6c4-407c-b16d-582a6faabddb");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(spaceManager10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(checkInManager19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList7 = cSVManager0.loadManagers();
// flaky "6) test1530(RegressionTest3)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "3) test1530(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay11 = new ParkingSystem.MobilePay();
        boolean boolean16 = mobilePay11.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str17 = mobilePay11.getPaymentMessage();
        java.lang.String str18 = mobilePay11.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay11);
        paymentManager0.refundMessage = "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49";
        boolean boolean23 = paymentManager0.refundDeposit(0.0d);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str17, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.CSVManager cSVManager14 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList16 = cSVManager14.readCSV("");
        java.util.List<java.lang.String[]> strArrayList18 = cSVManager14.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap19 = null;
        cSVManager14.loadParkingLots(strMap19);
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.Manager manager26 = superManager25.autoGenerateManager();
        cSVManager14.saveManager((ParkingSystem.Manager) superManager25);
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        spaceManager28.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager28.getParkingLots();
        cSVManager14.loadParkingLots(strMap47);
        ParkingSystem.SpaceManager spaceManager49 = new ParkingSystem.SpaceManager();
        boolean boolean52 = spaceManager49.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str55 = spaceManager49.scanSpace("disabled", "");
        spaceManager49.addParkingLot("hi!");
        java.lang.String str60 = spaceManager49.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap61 = spaceManager49.getParkingLots();
        cSVManager14.saveParkingLots(strMap61);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade63 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str66 = parkingSpaceFacade63.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager67 = parkingSpaceFacade63.getSpaceManager();
        spaceManager67.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap70 = spaceManager67.getParkingLots();
        cSVManager14.saveParkingLots(strMap70);
        cSVManager0.loadParkingLots(strMap70);
        ParkingSystem.Client client73 = ParkingSystem.Client.getInstance();
        java.lang.String str74 = client73.getUsername();
        cSVManager0.saveClient(client73);
        ParkingSystem.Booking booking76 = client73.getBookingDetails();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(strArrayList16);
        org.junit.Assert.assertNotNull(strArrayList18);
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(manager26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "disabled" + "'", str60, "disabled");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertNotNull(spaceManager67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(client73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Refunded total cost of $1.0" + "'", str74, "Refunded total cost of $1.0");
        org.junit.Assert.assertNull(booking76);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundDeposit((double) 1.0f);
        java.lang.String str4 = paymentManager0.paymentMessage;
        boolean boolean7 = paymentManager0.refundWithoutDeposit((double) 'a', (double) (-1L));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double18 = bookingManager0.calculateCost("Paid $ 10.0 with Mobile Pay", (int) (byte) 1);
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        boolean boolean21 = bookingManager0.cancelBooking("CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 30.0d + "'", double18 == 30.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.CSVManager cSVManager14 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList16 = cSVManager14.readCSV("");
        java.util.List<java.lang.String[]> strArrayList18 = cSVManager14.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap19 = null;
        cSVManager14.loadParkingLots(strMap19);
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.Manager manager26 = superManager25.autoGenerateManager();
        cSVManager14.saveManager((ParkingSystem.Manager) superManager25);
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        spaceManager28.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager28.getParkingLots();
        cSVManager14.loadParkingLots(strMap47);
        ParkingSystem.SpaceManager spaceManager49 = new ParkingSystem.SpaceManager();
        boolean boolean52 = spaceManager49.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str55 = spaceManager49.scanSpace("disabled", "");
        spaceManager49.addParkingLot("hi!");
        java.lang.String str60 = spaceManager49.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap61 = spaceManager49.getParkingLots();
        cSVManager14.saveParkingLots(strMap61);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade63 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str66 = parkingSpaceFacade63.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager67 = parkingSpaceFacade63.getSpaceManager();
        spaceManager67.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap70 = spaceManager67.getParkingLots();
        cSVManager14.saveParkingLots(strMap70);
        cSVManager0.loadParkingLots(strMap70);
        cSVManager0.updateClientValidation("CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", false);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(strArrayList16);
        org.junit.Assert.assertNotNull(strArrayList18);
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(manager26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "disabled" + "'", str60, "disabled");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertNotNull(spaceManager67);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        boolean boolean10 = parkingLot1.isEnabled();
        boolean boolean12 = parkingLot1.isSpaceAvailable((int) (short) -1);
        ParkingSystem.Booking booking21 = new ParkingSystem.Booking("Jane", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 100, "jane", (int) (short) 1, "pass", (double) 10);
        boolean boolean22 = parkingLot1.assignBooking((int) '4', booking21);
        int int23 = booking21.getSpaceId();
        booking21.setStartTime("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        int int26 = booking21.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Disabled disabled13 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace14 = null;
        java.lang.String str15 = disabled13.scanSpace(parkingSpace14);
        ParkingSystem.ParkingSpace parkingSpace16 = null;
        java.lang.String str17 = disabled13.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) disabled13);
        ParkingSystem.Enabled enabled19 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot21 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking23 = null;
        boolean boolean24 = parkingLot21.assignBooking(0, booking23);
        boolean boolean26 = parkingLot21.isSpaceAvailable((int) '#');
        boolean boolean28 = parkingLot21.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace30 = parkingLot21.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking31 = parkingSpace30.getCurrentBooking();
        parkingSpace30.removeBooking();
        java.lang.String str33 = enabled19.scanSpace(parkingSpace30);
        ParkingSystem.ParkingLot parkingLot35 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking37 = null;
        boolean boolean38 = parkingLot35.assignBooking(0, booking37);
        boolean boolean40 = parkingLot35.isSpaceAvailable((int) '#');
        boolean boolean42 = parkingLot35.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace44 = parkingLot35.getParkingSpace((int) (byte) 10);
        int int45 = parkingSpace44.getSpaceId();
        ParkingSystem.Booking booking46 = parkingSpace44.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager47 = new ParkingSystem.SpaceManager();
        boolean boolean50 = spaceManager47.isSpaceAvailable("hi!", (int) '#');
        spaceManager47.toggleLot("disabled", false);
        ParkingSystem.Booking booking63 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean64 = spaceManager47.assignBooking("empty", (int) (short) 0, booking63);
        boolean boolean65 = parkingSpace44.assignBooking(booking63);
        java.lang.String str66 = enabled19.scanSpace(parkingSpace44);
        ParkingSystem.ParkingLot parkingLot68 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking70 = null;
        boolean boolean71 = parkingLot68.assignBooking(0, booking70);
        boolean boolean73 = parkingLot68.isSpaceAvailable((int) '#');
        boolean boolean75 = parkingLot68.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace77 = parkingLot68.getParkingSpace((int) (byte) 10);
        int int78 = parkingSpace77.getSpaceId();
        ParkingSystem.Booking booking79 = parkingSpace77.getCurrentBooking();
        java.lang.String str80 = parkingSpace77.scanSpace();
        int int81 = parkingSpace77.getSpaceId();
        ParkingSystem.Booking booking82 = parkingSpace77.getCurrentBooking();
        java.lang.String str83 = enabled19.scanSpace(parkingSpace77);
        java.lang.String str84 = parkingSpace77.scanSpace();
        java.lang.String str85 = disabled13.scanSpace(parkingSpace77);
        ParkingSystem.Booking booking93 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str94 = booking93.getLotId();
        int int95 = booking93.getSpaceId();
        java.lang.String str96 = booking93.getStartTime();
        java.lang.String str97 = booking93.getStartTime();
        boolean boolean98 = parkingSpace77.assignBooking(booking93);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(parkingSpace30);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "empty" + "'", str33, "empty");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(parkingSpace44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNull(booking46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(parkingSpace77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNull(booking79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "empty" + "'", str80, "empty");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(booking82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "empty" + "'", str83, "empty");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "empty" + "'", str84, "empty");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "disabled" + "'", str85, "disabled");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "jane" + "'", str94, "jane");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Jane" + "'", str96, "Jane");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Jane" + "'", str97, "Jane");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        boolean boolean50 = booking48.isCheckedIn();
        java.lang.String str51 = booking48.getClientId();
        boolean boolean52 = parkingSpace10.assignBooking(booking48);
        ParkingSystem.SpaceManager spaceManager53 = new ParkingSystem.SpaceManager();
        boolean boolean56 = spaceManager53.isSpaceAvailable("hi!", (int) '#');
        spaceManager53.toggleLot("disabled", false);
        ParkingSystem.Booking booking69 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean70 = spaceManager53.assignBooking("empty", (int) (short) 0, booking69);
        boolean boolean71 = booking69.isCheckedIn();
        boolean boolean72 = parkingSpace10.assignBooking(booking69);
        boolean boolean73 = parkingSpace10.isAvailable();
        int int74 = parkingSpace10.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "staff" + "'", str51, "staff");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        boolean boolean2 = paymentManager0.refundDeposit((double) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        parkingSpaceFacade0.addParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", false);
        boolean boolean10 = parkingSpaceFacade0.extendBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", (int) (byte) 100);
        ParkingSystem.BookingManager bookingManager11 = parkingSpaceFacade0.getBookingManager();
        double double13 = bookingManager11.getDeposit("Refunded without deposit ($-42.0)");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(bookingManager11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 15.0d + "'", double13 == 15.0d);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        boolean boolean6 = parkingSpaceProxy0.extendBooking("pass", 0);
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        boolean boolean20 = parkingSpaceProxy0.confirmBooking("CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "13b04414-31a5-407f-8ea3-fba4613c73d1", "2afd610d-a8cb-413a-bbee-7927f86b526c", "fhd49ADb", (int) 'a', "0b35479f-5869-423e-9abc-e4ab9cef903d", (int) (short) 10, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "qMzKSKOI");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.getRegistry();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry6.loadSuperManagerFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
// flaky "7) test1542(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str5, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry6);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = parkingSpaceProxy15.getFacade();
        boolean boolean22 = parkingSpaceFacade20.checkOut("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167");
        boolean boolean25 = parkingSpaceFacade20.extendBooking("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", (int) (byte) 0);
        org.junit.Assert.assertNotNull(client0);
// flaky "8) test1543(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(parkingSpaceFacade20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry11 = parkingSpaceProxy10.getRegistry();
        boolean boolean13 = parkingSpaceProxy10.checkIn("");
        client0.assignProxy(parkingSpaceProxy10);
        parkingSpaceProxy10.toggleLot("CLT-390234b0-d56e-4275-bd7b-122280609c69", true);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        parkingSpaceProxy2.autoGenerateManager();
        boolean boolean26 = parkingSpaceProxy2.confirmBooking("Refunded without deposit ($-42.0)", "disabled", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (short) 1, "empty", (int) (short) 1, "Card number should be 16 digits", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        parkingSpaceProxy2.toggleLot("Refunded total cost of $100.0", true);
        parkingSpaceProxy2.toggleSpace("CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", "9fJ5pCUl", false);
        boolean boolean36 = parkingSpaceProxy2.extendBooking("CLT-f02c481e-1504-4abf-b598-76152da8586a", 0);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        ParkingSystem.ParkingLot parkingLot53 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking55 = null;
        boolean boolean56 = parkingLot53.assignBooking(0, booking55);
        boolean boolean58 = parkingLot53.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator59 = parkingLot53.getIterator();
        parkingLot53.removeBooking(0);
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLot53.getParkingSpace(0);
        java.lang.String str64 = disabled0.scanSpace(parkingSpace63);
        ParkingSystem.ParkingLot parkingLot66 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator67 = parkingLot66.getIterator();
        ParkingSystem.Booking booking69 = null;
        boolean boolean70 = parkingLot66.assignBooking((int) (short) 1, booking69);
        ParkingSystem.ParkingSpace parkingSpace72 = parkingLot66.getParkingSpace((int) ' ');
        ParkingSystem.Booking booking80 = new ParkingSystem.Booking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) ' ', "Refunded total cost of $-1.0", (int) 'a', "staff", (double) (byte) 10);
        java.lang.String str81 = booking80.getLotId();
        boolean boolean82 = parkingSpace72.assignBooking(booking80);
        boolean boolean83 = parkingSpace72.isAvailable();
        java.lang.String str84 = disabled0.scanSpace(parkingSpace72);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator59);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "disabled" + "'", str64, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(parkingSpace72);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c" + "'", str81, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "disabled" + "'", str84, "disabled");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        boolean boolean10 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLotIterator7.next();
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        spaceManager12.toggleLot("Jane", false);
        spaceManager12.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager21 = new ParkingSystem.SpaceManager();
        boolean boolean24 = spaceManager21.isSpaceAvailable("hi!", (int) '#');
        spaceManager21.toggleLot("disabled", false);
        ParkingSystem.Booking booking37 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean38 = spaceManager21.assignBooking("empty", (int) (short) 0, booking37);
        boolean boolean39 = spaceManager12.assignBooking("hi!", 0, booking37);
        double double40 = booking37.getTotalCost();
        booking37.setDuration((-1));
        java.lang.String str43 = booking37.getLotId();
        booking37.setStartTime("");
        int int46 = booking37.getDuration();
        boolean boolean47 = parkingSpace11.assignBooking(booking37);
        java.lang.String str48 = booking37.getClientId();
        double double49 = booking37.getTotalCost();
        int int50 = booking37.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "jane" + "'", str43, "jane");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "staff" + "'", str48, "staff");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj33 = parkingSpaceProxy30.login("empty", "Jane");
        parkingSpaceProxy30.validateClient("Jane");
        parkingSpaceProxy30.toggleSpace("", "staff", false);
        accountRegistry28.assignProxyToManager("pass", parkingSpaceProxy30);
        boolean boolean46 = parkingSpaceProxy30.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled", "Refunded total cost of $1.0", "", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy30;
        java.lang.Object obj48 = user0.user;
        java.lang.Object obj49 = user0.user;
        ParkingSystem.AccountRegistry accountRegistry53 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager54 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry53);
        boolean boolean56 = accountRegistry53.requiresValidation("disabled");
        int int57 = accountRegistry53.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy59 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj62 = parkingSpaceProxy59.login("empty", "Jane");
        parkingSpaceProxy59.validateClient("Jane");
        parkingSpaceProxy59.toggleSpace("", "staff", false);
        boolean boolean70 = parkingSpaceProxy59.cancelBooking("Jane");
        accountRegistry53.assignProxyToClient("pass", parkingSpaceProxy59);
        boolean boolean77 = parkingSpaceProxy59.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean83 = parkingSpaceProxy59.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean89 = parkingSpaceProxy59.register("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "staff", "Refunded total cost of $1.0", "Paid $ 10.0 with Mobile Pay", "jane");
        user0.assignProxy(parkingSpaceProxy59);
        boolean boolean94 = parkingSpaceProxy59.editBooking("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 2);
        parkingSpaceProxy59.validateClient("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        parkingSpaceProxy59.validateClient("CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        parkingSpaceProxy59.displayPendingValidations();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(superManager54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy16 = null;
        paymentManager0.setStrategy(strategy16);
        java.lang.String str18 = paymentManager0.refundMessage;
        paymentManager0.refundMessage = "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c";
        java.lang.String str21 = paymentManager0.refundMessage;
        boolean boolean24 = paymentManager0.refundWithoutDeposit((double) '#', (double) (short) 100);
        boolean boolean26 = paymentManager0.refundDeposit((double) 52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str18, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c" + "'", str21, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.SpaceManager spaceManager6 = bookingManager0.getSpaceManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager0);
        java.lang.String str8 = checkInManager7.refundMessage;
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertNotNull(spaceManager6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        ParkingSystem.ParkingLot parkingLot7 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking9 = null;
        boolean boolean10 = parkingLot7.assignBooking(0, booking9);
        boolean boolean12 = parkingLot7.isSpaceAvailable((int) '#');
        boolean boolean14 = parkingLot7.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace16 = parkingLot7.getParkingSpace((int) (byte) 10);
        int int17 = parkingSpace16.getSpaceId();
        ParkingSystem.Booking booking18 = parkingSpace16.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager19 = new ParkingSystem.SpaceManager();
        boolean boolean22 = spaceManager19.isSpaceAvailable("hi!", (int) '#');
        spaceManager19.toggleLot("disabled", false);
        ParkingSystem.Booking booking35 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean36 = spaceManager19.assignBooking("empty", (int) (short) 0, booking35);
        boolean boolean37 = parkingSpace16.assignBooking(booking35);
        ParkingSystem.SpaceManager spaceManager38 = new ParkingSystem.SpaceManager();
        boolean boolean41 = spaceManager38.isSpaceAvailable("hi!", (int) '#');
        spaceManager38.toggleLot("disabled", false);
        ParkingSystem.Booking booking54 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean55 = spaceManager38.assignBooking("empty", (int) (short) 0, booking54);
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        boolean boolean76 = spaceManager38.assignBooking("disabled", (int) (byte) 0, booking74);
        boolean boolean77 = parkingSpace16.assignBooking(booking74);
        boolean boolean78 = spaceManager0.assignBooking("", (int) (short) 1, booking74);
        boolean boolean81 = spaceManager0.isSpaceAvailable("hi!", (int) (byte) 1);
        java.lang.String str84 = spaceManager0.scanSpace("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(parkingSpace16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNull(booking18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "disabled" + "'", str84, "disabled");
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.AccountRegistry accountRegistry2 = bookingManager0.getAccountRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap3 = bookingManager0.getActiveBookings();
        boolean boolean5 = bookingManager0.cancelBooking("Card number should be 16 digits");
        org.junit.Assert.assertNotNull(accountRegistry2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        java.lang.String str29 = superManager28.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = null;
        accountRegistry33.assignProxyToManager("disabled", parkingSpaceProxy36);
        superManager28.registry = accountRegistry33;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager28);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade40 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str43 = parkingSpaceFacade40.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager44 = parkingSpaceFacade40.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap45 = spaceManager44.getParkingLots();
        cSVManager0.saveParkingLots(strMap45);
        ParkingSystem.BookingManager bookingManager47 = new ParkingSystem.BookingManager();
        boolean boolean52 = bookingManager47.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double54 = bookingManager47.getHourlyRate("disabled");
        ParkingSystem.SpaceManager spaceManager55 = bookingManager47.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap56 = spaceManager55.getParkingLots();
        cSVManager0.loadParkingLots(strMap56);
        org.junit.Assert.assertNotNull(strArray1);
// flaky "9) test1553(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "4) test1553(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
// flaky "3) test1553(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "8812812f-8c58-440e-9188-ca0b1f996ced" + "'", str4, "8812812f-8c58-440e-9188-ca0b1f996ced");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky "3) test1553(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Refunded without deposit ($0.0)" + "'", str13, "Refunded without deposit ($0.0)");
// flaky "1) test1553(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "8812812f-8c58-440e-9188-ca0b1f996ced" + "'", str14, "8812812f-8c58-440e-9188-ca0b1f996ced");
        org.junit.Assert.assertNotNull(superManager28);
// flaky "1) test1553(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str29, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "disabled" + "'", str43, "disabled");
        org.junit.Assert.assertNotNull(spaceManager44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 15.0d + "'", double54 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager55);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager19 = bookingManager0.getSpaceManager();
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double30 = booking29.getTotalCost();
        java.lang.String str31 = booking29.getLotId();
        boolean boolean32 = booking29.isCheckedIn();
        booking29.setStartTime("Refunded total cost of $1.0");
        boolean boolean35 = spaceManager19.assignBooking("empty", (int) '4', booking29);
        booking29.setCheckedIn(false);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(spaceManager19);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "jane" + "'", str31, "jane");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        spaceManager2.loadParkingLots();
        spaceManager2.loadParkingLots();
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        boolean boolean12 = accountRegistry9.requiresValidation("disabled");
        int int13 = accountRegistry9.getManagersSize();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        accountRegistry15.validateClient("pass");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.AccountRegistry accountRegistry21 = superManager18.getRegistry();
        boolean boolean27 = accountRegistry21.registerClient("2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "", "Paid $ -1.0 with Mobile Pay", "disabled");
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap28 = accountRegistry21.getManagers();
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLotIterator parkingLotIterator8 = parkingLot1.getIterator();
        parkingLot1.setEnabled(false);
        ParkingSystem.ParkingLotIterator parkingLotIterator11 = parkingLot1.getIterator();
        // The following exception was thrown during execution in test generation
        try {
            parkingLotIterator11.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator8);
        org.junit.Assert.assertNotNull(parkingLotIterator11);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager0.getParkingLots();
        ParkingSystem.Booking booking14 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str15 = booking14.getClientId();
        boolean boolean16 = spaceManager0.assignBooking("Refunded without deposit ($1.0)", 0, booking14);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "staff" + "'", str15, "staff");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        parkingLot1.setEnabled(false);
        boolean boolean9 = parkingLot1.isEnabled();
        boolean boolean11 = parkingLot1.isSpaceAvailable(52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        boolean boolean23 = accountRegistry20.requiresValidation("disabled");
        int int24 = accountRegistry20.getManagersSize();
        boolean boolean30 = accountRegistry20.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj35 = parkingSpaceProxy32.login("empty", "Jane");
        parkingSpaceProxy32.validateClient("Jane");
        parkingSpaceProxy32.toggleSpace("", "staff", false);
        boolean boolean43 = parkingSpaceProxy32.cancelBooking("Jane");
        accountRegistry20.assignProxyToClient("pass", parkingSpaceProxy32);
        parkingSpaceProxy32.autoGenerateManager();
        parkingSpaceProxy32.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        user0.assignProxy(parkingSpaceProxy32);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy54 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry55 = parkingSpaceProxy54.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy57 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj60 = parkingSpaceProxy57.login("empty", "Jane");
        parkingSpaceProxy57.validateClient("Jane");
        parkingSpaceProxy57.toggleSpace("", "staff", false);
        accountRegistry55.assignProxyToManager("pass", parkingSpaceProxy57);
        ParkingSystem.Client client69 = accountRegistry55.getClient("");
        ParkingSystem.SuperManager superManager70 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry55);
        ParkingSystem.AccountRegistry accountRegistry71 = superManager70.registry;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy73 = null;
        accountRegistry71.assignProxyToManager("jane", parkingSpaceProxy73);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy76 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj79 = parkingSpaceProxy76.login("empty", "Jane");
        boolean boolean82 = parkingSpaceProxy76.extendBooking("pass", 0);
        boolean boolean84 = parkingSpaceProxy76.checkOut("Paid $ 10.0 with Mobile Pay");
        accountRegistry71.assignProxyToClient("hi!", parkingSpaceProxy76);
        parkingSpaceProxy76.validateClient("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        user0.assignProxy(parkingSpaceProxy76);
        parkingSpaceProxy76.toggleSpace("empty", "Refunded without deposit ($-42.0)", false);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
// flaky "10) test1560(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(accountRegistry55);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(client69);
        org.junit.Assert.assertNotNull(superManager70);
        org.junit.Assert.assertNotNull(accountRegistry71);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        boolean boolean10 = parkingLot1.isEnabled();
        boolean boolean12 = parkingLot1.isSpaceAvailable((int) (short) -1);
        ParkingSystem.ParkingLotIterator parkingLotIterator13 = parkingLot1.getIterator();
        boolean boolean14 = parkingLotIterator13.hasNext();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        java.lang.String str13 = client0.getName();
        boolean boolean14 = client0.cancelBooking();
        boolean boolean15 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        boolean boolean14 = spaceManager0.isSpaceAvailable("4a1f2343-8b2e-4dea-ba69-efd105414390", 0);
        java.lang.Class<?> wildcardClass15 = spaceManager0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) ' ');
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot1.getParkingSpace(52);
        ParkingSystem.ParkingSpace parkingSpace14 = new ParkingSystem.ParkingSpace((int) (short) -1);
        ParkingSystem.SpaceManager spaceManager15 = new ParkingSystem.SpaceManager();
        spaceManager15.toggleLot("Jane", false);
        spaceManager15.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager24 = new ParkingSystem.SpaceManager();
        boolean boolean27 = spaceManager24.isSpaceAvailable("hi!", (int) '#');
        spaceManager24.toggleLot("disabled", false);
        ParkingSystem.Booking booking40 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean41 = spaceManager24.assignBooking("empty", (int) (short) 0, booking40);
        boolean boolean42 = spaceManager15.assignBooking("hi!", 0, booking40);
        double double43 = booking40.getTotalCost();
        booking40.setDuration((-1));
        boolean boolean46 = booking40.isCheckedIn();
        int int47 = booking40.getDuration();
        boolean boolean48 = parkingSpace14.assignBooking(booking40);
        double double49 = booking40.getTotalCost();
        boolean boolean50 = parkingSpace12.assignBooking(booking40);
        ParkingSystem.SpaceState spaceState51 = parkingSpace12.getState();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1.0d + "'", double43 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(spaceState51);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.toggleLot("pass", true);
        spaceManager0.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        ParkingSystem.ParkingLot parkingLot21 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator22 = parkingLot21.getIterator();
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLot21.getParkingSpace((int) (byte) -1);
        ParkingSystem.Booking booking25 = parkingSpace24.getCurrentBooking();
        ParkingSystem.ParkingLot parkingLot27 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking29 = null;
        boolean boolean30 = parkingLot27.assignBooking(0, booking29);
        boolean boolean32 = parkingLot27.isSpaceAvailable((int) '#');
        boolean boolean34 = parkingLot27.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace36 = parkingLot27.getParkingSpace((int) (byte) 10);
        int int37 = parkingSpace36.getSpaceId();
        ParkingSystem.Booking booking38 = parkingSpace36.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager39 = new ParkingSystem.SpaceManager();
        boolean boolean42 = spaceManager39.isSpaceAvailable("hi!", (int) '#');
        spaceManager39.toggleLot("disabled", false);
        ParkingSystem.Booking booking55 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean56 = spaceManager39.assignBooking("empty", (int) (short) 0, booking55);
        boolean boolean57 = parkingSpace36.assignBooking(booking55);
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        boolean boolean76 = booking74.isCheckedIn();
        java.lang.String str77 = booking74.getClientId();
        boolean boolean78 = parkingSpace36.assignBooking(booking74);
        boolean boolean79 = parkingSpace24.assignBooking(booking74);
        boolean boolean80 = spaceManager0.assignBooking("", (int) (byte) 1, booking74);
        java.lang.String str83 = spaceManager0.scanSpace("ua4ppOLtSl", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator22);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertNull(booking25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(parkingSpace36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNull(booking38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "staff" + "'", str77, "staff");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "disabled" + "'", str83, "disabled");
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        boolean boolean17 = parkingLot10.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace19 = parkingLot10.getParkingSpace((int) (byte) 10);
        int int20 = parkingSpace19.getSpaceId();
        ParkingSystem.Booking booking21 = parkingSpace19.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager22 = new ParkingSystem.SpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("hi!", (int) '#');
        spaceManager22.toggleLot("disabled", false);
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = spaceManager22.assignBooking("empty", (int) (short) 0, booking38);
        boolean boolean40 = parkingSpace19.assignBooking(booking38);
        ParkingSystem.SpaceManager spaceManager41 = new ParkingSystem.SpaceManager();
        boolean boolean44 = spaceManager41.isSpaceAvailable("hi!", (int) '#');
        spaceManager41.toggleLot("disabled", false);
        ParkingSystem.Booking booking57 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean58 = spaceManager41.assignBooking("empty", (int) (short) 0, booking57);
        boolean boolean59 = booking57.isCheckedIn();
        java.lang.String str60 = booking57.getClientId();
        boolean boolean61 = parkingSpace19.assignBooking(booking57);
        boolean boolean62 = parkingLot1.assignBooking(1, booking57);
        double double63 = booking57.getTotalCost();
        booking57.setDuration((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(parkingSpace19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNull(booking21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "staff" + "'", str60, "staff");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        superManager10.registry = accountRegistry14;
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry14);
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "pass", "empty", accountRegistry14);
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry14.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(superManager18);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str6 = mobilePay0.getPaymentMessage();
        boolean boolean11 = mobilePay0.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = mobilePay0.getPaymentMessage();
        java.lang.String str13 = mobilePay0.getPaymentMessage();
        boolean boolean18 = mobilePay0.processPayment("Paid $ 1470.0 with Mobile Pay", (double) (short) -1, "Refunded without deposit ($0.0)", "K6PkM9rcCx");
        boolean boolean23 = mobilePay0.processPayment("433f3d1f-f758-4ae3-972b-7fb179aedfd7", 1.0d, "CLT-f02c481e-1504-4abf-b598-76152da8586a", "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str6, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str13, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking19 = null;
        boolean boolean20 = parkingLot17.assignBooking(0, booking19);
        boolean boolean22 = parkingLot17.isSpaceAvailable((int) '#');
        boolean boolean24 = parkingLot17.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace26 = parkingLot17.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking27 = parkingSpace26.getCurrentBooking();
        parkingSpace26.removeBooking();
        int int29 = parkingSpace26.getSpaceId();
        ParkingSystem.Booking booking37 = new ParkingSystem.Booking("jane", "Paid $ 10.0 with Mobile Pay", (-1), "Paid $ 10.0 with Mobile Pay", (int) (short) 1, "hi!", (double) 100);
        boolean boolean38 = parkingSpace26.assignBooking(booking37);
        java.lang.String str39 = enabled14.scanSpace(parkingSpace26);
        java.lang.String str40 = parkingSpace26.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(parkingSpace26);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        java.lang.String str13 = client0.getClientType();
        boolean boolean16 = client0.editBooking("Jane", 100);
        boolean boolean18 = client0.extendBooking((int) '#');
        boolean boolean26 = client0.confirmBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (-1), "Card number should be 16 digits", (int) 'a', "staff", "Refunded without deposit ($-42.0)");
        java.lang.String str27 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
// flaky "11) test1570(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "5) test1570(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ST001" + "'", str10, "ST001");
// flaky "4) test1570(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Jane" + "'", str11, "Jane");
// flaky "4) test1570(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Jane" + "'", str12, "Jane");
// flaky "2) test1570(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "staff" + "'", str13, "staff");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
// flaky "2) test1570(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pass" + "'", str27, "pass");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean11 = parkingSpaceProxy0.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean21 = parkingSpaceProxy0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        boolean boolean24 = parkingSpaceProxy0.extendBooking("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", 0);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        boolean boolean23 = accountRegistry20.requiresValidation("disabled");
        int int24 = accountRegistry20.getManagersSize();
        boolean boolean30 = accountRegistry20.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj35 = parkingSpaceProxy32.login("empty", "Jane");
        parkingSpaceProxy32.validateClient("Jane");
        parkingSpaceProxy32.toggleSpace("", "staff", false);
        boolean boolean43 = parkingSpaceProxy32.cancelBooking("Jane");
        accountRegistry20.assignProxyToClient("pass", parkingSpaceProxy32);
        parkingSpaceProxy32.autoGenerateManager();
        parkingSpaceProxy32.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        user0.assignProxy(parkingSpaceProxy32);
        java.lang.Object obj51 = user0.user;
        user0.register("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded without deposit ($-42.0)", "Paid $ -1.0 with Mobile Pay", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", "");
        java.lang.Object obj58 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy59 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry60 = parkingSpaceProxy59.getRegistry();
        java.lang.String str63 = parkingSpaceProxy59.scanSpace("empty", "hi!");
        boolean boolean73 = parkingSpaceProxy59.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy59.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade78 = parkingSpaceProxy59.getFacade();
        user0.assignProxy(parkingSpaceProxy59);
        java.lang.Object obj80 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(accountRegistry60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "disabled" + "'", str63, "disabled");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade78);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap8 = accountRegistry6.getManagers();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry6);
        java.util.List<ParkingSystem.Client> clientList10 = accountRegistry6.displayPendingValidations();
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        boolean boolean21 = accountRegistry18.requiresValidation("disabled");
        int int22 = accountRegistry18.getManagersSize();
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry18);
        ParkingSystem.AccountRegistry accountRegistry24 = superManager23.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry27 = parkingSpaceProxy26.getRegistry();
        boolean boolean33 = parkingSpaceProxy26.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean37 = parkingSpaceProxy26.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean47 = parkingSpaceProxy26.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry24.assignProxyToManager("empty", parkingSpaceProxy26);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy50 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade51 = parkingSpaceProxy50.getFacade();
        accountRegistry24.assignProxyToManager("", parkingSpaceProxy50);
        parkingSpaceProxy50.addParkingLot("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean56 = parkingSpaceProxy50.cancelBooking("Paid $ -1.0 with Mobile Pay");
        accountRegistry6.assignProxyToManager("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", parkingSpaceProxy50);
        java.lang.Object obj60 = parkingSpaceProxy50.login("Refunded without deposit ($-42.0)", "jane");
        ParkingSystem.AccountRegistry accountRegistry61 = parkingSpaceProxy50.getRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap62 = accountRegistry61.getManagers();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(clientList10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertNotNull(accountRegistry27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(accountRegistry61);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        boolean boolean11 = client0.extendBooking(100);
        client0.setValidated(true);
        ParkingSystem.Booking booking14 = client0.getBookingDetails();
        java.lang.String str15 = client0.getExtraId();
        java.lang.String str16 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "jane" + "'", str15, "jane");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "empty" + "'", str16, "empty");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.cancelBooking();
        boolean boolean11 = client0.getIsValidated();
        java.lang.String str12 = client0.getPassword();
        java.lang.String str13 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade9.getBookingManager();
        ParkingSystem.BookingManager bookingManager13 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager14 = new ParkingSystem.CheckInManager(bookingManager13);
        ParkingSystem.SpaceManager spaceManager15 = bookingManager13.getSpaceManager();
        double double18 = bookingManager13.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit19 = new ParkingSystem.DebitOrCredit();
        bookingManager13.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit19);
        boolean boolean25 = debitOrCredit19.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str26 = debitOrCredit19.getPaymentMessage();
        boolean boolean29 = debitOrCredit19.validateCard("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (double) (short) 1);
        bookingManager12.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit19);
        boolean boolean33 = debitOrCredit19.validateCard("Refunded without deposit ($-42.0)", (double) 2);
        boolean boolean38 = debitOrCredit19.processPayment("ST001", (double) 4, "9fJ5pCUl", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        org.junit.Assert.assertNotNull(client0);
// flaky "12) test1576(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
        org.junit.Assert.assertNotNull(spaceManager15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 165.0d + "'", double18 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Card number should be 16 digits" + "'", str26, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.Booking booking9 = bookingManager6.getBooking("");
        ParkingSystem.SpaceManager spaceManager10 = bookingManager6.getSpaceManager();
        boolean boolean20 = bookingManager6.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double22 = bookingManager6.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit23 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit23);
        java.lang.String str25 = debitOrCredit23.getPaymentMessage();
        boolean boolean30 = debitOrCredit23.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded without deposit ($0.0)", "jane");
        java.lang.String str31 = debitOrCredit23.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit23);
        boolean boolean34 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean37 = paymentManager0.refundWithoutDeposit((double) 3, 795.0d);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(booking9);
        org.junit.Assert.assertNotNull(spaceManager10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Card number should be 16 digits" + "'", str31, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Client client12 = accountRegistry8.getClient("empty");
        accountRegistry8.validateClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.Manager manager15 = accountRegistry8.autoGenerateManager();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry8.loadSuperManagerFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNull(client12);
        org.junit.Assert.assertNotNull(manager15);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        int int9 = booking7.getDuration();
        java.lang.String str10 = booking7.getClientId();
        double double11 = booking7.getTotalCost();
        booking7.setCheckedIn(false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "staff" + "'", str10, "staff");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        ParkingSystem.CSVManager cSVManager18 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList20 = cSVManager18.readCSV("");
        user0.user = strArrayList20;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = user0.parkingProxy;
        ParkingSystem.Enabled enabled23 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot25 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking27 = null;
        boolean boolean28 = parkingLot25.assignBooking(0, booking27);
        boolean boolean30 = parkingLot25.isSpaceAvailable((int) '#');
        boolean boolean32 = parkingLot25.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace34 = parkingLot25.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking35 = parkingSpace34.getCurrentBooking();
        parkingSpace34.removeBooking();
        java.lang.String str37 = enabled23.scanSpace(parkingSpace34);
        ParkingSystem.ParkingLot parkingLot39 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking41 = null;
        boolean boolean42 = parkingLot39.assignBooking(0, booking41);
        boolean boolean44 = parkingLot39.isSpaceAvailable((int) '#');
        boolean boolean46 = parkingLot39.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace48 = parkingLot39.getParkingSpace((int) (byte) 10);
        int int49 = parkingSpace48.getSpaceId();
        ParkingSystem.Booking booking50 = parkingSpace48.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager51 = new ParkingSystem.SpaceManager();
        boolean boolean54 = spaceManager51.isSpaceAvailable("hi!", (int) '#');
        spaceManager51.toggleLot("disabled", false);
        ParkingSystem.Booking booking67 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean68 = spaceManager51.assignBooking("empty", (int) (short) 0, booking67);
        boolean boolean69 = parkingSpace48.assignBooking(booking67);
        java.lang.String str70 = enabled23.scanSpace(parkingSpace48);
        boolean boolean71 = parkingSpace48.isAvailable();
        user0.user = parkingSpace48;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArrayList20);
        org.junit.Assert.assertNull(parkingSpaceProxy22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(parkingSpace34);
        org.junit.Assert.assertNull(booking35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "empty" + "'", str37, "empty");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(parkingSpace48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNull(booking50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "disabled" + "'", str70, "disabled");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        parkingLot1.removeBooking(2);
        ParkingSystem.ParkingSpace parkingSpace5 = parkingLot1.getParkingSpace(0);
        parkingLot1.setEnabled(false);
        parkingLot1.removeBooking(2);
        org.junit.Assert.assertNotNull(parkingSpace5);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.addParkingLot("pass");
        boolean boolean6 = parkingSpaceProxy0.checkIn("Paid $ 100.0 with Mobile Pay");
        boolean boolean12 = parkingSpaceProxy0.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Refunded without deposit ($-42.0)", "Paid $ 0.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled");
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy0.getRegistry();
        parkingSpaceProxy0.autoGenerateManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade15 = parkingSpaceProxy0.getFacade();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNotNull(parkingSpaceFacade15);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("tbHxuilT", false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        java.lang.Object obj13 = accountRegistry6.login("empty", "Refunded total cost of $1.0");
        boolean boolean15 = accountRegistry6.requiresValidation("Refunded total cost of $1.0");
        ParkingSystem.SuperManager superManager16 = ParkingSystem.SuperManager.createFromCSV("Paid $ 0.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Paid $ 15.0 with Mobile Pay", accountRegistry6);
        java.lang.String str17 = superManager16.getPassword();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(superManager16);
// flaky "13) test1584(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Refunded total cost of $0.0" + "'", str17, "Refunded total cost of $0.0");
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double4 = bookingManager0.getHourlyRate("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        ParkingSystem.SpaceManager spaceManager5 = bookingManager0.getSpaceManager();
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 15.0d + "'", double4 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager5);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean35 = parkingSpaceProxy14.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry12.assignProxyToManager("empty", parkingSpaceProxy14);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade39 = parkingSpaceProxy38.getFacade();
        accountRegistry12.assignProxyToManager("", parkingSpaceProxy38);
        parkingSpaceProxy38.toggleSpace("CLT-55105d92-54d6-44d2-965a-736022b7f7cd", "CLT-f02c481e-1504-4abf-b598-76152da8586a", true);
        boolean boolean46 = parkingSpaceProxy38.cancelBooking("Refunded total cost of $-1.0");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.toggleLot("pass", true);
        spaceManager0.toggleLot("Paid $ -1.0 with Mobile Pay", false);
        spaceManager0.addParkingLot("Paid $ 1470.0 with Mobile Pay");
        ParkingSystem.ParkingLot parkingLot23 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking25 = null;
        boolean boolean26 = parkingLot23.assignBooking(0, booking25);
        boolean boolean28 = parkingLot23.isSpaceAvailable((int) '#');
        boolean boolean30 = parkingLot23.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace32 = parkingLot23.getParkingSpace((int) (byte) 10);
        int int33 = parkingSpace32.getSpaceId();
        ParkingSystem.Booking booking34 = parkingSpace32.getCurrentBooking();
        java.lang.String str35 = parkingSpace32.scanSpace();
        int int36 = parkingSpace32.getSpaceId();
        ParkingSystem.SpaceManager spaceManager37 = new ParkingSystem.SpaceManager();
        boolean boolean40 = spaceManager37.isSpaceAvailable("hi!", (int) '#');
        spaceManager37.toggleLot("disabled", false);
        ParkingSystem.Booking booking53 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean54 = spaceManager37.assignBooking("empty", (int) (short) 0, booking53);
        java.lang.String str55 = booking53.getClientId();
        boolean boolean56 = parkingSpace32.assignBooking(booking53);
        int int57 = booking53.getDuration();
        boolean boolean58 = booking53.isCheckedIn();
        int int59 = booking53.getDuration();
        boolean boolean60 = spaceManager0.assignBooking("", 1, booking53);
        boolean boolean61 = booking53.isCheckedIn();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(parkingSpace32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNull(booking34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "empty" + "'", str35, "empty");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "staff" + "'", str55, "staff");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 32 + "'", int57 == 32);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32 + "'", int59 == 32);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap3 = spaceManager2.getParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager2.getParkingLots();
        ParkingSystem.Booking booking14 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str15 = booking14.getLotId();
        int int16 = booking14.getSpaceId();
        boolean boolean17 = spaceManager2.assignBooking("pass", 2, booking14);
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "jane" + "'", str15, "jane");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        boolean boolean6 = paymentManager0.refundDeposit((double) (short) 0);
        boolean boolean8 = paymentManager0.refundTotalCost(0.0d);
        boolean boolean10 = paymentManager0.refundDeposit((double) 100.0f);
        ParkingSystem.MobilePay mobilePay11 = new ParkingSystem.MobilePay();
        boolean boolean16 = mobilePay11.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str17 = mobilePay11.getPaymentMessage();
        java.lang.String str18 = mobilePay11.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay11);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str17, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        java.lang.Object obj10 = accountRegistry3.login("empty", "Refunded total cost of $1.0");
        boolean boolean16 = accountRegistry3.registerClient("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "cf448544-0e6d-4a41-94c2-e67f848ae8df", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "Refunded without deposit ($0.0)", "lL3e2yIMXI");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        java.lang.String str12 = parkingSpace10.scanSpace();
        parkingSpace10.removeBooking();
        java.lang.String str14 = parkingSpace10.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "empty" + "'", str12, "empty");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        ParkingSystem.Manager manager7 = accountRegistry3.autoGenerateManager();
        java.util.List<ParkingSystem.Client> clientList8 = accountRegistry3.displayPendingValidations();
        java.lang.Object obj11 = accountRegistry3.login("8812812f-8c58-440e-9188-ca0b1f996ced", "Refunded total cost of $100.0");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(clientList8);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getExtraId();
        boolean boolean4 = client0.extendBooking((int) (byte) -1);
        boolean boolean5 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded without deposit ($0.0)" + "'", str1, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "lL3e2yIMXI" + "'", str2, "lL3e2yIMXI");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        boolean boolean3 = paymentManager0.refundWithoutDeposit((double) (byte) 0, (double) (-1));
        paymentManager0.refundMessage = "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        boolean boolean17 = parkingSpaceFacade0.confirmBooking("Refunded total cost of $1.0", "Refunded without deposit ($0.0)", "jane", "Paid $ -1.0 with Mobile Pay", 1, "staff", 10, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        parkingSpaceFacade0.addParkingLot("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa" + "'", str1, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager21 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager22 = bookingManager0.getSpaceManager();
        double double25 = bookingManager0.calculateCost("hi!", (int) (short) 100);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1515.0d + "'", double25 == 1515.0d);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.BookingManager bookingManager19 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.SpaceManager spaceManager20 = bookingManager19.getSpaceManager();
        double double22 = bookingManager19.getDeposit("02659ad3-0b5c-4c48-a915-a466f2b50775");
        ParkingSystem.MobilePay mobilePay23 = new ParkingSystem.MobilePay();
        boolean boolean28 = mobilePay23.processPayment("hi!", (-1.0d), "", "");
        java.lang.String str29 = mobilePay23.getPaymentMessage();
        bookingManager19.setPaymentStrategy((ParkingSystem.Strategy) mobilePay23);
        ParkingSystem.SpaceManager spaceManager31 = bookingManager19.getSpaceManager();
        boolean boolean33 = bookingManager19.cancelBooking("13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(bookingManager19);
        org.junit.Assert.assertNotNull(spaceManager20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str29, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(spaceManager31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "hi!";
        boolean boolean8 = paymentManager0.refundDeposit((double) 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        ParkingSystem.CSVManager cSVManager5 = new ParkingSystem.CSVManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager5.loadParkingLots(strMap6);
        ParkingSystem.CSVManager cSVManager8 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList10 = cSVManager8.readCSV("");
        java.util.List<java.lang.String[]> strArrayList12 = cSVManager8.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap13 = null;
        cSVManager8.loadParkingLots(strMap13);
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        ParkingSystem.Manager manager20 = superManager19.autoGenerateManager();
        cSVManager8.saveManager((ParkingSystem.Manager) superManager19);
        ParkingSystem.SpaceManager spaceManager22 = new ParkingSystem.SpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("hi!", (int) '#');
        spaceManager22.toggleLot("disabled", false);
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = spaceManager22.assignBooking("empty", (int) (short) 0, booking38);
        spaceManager22.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap41 = spaceManager22.getParkingLots();
        cSVManager8.loadParkingLots(strMap41);
        ParkingSystem.SpaceManager spaceManager43 = new ParkingSystem.SpaceManager();
        boolean boolean46 = spaceManager43.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str49 = spaceManager43.scanSpace("disabled", "");
        spaceManager43.addParkingLot("hi!");
        java.lang.String str54 = spaceManager43.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap55 = spaceManager43.getParkingLots();
        cSVManager8.saveParkingLots(strMap55);
        cSVManager5.saveParkingLots(strMap55);
        cSVManager0.loadParkingLots(strMap55);
        cSVManager0.updateClientValidation("Refunded without deposit ($-15.0)", false);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList10);
        org.junit.Assert.assertNotNull(strArrayList12);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(manager20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "disabled" + "'", str49, "disabled");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "disabled" + "'", str54, "disabled");
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean4 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) 10);
        boolean boolean14 = parkingSpaceFacade0.confirmBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b", "3b453211-7dd1-4452-8741-a206711c1217", "", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", 0, "Paid $ 1.0 with Mobile Pay", 0, "", "86z9Z9e0MN");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.addParkingLot("pass");
        boolean boolean6 = parkingSpaceProxy0.checkIn("Paid $ 100.0 with Mobile Pay");
        boolean boolean12 = parkingSpaceProxy0.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Refunded without deposit ($-42.0)", "Paid $ 0.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled");
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy0.getRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap14 = accountRegistry13.getManagers();
        java.lang.Object obj17 = accountRegistry13.login("H33Itw4InT", "Refunded deposit of $0.0");
        ParkingSystem.AccountRegistry accountRegistry22 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry22);
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        superManager23.registry = accountRegistry27;
        ParkingSystem.Manager manager30 = superManager23.autoGenerateManager();
        java.lang.String str31 = manager30.getManagerId();
        ParkingSystem.User user32 = new ParkingSystem.User();
        java.lang.Object obj33 = user32.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = user32.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry36 = parkingSpaceProxy35.getRegistry();
        boolean boolean38 = parkingSpaceProxy35.checkIn("");
        parkingSpaceProxy35.validateClient("");
        user32.assignProxy(parkingSpaceProxy35);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = user32.parkingProxy;
        java.lang.Object obj45 = user32.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy46 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking48 = parkingSpaceProxy46.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade49 = parkingSpaceProxy46.getFacade();
        boolean boolean51 = parkingSpaceProxy46.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user32.parkingProxy = parkingSpaceProxy46;
        manager30.assignProxy(parkingSpaceProxy46);
        accountRegistry13.assignProxyToManager("Refunded total cost of $-1.0", parkingSpaceProxy46);
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry13.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertNotNull(superManager28);
        org.junit.Assert.assertNotNull(manager30);
// flaky "14) test1602(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "e9ab5557-664e-426a-be2d-b7525923c82b" + "'", str31, "e9ab5557-664e-426a-be2d-b7525923c82b");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(parkingSpaceProxy34);
        org.junit.Assert.assertNotNull(accountRegistry36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(booking48);
        org.junit.Assert.assertNotNull(parkingSpaceFacade49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getPassword();
        boolean boolean17 = client0.extendBooking((int) (short) 10);
        boolean boolean20 = client0.editBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", 52);
        org.junit.Assert.assertNotNull(client0);
// flaky "15) test1603(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        java.lang.Object obj13 = accountRegistry6.login("empty", "Refunded total cost of $1.0");
        boolean boolean15 = accountRegistry6.requiresValidation("Refunded total cost of $1.0");
        ParkingSystem.SuperManager superManager16 = ParkingSystem.SuperManager.createFromCSV("Paid $ 0.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Paid $ 15.0 with Mobile Pay", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        boolean boolean27 = accountRegistry24.requiresValidation("disabled");
        int int28 = accountRegistry24.getManagersSize();
        ParkingSystem.SuperManager superManager29 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry24);
        ParkingSystem.AccountRegistry accountRegistry30 = superManager29.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry33 = parkingSpaceProxy32.getRegistry();
        boolean boolean39 = parkingSpaceProxy32.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean43 = parkingSpaceProxy32.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean53 = parkingSpaceProxy32.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry30.assignProxyToManager("empty", parkingSpaceProxy32);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy56 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade57 = parkingSpaceProxy56.getFacade();
        accountRegistry30.assignProxyToManager("", parkingSpaceProxy56);
        parkingSpaceProxy56.addParkingLot("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean62 = parkingSpaceProxy56.cancelBooking("Paid $ 0.0 with Mobile Pay");
        java.lang.String str65 = parkingSpaceProxy56.scanSpace("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "tbHxuilT");
        accountRegistry6.assignProxyToManager("3b453211-7dd1-4452-8741-a206711c1217", parkingSpaceProxy56);
        parkingSpaceProxy56.toggleSpace("Refunded without deposit ($0.0)", "ST001", false);
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(superManager16);
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(superManager29);
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertNotNull(accountRegistry33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "disabled" + "'", str65, "disabled");
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = parkingSpaceProxy0.getFacade();
        ParkingSystem.Booking booking3 = parkingSpaceFacade1.getBookingDetails("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean7 = parkingSpaceFacade1.editBooking("Paid $ -1.0 with Mobile Pay", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", (int) (byte) 0);
        ParkingSystem.Booking booking9 = parkingSpaceFacade1.getBookingDetails("empty");
        org.junit.Assert.assertNotNull(parkingSpaceFacade1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(booking9);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        boolean boolean10 = parkingLot1.isEnabled();
        boolean boolean11 = parkingLot1.isEnabled();
        parkingLot1.setEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.User user21 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj25 = parkingSpaceProxy22.login("empty", "Jane");
        parkingSpaceProxy22.validateClient("Jane");
        parkingSpaceProxy22.toggleSpace("", "staff", false);
        boolean boolean33 = parkingSpaceProxy22.cancelBooking("");
        user21.assignProxy(parkingSpaceProxy22);
        user0.user = parkingSpaceProxy22;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = user0.parkingProxy;
        parkingSpaceProxy36.addParkingLot("pass");
        boolean boolean40 = parkingSpaceProxy36.cancelBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean43 = parkingSpaceProxy36.extendBooking("9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (short) 0);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        boolean boolean3 = parkingLot1.isSpaceAvailable(100);
        parkingLot1.setEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.addParkingLot("pass");
        boolean boolean6 = parkingSpaceProxy0.checkIn("Paid $ 100.0 with Mobile Pay");
        java.lang.Object obj9 = parkingSpaceProxy0.login("89de8237-29df-4908-9de4-6dc1ce90de94", "8812812f-8c58-440e-9188-ca0b1f996ced");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(obj9);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkIn("02659ad3-0b5c-4c48-a915-a466f2b50775");
        ParkingSystem.CheckInManager checkInManager12 = parkingSpaceFacade9.getCheckInManager();
        boolean boolean14 = parkingSpaceFacade9.cancelBooking("CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(checkInManager12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        boolean boolean23 = bookingManager0.editBooking("CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", (int) (byte) 0);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.cancelBooking();
        ParkingSystem.User user11 = new ParkingSystem.User();
        java.lang.Object obj12 = user11.user;
        ParkingSystem.Client client13 = ParkingSystem.Client.getInstance();
        java.lang.String str14 = client13.getName();
        client13.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        client13.assignProxy(parkingSpaceProxy17);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade22 = parkingSpaceProxy17.getFacade();
        user11.assignProxy(parkingSpaceProxy17);
        java.lang.String str26 = parkingSpaceProxy17.scanSpace("disabled", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        parkingSpaceProxy17.toggleLot("empty", true);
        client0.assignProxy(parkingSpaceProxy17);
        boolean boolean32 = parkingSpaceProxy17.checkIn("");
        boolean boolean42 = parkingSpaceProxy17.confirmBooking("3b453211-7dd1-4452-8741-a206711c1217", "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc", "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 1, "CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4", (int) 'a', "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "disabled");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client7 = ParkingSystem.Client.getInstance();
        java.lang.String str8 = client7.getName();
        client7.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str17 = client7.getUsername();
        java.lang.String str18 = client7.getPassword();
        java.lang.String str19 = client7.getClientType();
        boolean boolean20 = client7.getIsValidated();
        boolean boolean28 = client7.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str29 = client7.getName();
        boolean boolean30 = client7.getIsValidated();
        cSVManager0.saveClient(client7);
        client7.setClientInfo("Paid $ 1470.0 with Mobile Pay", "pass", "", "CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "hi!", false);
        java.lang.String str40 = client7.getPassword();
        java.lang.String str41 = client7.getClientId();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "16) test1613(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "disabled" + "'", str19, "disabled");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6" + "'", str40, "CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Paid $ 1470.0 with Mobile Pay" + "'", str41, "Paid $ 1470.0 with Mobile Pay");
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        superManager7.registry = accountRegistry11;
        ParkingSystem.Client client15 = accountRegistry11.getClient("empty");
        accountRegistry11.validateClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        java.lang.Object obj20 = accountRegistry11.login("ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        accountRegistry11.validateClient("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("Jane", "Paid $ -1.0 with Mobile Pay", "pass", accountRegistry11);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy25 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry26 = parkingSpaceProxy25.getRegistry();
        boolean boolean32 = parkingSpaceProxy25.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean36 = parkingSpaceProxy25.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        parkingSpaceProxy25.toggleLot("Paid $ -1.0 with Mobile Pay", false);
        accountRegistry11.assignProxyToClient("CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", parkingSpaceProxy25);
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertNotNull(accountRegistry26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingSpace parkingSpace8 = parkingLot1.getParkingSpace((int) ' ');
        boolean boolean10 = parkingLot1.isSpaceAvailable(3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingSpace8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.toggleLot("", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = parkingSpaceProxy0.getFacade();
        java.lang.String str10 = parkingSpaceFacade7.scanSpace("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean4 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) 10);
        boolean boolean7 = parkingSpaceFacade0.extendBooking("Paid $ 0.0 with Mobile Pay", (int) (byte) 1);
        boolean boolean10 = parkingSpaceFacade0.extendBooking("Refunded without deposit ($-42.0)", (int) (byte) 100);
        boolean boolean20 = parkingSpaceFacade0.confirmBooking("jane", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "fhd49ADb", "disabled", (int) (byte) -1, "09622cbf-e665-45db-b1ad-365065947a20", (int) (byte) 10, "hi!", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        java.lang.String str23 = parkingSpaceFacade0.scanSpace("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = spaceManager0.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        spaceManager0.toggleSpace("I673kmcH", "86z9Z9e0MN", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.SpaceManager spaceManager14 = new ParkingSystem.SpaceManager();
        boolean boolean17 = spaceManager14.isSpaceAvailable("hi!", (int) '#');
        spaceManager14.toggleLot("disabled", false);
        ParkingSystem.Booking booking30 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean31 = spaceManager14.assignBooking("empty", (int) (short) 0, booking30);
        spaceManager14.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager14.getParkingLots();
        cSVManager0.loadParkingLots(strMap33);
        java.lang.String[] strArray35 = cSVManager0.loadSuperManager();
        ParkingSystem.CSVManager cSVManager36 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList38 = cSVManager36.readCSV("");
        java.util.List<java.lang.String[]> strArrayList40 = cSVManager36.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray41 = cSVManager36.loadSuperManager();
        ParkingSystem.SpaceManager spaceManager42 = new ParkingSystem.SpaceManager();
        spaceManager42.removeBooking("hi!", (int) (byte) 0);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap46 = spaceManager42.getParkingLots();
        cSVManager36.saveParkingLots(strMap46);
        cSVManager0.loadParkingLots(strMap46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList49 = cSVManager0.loadManagers();
// flaky "17) test1619(RegressionTest3)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strArray35);
// flaky "6) test1619(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray35, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList38);
        org.junit.Assert.assertNotNull(strArrayList40);
        org.junit.Assert.assertNotNull(strArray41);
// flaky "5) test1619(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray41, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        parkingSpaceProxy9.toggleSpace("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", false);
        boolean boolean23 = parkingSpaceProxy9.extendBooking("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (-1));
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        java.lang.String str9 = booking7.getLotId();
        int int10 = booking7.getDuration();
        java.lang.String str11 = booking7.getLotId();
        boolean boolean12 = booking7.isCheckedIn();
        int int13 = booking7.getSpaceId();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "jane" + "'", str9, "jane");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy12.getRegistry();
        java.lang.String str16 = parkingSpaceProxy12.scanSpace("empty", "hi!");
        boolean boolean26 = parkingSpaceProxy12.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean30 = parkingSpaceProxy12.editBooking("pass", "2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (byte) 100);
        boolean boolean34 = parkingSpaceProxy12.editBooking("", "disabled", (int) (byte) -1);
        manager11.assignProxy(parkingSpaceProxy12);
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(manager11);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        client0.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        boolean boolean20 = client0.checkOut();
        client0.setValidated(true);
        java.lang.String str23 = client0.getUsername();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "jane" + "'", str10, "jane");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "empty" + "'", str11, "empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Jane" + "'", str23, "Jane");
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        double double5 = bookingManager3.getHourlyRate("jane");
        ParkingSystem.PaymentManager paymentManager6 = new ParkingSystem.PaymentManager();
        java.lang.String str7 = paymentManager6.refundMessage;
        boolean boolean10 = paymentManager6.refundWithoutDeposit((double) (short) 10, (double) '4');
        ParkingSystem.BookingManager bookingManager11 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager12 = new ParkingSystem.CheckInManager(bookingManager11);
        ParkingSystem.SpaceManager spaceManager13 = bookingManager11.getSpaceManager();
        double double16 = bookingManager11.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager11.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        boolean boolean23 = debitOrCredit17.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        paymentManager6.setStrategy((ParkingSystem.Strategy) debitOrCredit17);
        java.lang.String str25 = debitOrCredit17.getPaymentMessage();
        bookingManager3.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(spaceManager13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 165.0d + "'", double16 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Card number should be 16 digits" + "'", str25, "Card number should be 16 digits");
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.SpaceManager spaceManager15 = new ParkingSystem.SpaceManager();
        boolean boolean18 = spaceManager15.isSpaceAvailable("hi!", (int) '#');
        spaceManager15.toggleLot("disabled", false);
        ParkingSystem.Booking booking31 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean32 = spaceManager15.assignBooking("empty", (int) (short) 0, booking31);
        java.lang.String str33 = booking31.getClientId();
        boolean boolean34 = parkingSpace10.assignBooking(booking31);
        int int35 = booking31.getDuration();
        boolean boolean36 = booking31.isCheckedIn();
        int int37 = booking31.getDuration();
        int int38 = booking31.getDuration();
        java.lang.String str39 = booking31.getClientId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "staff" + "'", str33, "staff");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "staff" + "'", str39, "staff");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        double double5 = bookingManager0.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean21 = mobilePay6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        boolean boolean26 = bookingManager0.editBooking("qPYDfDnbtD", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", (int) (short) -1);
        boolean boolean28 = bookingManager0.cancelBooking("Paid $ 0.0 with Mobile Pay");
        boolean boolean30 = bookingManager0.cancelBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        double double32 = bookingManager0.getHourlyRate("tbHxuilT");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 15.0d + "'", double32 == 15.0d);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleSpace("Refunded total cost of $-1.0", "disabled", true);
        parkingSpaceFacade0.addParkingLot("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        parkingSpaceFacade0.addParkingLot("Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        java.lang.String str52 = parkingSpace28.scanSpace();
        ParkingSystem.Booking booking53 = parkingSpace28.getCurrentBooking();
        ParkingSystem.Booking booking61 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double62 = booking61.getTotalCost();
        java.lang.String str63 = booking61.getLotId();
        boolean boolean64 = booking61.isCheckedIn();
        booking61.setStartTime("Refunded total cost of $1.0");
        boolean boolean67 = parkingSpace28.assignBooking(booking61);
        java.lang.String str68 = booking61.getStartTime();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertNotNull(booking53);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 1.0d + "'", double62 == 1.0d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "jane" + "'", str63, "jane");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Refunded total cost of $1.0" + "'", str68, "Refunded total cost of $1.0");
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = parkingSpaceProxy0.getFacade();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy0.getRegistry();
        boolean boolean6 = parkingSpaceProxy0.checkOut("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(parkingSpaceFacade3);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        parkingSpaceProxy2.autoGenerateManager();
        boolean boolean26 = parkingSpaceProxy2.confirmBooking("Refunded without deposit ($-42.0)", "disabled", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (short) 1, "empty", (int) (short) 1, "Card number should be 16 digits", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean29 = parkingSpaceProxy2.extendBooking("CLT-390234b0-d56e-4275-bd7b-122280609c69", (int) 'a');
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        java.lang.String str22 = superManager21.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager21.registry;
        java.lang.String str24 = superManager21.getManagerId();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        superManager21.assignProxy(parkingSpaceProxy35);
        user0.assignProxy(parkingSpaceProxy35);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy39 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry40 = parkingSpaceProxy39.getRegistry();
        boolean boolean46 = parkingSpaceProxy39.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean50 = parkingSpaceProxy39.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean60 = parkingSpaceProxy39.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        boolean boolean62 = parkingSpaceProxy39.checkOut("Card number should be 16 digits");
        parkingSpaceProxy39.autoGenerateManager();
        user0.parkingProxy = parkingSpaceProxy39;
        user0.register("Paid $ -1.0 with Mobile Pay", "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "Paid $ 15.0 with Mobile Pay", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
// flaky "18) test1631(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str22, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry23);
// flaky "7) test1631(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str24, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "empty" + "'", str26, "empty");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean4 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) 10);
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", false);
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        boolean boolean36 = accountRegistry24.registerClient("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "Refunded without deposit ($0.0)", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "Refunded total cost of $0.0");
        accountRegistry24.validateClient("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "19) test1633(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
// flaky "8) test1633(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str20, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.checkIn();
        boolean boolean11 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786" + "'", str1, "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager9 = new ParkingSystem.SpaceManager();
        boolean boolean12 = spaceManager9.isSpaceAvailable("hi!", (int) '#');
        spaceManager9.toggleLot("disabled", false);
        ParkingSystem.Booking booking25 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean26 = spaceManager9.assignBooking("empty", (int) (short) 0, booking25);
        boolean boolean27 = spaceManager0.assignBooking("hi!", 0, booking25);
        double double28 = booking25.getTotalCost();
        booking25.setDuration((-1));
        boolean boolean31 = booking25.isCheckedIn();
        int int32 = booking25.getDuration();
        double double33 = booking25.getTotalCost();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = parkingSpaceProxy0.getFacade();
        java.lang.String str6 = parkingSpaceFacade3.scanSpace("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(parkingSpaceFacade3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean11 = parkingSpaceProxy0.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean21 = parkingSpaceProxy0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        boolean boolean23 = parkingSpaceProxy0.checkOut("Card number should be 16 digits");
        parkingSpaceProxy0.autoGenerateManager();
        boolean boolean27 = parkingSpaceProxy0.extendBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", (int) (short) 0);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean13 = parkingSpaceFacade0.confirmBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", (int) (short) -1, "pass", (int) (short) 1, "Paid $ -1.0 with Mobile Pay", "hi!");
        boolean boolean15 = parkingSpaceFacade0.cancelBooking("ST001");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean21 = client0.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str22 = client0.getName();
        boolean boolean23 = client0.getIsValidated();
        ParkingSystem.Booking booking24 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(booking24);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        client0.assignProxy(parkingSpaceProxy17);
        ParkingSystem.AccountRegistry accountRegistry25 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager26 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry25);
        java.lang.String str27 = superManager26.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry31 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager32 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry31);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = null;
        accountRegistry31.assignProxyToManager("disabled", parkingSpaceProxy34);
        superManager26.registry = accountRegistry31;
        ParkingSystem.AccountRegistry accountRegistry37 = superManager26.getRegistry();
        ParkingSystem.Manager manager38 = accountRegistry37.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy40 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry41 = parkingSpaceProxy40.getRegistry();
        boolean boolean47 = parkingSpaceProxy40.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy40.toggleLot("hi!", false);
        accountRegistry37.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy40);
        ParkingSystem.User user53 = new ParkingSystem.User();
        java.lang.Object obj54 = user53.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy55 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj58 = parkingSpaceProxy55.login("empty", "Jane");
        parkingSpaceProxy55.validateClient("Jane");
        java.lang.String str63 = parkingSpaceProxy55.scanSpace("", "");
        parkingSpaceProxy55.toggleSpace("", "disabled", true);
        user53.parkingProxy = parkingSpaceProxy55;
        ParkingSystem.ParkingLot parkingLot70 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator71 = parkingLot70.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator72 = parkingLot70.getIterator();
        user53.user = parkingLot70;
        ParkingSystem.User user74 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy75 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj78 = parkingSpaceProxy75.login("empty", "Jane");
        parkingSpaceProxy75.validateClient("Jane");
        parkingSpaceProxy75.toggleSpace("", "staff", false);
        boolean boolean86 = parkingSpaceProxy75.cancelBooking("");
        user74.assignProxy(parkingSpaceProxy75);
        user53.user = parkingSpaceProxy75;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy89 = user53.parkingProxy;
        parkingSpaceProxy89.addParkingLot("pass");
        accountRegistry37.assignProxyToManager("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", parkingSpaceProxy89);
        client0.assignProxy(parkingSpaceProxy89);
        boolean boolean94 = client0.cancelBooking();
        java.lang.String str95 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(superManager26);
// flaky "20) test1640(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str27, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(superManager32);
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertNotNull(manager38);
        org.junit.Assert.assertNotNull(accountRegistry41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "disabled" + "'", str63, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator71);
        org.junit.Assert.assertNotNull(parkingLotIterator72);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy89);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "jane" + "'", str95, "jane");
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("hi!", (-1.0d), "", "");
        boolean boolean10 = mobilePay0.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean15 = mobilePay0.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        java.lang.String str16 = mobilePay0.getPaymentMessage();
        java.lang.Class<?> wildcardClass17 = mobilePay0.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str16, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.toggleLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", true);
        spaceManager0.removeBooking("CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc", (int) ' ');
        boolean boolean15 = spaceManager0.isSpaceAvailable("qPYDfDnbtD", (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        ParkingSystem.Booking booking3 = client0.getBookingDetails();
        java.lang.String str4 = client0.getExtraId();
        boolean boolean5 = client0.cancelBooking();
        java.lang.String str6 = client0.getName();
        boolean boolean7 = client0.checkIn();
        org.junit.Assert.assertNotNull(client0);
// flaky "21) test1643(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str1, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
// flaky "9) test1643(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "pass" + "'", str2, "pass");
        org.junit.Assert.assertNull(booking3);
// flaky "6) test1643(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Refunded total cost of $1.0" + "'", str4, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        boolean boolean17 = accountRegistry14.requiresValidation("disabled");
        int int18 = accountRegistry14.getManagersSize();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.getRegistry();
        superManager4.registry = accountRegistry20;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade23 = parkingSpaceProxy22.getFacade();
        superManager4.assignProxy(parkingSpaceProxy22);
        boolean boolean34 = parkingSpaceProxy22.confirmBooking("", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (short) 0, "Refunded total cost of $-1.0", 0, "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "22) test1644(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
// flaky "10) test1644(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str6, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(parkingSpaceFacade23);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        java.lang.String str3 = client0.getClientId();
        java.lang.String str4 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
// flaky "23) test1645(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str1, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
// flaky "11) test1645(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "pass" + "'", str2, "pass");
// flaky "7) test1645(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pass" + "'", str3, "pass");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "empty" + "'", str4, "empty");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        int int12 = parkingSpace11.getSpaceId();
        ParkingSystem.Booking booking13 = parkingSpace11.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager14 = new ParkingSystem.SpaceManager();
        boolean boolean17 = spaceManager14.isSpaceAvailable("hi!", (int) '#');
        spaceManager14.toggleLot("disabled", false);
        ParkingSystem.Booking booking30 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean31 = spaceManager14.assignBooking("empty", (int) (short) 0, booking30);
        boolean boolean32 = parkingSpace11.assignBooking(booking30);
        java.lang.String str33 = disabled0.scanSpace(parkingSpace11);
        boolean boolean34 = parkingSpace11.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "disabled" + "'", str33, "disabled");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking22 = parkingSpaceProxy20.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy20.getRegistry();
        parkingSpaceProxy20.autoGenerateManager();
        client0.assignProxy(parkingSpaceProxy20);
        boolean boolean29 = parkingSpaceProxy20.editBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded total cost of $100.0", (int) (byte) 0);
        parkingSpaceProxy20.toggleSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", true);
        ParkingSystem.Booking booking35 = parkingSpaceProxy20.getBookingDetails("h40rNQ7kR1");
        boolean boolean45 = parkingSpaceProxy20.confirmBooking("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Refunded without deposit ($-15.0)", "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "", (int) 'a', "Card number should be 16 digits", (int) ' ', "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(booking35);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        boolean boolean11 = parkingSpaceProxy0.cancelBooking("Jane");
        boolean boolean13 = parkingSpaceProxy0.checkOut("empty");
        boolean boolean23 = parkingSpaceProxy0.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        parkingSpaceProxy0.addParkingLot("Paid $ -1.0 with Mobile Pay");
        boolean boolean29 = parkingSpaceProxy0.editBooking("pass", "Paid $ 1470.0 with Mobile Pay", (int) '4');
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean4 = parkingSpaceFacade0.cancelBooking("jane");
        boolean boolean7 = parkingSpaceFacade0.extendBooking("hi!", (-1));
        parkingSpaceFacade0.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        parkingSpaceFacade0.toggleSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 10.0 with Mobile Pay", true);
        ParkingSystem.SpaceManager spaceManager15 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager16 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str27 = booking26.getLicensePlate();
        java.lang.String str28 = booking26.getStartTime();
        boolean boolean29 = spaceManager16.assignBooking("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", 100, booking26);
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime30 = booking26.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(spaceManager15);
        org.junit.Assert.assertNotNull(spaceManager16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "disabled" + "'", str27, "disabled");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Jane" + "'", str28, "Jane");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "qMzKSKOI", 32, "25527a32-01ef-45ba-816a-1d0a2fc2a52d", (int) (byte) 100, "staff", (double) 100.0f);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = parkingSpaceFacade0.scanSpace("jane", "Refunded without deposit ($0.0)");
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("Jane", "");
        ParkingSystem.Booking booking12 = parkingSpaceFacade0.getBookingDetails("4a1f2343-8b2e-4dea-ba69-efd105414390");
        boolean boolean22 = parkingSpaceFacade0.confirmBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "02659ad3-0b5c-4c48-a915-a466f2b50775", 32, "02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "89de8237-29df-4908-9de4-6dc1ce90de94");
        ParkingSystem.Booking booking24 = parkingSpaceFacade0.getBookingDetails("Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(booking24);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        parkingSpaceFacade0.addParkingLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean7 = parkingSpaceFacade0.checkOut("Refunded without deposit ($-42.0)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getUsername();
        boolean boolean4 = client0.extendBooking(100);
        java.lang.String str5 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
// flaky "24) test1653(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str1, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
// flaky "12) test1653(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str5, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        checkInManager1.refundMessage = "staff";
        checkInManager1.refundMessage = "Refunded total cost of $1.0";
        java.lang.String str8 = checkInManager1.refundMessage;
        java.lang.String str9 = checkInManager1.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Refunded total cost of $1.0" + "'", str8, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Refunded total cost of $1.0" + "'", str9, "Refunded total cost of $1.0");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        ParkingSystem.AccountRegistry accountRegistry6 = null;
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj17 = parkingSpaceProxy14.login("empty", "Jane");
        parkingSpaceProxy14.validateClient("Jane");
        parkingSpaceProxy14.toggleSpace("", "staff", false);
        accountRegistry12.assignProxyToManager("pass", parkingSpaceProxy14);
        ParkingSystem.Client client26 = accountRegistry12.getClient("");
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry12);
        superManager7.registry = accountRegistry12;
        ParkingSystem.AccountRegistry accountRegistry29 = superManager7.getRegistry();
        ParkingSystem.Manager manager30 = accountRegistry29.autoGenerateManager();
        ParkingSystem.SuperManager superManager31 = ParkingSystem.SuperManager.createFromCSV("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", accountRegistry29);
        java.lang.String str32 = superManager31.getName();
        ParkingSystem.Client client33 = ParkingSystem.Client.getInstance();
        java.lang.String str34 = client33.getName();
        client33.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy37 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry38 = parkingSpaceProxy37.getRegistry();
        boolean boolean40 = parkingSpaceProxy37.checkIn("");
        client33.assignProxy(parkingSpaceProxy37);
        boolean boolean42 = client33.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        client33.assignProxy(parkingSpaceProxy43);
        ParkingSystem.AccountRegistry accountRegistry45 = parkingSpaceProxy43.getRegistry();
        boolean boolean49 = parkingSpaceProxy43.editBooking("pass", "Refunded without deposit ($0.0)", 1);
        superManager31.assignProxy(parkingSpaceProxy43);
        boolean boolean54 = parkingSpaceProxy43.editBooking("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", (int) (byte) -1);
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertNotNull(manager30);
        org.junit.Assert.assertNotNull(superManager31);
// flaky "25) test1655(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tbHxuilT" + "'", str32, "tbHxuilT");
        org.junit.Assert.assertNotNull(client33);
// flaky "13) test1655(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "jane" + "'", str34, "jane");
        org.junit.Assert.assertNotNull(accountRegistry38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(accountRegistry45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        java.lang.String str4 = client0.getExtraId();
        java.lang.String str5 = client0.getUsername();
        client0.setValidated(false);
        org.junit.Assert.assertNotNull(client0);
// flaky "26) test1656(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
// flaky "14) test1656(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "staff" + "'", str4, "staff");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        java.lang.String str12 = superManager11.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry13 = superManager11.getRegistry();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        java.lang.String str15 = superManager11.getPassword();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "27) test1657(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(superManager11);
// flaky "15) test1657(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str12, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry13);
// flaky "8) test1657(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Refunded total cost of $0.0" + "'", str15, "Refunded total cost of $0.0");
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean18 = paymentManager0.refundWithoutDeposit((double) 0.0f, (double) (-1));
        ParkingSystem.BookingManager bookingManager19 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager19);
        ParkingSystem.SpaceManager spaceManager21 = bookingManager19.getSpaceManager();
        double double24 = bookingManager19.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit25 = new ParkingSystem.DebitOrCredit();
        bookingManager19.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit25);
        boolean boolean31 = debitOrCredit25.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str32 = debitOrCredit25.getPaymentMessage();
        java.lang.String str33 = debitOrCredit25.getPaymentMessage();
        boolean boolean38 = debitOrCredit25.processPayment("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (double) 100L, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "0b35479f-5869-423e-9abc-e4ab9cef903d");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit25);
        ParkingSystem.PaymentManager paymentManager40 = new ParkingSystem.PaymentManager();
        java.lang.String str41 = paymentManager40.refundMessage;
        boolean boolean44 = paymentManager40.refundWithoutDeposit((double) (short) 10, (double) '4');
        ParkingSystem.BookingManager bookingManager45 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager46 = new ParkingSystem.CheckInManager(bookingManager45);
        ParkingSystem.SpaceManager spaceManager47 = bookingManager45.getSpaceManager();
        double double50 = bookingManager45.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit51 = new ParkingSystem.DebitOrCredit();
        bookingManager45.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit51);
        boolean boolean57 = debitOrCredit51.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        paymentManager40.setStrategy((ParkingSystem.Strategy) debitOrCredit51);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit51);
        java.lang.String str60 = paymentManager0.refundMessage;
        java.lang.String str61 = paymentManager0.paymentMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 165.0d + "'", double24 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Card number should be 16 digits" + "'", str32, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Card number should be 16 digits" + "'", str33, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(spaceManager47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 165.0d + "'", double50 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Refunded without deposit ($1.0)" + "'", str60, "Refunded without deposit ($1.0)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str61, "Paid $ 100.0 with Mobile Pay");
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", (int) (short) 0, "Refunded without deposit ($0.0)", (int) (byte) -1, "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", 0.0d);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = parkingSpaceFacade0.scanSpace("jane", "Refunded without deposit ($0.0)");
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("Jane", "");
        ParkingSystem.Booking booking12 = parkingSpaceFacade0.getBookingDetails("4a1f2343-8b2e-4dea-ba69-efd105414390");
        boolean boolean22 = parkingSpaceFacade0.confirmBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "02659ad3-0b5c-4c48-a915-a466f2b50775", 32, "02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "89de8237-29df-4908-9de4-6dc1ce90de94");
        java.lang.String str25 = parkingSpaceFacade0.scanSpace("83a51dc6-0c8f-4f21-ae40-68699828f95d", "Jane");
        boolean boolean27 = parkingSpaceFacade0.cancelBooking("8ca2ec61-774c-409d-89d5-5b9171b40497");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "disabled" + "'", str25, "disabled");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        double double5 = bookingManager0.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean21 = mobilePay6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        double double24 = bookingManager0.getDeposit("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap3 = bookingManager0.getActiveBookings();
        double double5 = bookingManager0.getDeposit("Refunded total cost of $1.0");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        java.lang.String str12 = superManager11.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry13 = superManager11.getRegistry();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager11.registry;
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "28) test1663(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(superManager11);
// flaky "16) test1663(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str12, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNotNull(accountRegistry15);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager5.getSpaceManager();
        boolean boolean19 = bookingManager5.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double21 = bookingManager5.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit22 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit22);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit22);
        boolean boolean27 = debitOrCredit22.validateCard("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", (double) 10);
        java.lang.String str28 = debitOrCredit22.getPaymentMessage();
        java.lang.String str29 = debitOrCredit22.getPaymentMessage();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Card number should be 16 digits" + "'", str28, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Card number should be 16 digits" + "'", str29, "Card number should be 16 digits");
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = bookingManager0.extendBooking("jane", (int) (byte) 100, "hi!", "jane");
        ParkingSystem.SpaceManager spaceManager7 = bookingManager0.getSpaceManager();
        boolean boolean12 = bookingManager0.extendBooking("Refunded without deposit ($0.0)", (int) (byte) 1, "hi!", "pass");
        boolean boolean17 = bookingManager0.extendBooking("Refunded without deposit ($-42.0)", 0, "Refunded total cost of $1.0", "Jane");
        ParkingSystem.CheckInManager checkInManager18 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean20 = checkInManager18.checkIn("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        boolean boolean22 = checkInManager18.checkOut("e8686ac8-1df7-4a9b-b299-8fbcdd585528");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        java.util.List<ParkingSystem.Client> clientList21 = accountRegistry20.displayPendingValidations();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(clientList21);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        boolean boolean17 = accountRegistry14.requiresValidation("disabled");
        int int18 = accountRegistry14.getManagersSize();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.getRegistry();
        superManager4.registry = accountRegistry20;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade23 = parkingSpaceProxy22.getFacade();
        superManager4.assignProxy(parkingSpaceProxy22);
        ParkingSystem.AccountRegistry accountRegistry25 = superManager4.getRegistry();
        int int26 = accountRegistry25.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "29) test1667(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
// flaky "17) test1667(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str6, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(parkingSpaceFacade23);
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        java.lang.String str14 = client0.getPassword();
        boolean boolean15 = client0.checkIn();
        org.junit.Assert.assertNotNull(client0);
// flaky "30) test1668(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "18) test1668(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "staff" + "'", str10, "staff");
// flaky "9) test1668(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
// flaky "5) test1668(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "jane" + "'", str12, "jane");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky "3) test1668(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        boolean boolean2 = client0.getIsValidated();
        boolean boolean3 = client0.checkIn();
        org.junit.Assert.assertNotNull(client0);
// flaky "31) test1669(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str1, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str13 = client3.getUsername();
        java.lang.String str14 = client3.getPassword();
        java.lang.String str15 = client3.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = null;
        client3.assignProxy(parkingSpaceProxy16);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj21 = parkingSpaceProxy18.login("empty", "Jane");
        client3.assignProxy(parkingSpaceProxy18);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj26 = parkingSpaceProxy23.login("empty", "Jane");
        parkingSpaceProxy23.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        parkingSpaceProxy23.displayPendingValidations();
        client3.assignProxy(parkingSpaceProxy23);
        client0.assignProxy(parkingSpaceProxy23);
        boolean boolean41 = client0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", 4, "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", (int) (byte) 10, "9fJ5pCUl", "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc");
        org.junit.Assert.assertNotNull(client0);
// flaky "32) test1670(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str1, "Paid $ 10.0 with Mobile Pay");
// flaky "19) test1670(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(client3);
// flaky "10) test1670(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "jane" + "'", str4, "jane");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean15 = parkingSpaceFacade0.cancelBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean19 = parkingSpaceFacade0.editBooking("empty", "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", 32);
        boolean boolean29 = parkingSpaceFacade0.confirmBooking("CLT-92729d37-9255-42b4-9361-c1978aadacb0", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "02659ad3-0b5c-4c48-a915-a466f2b50775", "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", (int) (byte) 100, "CLT-631eb509-a6c4-407c-b16d-582a6faabddb", (int) '#', "83a51dc6-0c8f-4f21-ae40-68699828f95d", "Paid $ 1.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getClientId();
        java.lang.String str11 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(false);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", "jane", 10, "Jane", (int) (byte) 0, "3b453211-7dd1-4452-8741-a206711c1217", 1470.0d);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean13 = bookingManager0.extendBooking("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", 10, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-96.0)");
        ParkingSystem.SpaceManager spaceManager14 = bookingManager0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(spaceManager14);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager3 = parkingSpaceFacade1.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager3.getParkingLots();
        cSVManager0.loadParkingLots(strMap4);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        cSVManager0.updateClientValidation("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList10 = cSVManager0.loadManagers();
// flaky "33) test1676(RegressionTest3)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "20) test1676(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        paymentManager0.paymentMessage = "";
        java.lang.String str5 = paymentManager0.refundMessage;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean21 = client0.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str22 = client0.getName();
        boolean boolean24 = client0.extendBooking((int) ' ');
        boolean boolean25 = client0.checkIn();
        java.lang.String str26 = client0.getClientType();
        boolean boolean27 = client0.getIsValidated();
        java.lang.String str28 = client0.getExtraId();
        java.lang.String str29 = client0.getUsername();
        java.lang.String str30 = client0.getExtraId();
        client0.setClientInfo("", "Refunded total cost of $1.0", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "disabled", "e8686ac8-1df7-4a9b-b299-8fbcdd585528", false);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager19 = bookingManager0.getSpaceManager();
        boolean boolean24 = bookingManager0.extendBooking("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", (int) '#', "ST001", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(spaceManager19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        boolean boolean27 = client0.confirmBooking("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "I673kmcH", 0, "fhd49ADb", 2, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded total cost of $1.0" + "'", str1, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.SpaceManager spaceManager8 = bookingManager0.getSpaceManager();
        boolean boolean10 = bookingManager0.cancelBooking("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.CheckInManager checkInManager18 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean20 = checkInManager18.checkIn("lL3e2yIMXI");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        superManager10.registry = accountRegistry14;
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry14);
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "pass", "empty", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry19 = superManager18.registry;
        int int20 = accountRegistry19.getManagersSize();
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        java.lang.String str29 = superManager28.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = null;
        accountRegistry33.assignProxyToManager("disabled", parkingSpaceProxy36);
        superManager28.registry = accountRegistry33;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager28);
        cSVManager0.updateClientValidation("Refunded without deposit ($-15.0)", false);
        cSVManager0.updateClientValidation("Card number should be 16 digits", false);
        java.util.List<java.lang.String[]> strArrayList47 = cSVManager0.readCSV("Refunded total cost of $-1.0");
        org.junit.Assert.assertNotNull(strArray1);
// flaky "34) test1684(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "21) test1684(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(superManager28);
// flaky "11) test1684(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str29, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertNotNull(strArrayList47);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.PaymentManager paymentManager21 = new ParkingSystem.PaymentManager();
        java.lang.String str22 = paymentManager21.refundMessage;
        boolean boolean24 = paymentManager21.refundTotalCost((-1.0d));
        paymentManager21.refundMessage = "disabled";
        boolean boolean31 = paymentManager21.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay32 = new ParkingSystem.MobilePay();
        boolean boolean37 = mobilePay32.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str38 = mobilePay32.getPaymentMessage();
        java.lang.String str39 = mobilePay32.getPaymentMessage();
        paymentManager21.setStrategy((ParkingSystem.Strategy) mobilePay32);
        user0.user = paymentManager21;
        user0.register("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8", "", "Paid $ 15.0 with Mobile Pay", "3b453211-7dd1-4452-8741-a206711c1217", "Refunded without deposit ($0.0)");
        java.lang.Object obj48 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str38, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str39, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        client0.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        boolean boolean20 = client0.checkOut();
        client0.setValidated(true);
        boolean boolean23 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8" + "'", str1, "CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Refunded without deposit ($0.0)" + "'", str10, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8" + "'", str11, "CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        cSVManager0.updateClientValidation("empty", false);
        java.util.List<java.lang.String[]> strArrayList5 = cSVManager0.readCSV("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList7 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList5);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "35) test1687(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("Refunded without deposit ($0.0)");
        boolean boolean15 = bookingManager0.confirmBooking("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", (int) (short) 0, "25527a32-01ef-45ba-816a-1d0a2fc2a52d", (int) (short) 1, "", "Paid $ 100.0 with Mobile Pay");
        ParkingSystem.Booking booking17 = bookingManager0.getBooking("3b453211-7dd1-4452-8741-a206711c1217");
        ParkingSystem.AccountRegistry accountRegistry18 = bookingManager0.getAccountRegistry();
        double double20 = bookingManager0.getDeposit("4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        double double22 = bookingManager0.getHourlyRate("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(booking17);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 15.0d + "'", double20 == 15.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        java.util.List<java.lang.String[]> strArrayList25 = cSVManager0.readCSV("Jane");
        ParkingSystem.AccountRegistry accountRegistry35 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager36 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry35);
        boolean boolean38 = accountRegistry35.requiresValidation("disabled");
        int int39 = accountRegistry35.getManagersSize();
        ParkingSystem.SuperManager superManager40 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry35);
        ParkingSystem.AccountRegistry accountRegistry41 = superManager40.getRegistry();
        accountRegistry41.validateClient("pass");
        ParkingSystem.SuperManager superManager44 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry41);
        cSVManager0.saveManager((ParkingSystem.Manager) superManager44);
        java.lang.String str46 = superManager44.getManagerId();
        superManager44.displayPendingValidations();
        org.junit.Assert.assertNotNull(strArray1);
// flaky "36) test1689(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "22) test1689(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
// flaky "12) test1689(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Jane" + "'", str4, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky "6) test1689(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ST001" + "'", str13, "ST001");
// flaky "4) test1689(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Jane" + "'", str14, "Jane");
        org.junit.Assert.assertNotNull(strArrayList25);
        org.junit.Assert.assertNotNull(superManager36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(superManager40);
        org.junit.Assert.assertNotNull(accountRegistry41);
        org.junit.Assert.assertNotNull(superManager44);
// flaky "3) test1689(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str46, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.getRegistry();
        java.lang.String str11 = superManager4.getManagerId();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "37) test1690(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
// flaky "23) test1690(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str6, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
// flaky "13) test1690(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str9, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry10);
// flaky "7) test1690(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str11, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getUsername();
        client0.setValidated(false);
        client0.setClientInfo("staff", "Refunded total cost of $1.0", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Jane", "Paid $ 10.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay", true);
        boolean boolean15 = client0.editBooking("Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean18 = client0.editBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", (int) 'a');
        boolean boolean19 = client0.cancelBooking();
        ParkingSystem.Booking booking20 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str1, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Jane" + "'", str2, "Jane");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(booking20);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        checkInManager1.refundMessage = "staff";
        boolean boolean7 = checkInManager1.checkIn("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean9 = checkInManager1.checkOut("Card number should be 16 digits");
        checkInManager1.refundMessage = "CLT-30fd593b-dedd-41b3-a919-c48700301f41";
        boolean boolean13 = checkInManager1.checkIn("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        checkInManager1.refundMessage = "qPYDfDnbtD";
        boolean boolean17 = checkInManager1.checkOut("ST001");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        ParkingSystem.SpaceManager spaceManager5 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertNotNull(spaceManager5);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        java.lang.String str2 = client0.getName();
        java.lang.String str3 = client0.getClientType();
        java.lang.String str4 = client0.getClientType();
        boolean boolean5 = client0.cancelBooking();
        java.lang.String str6 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded total cost of $1.0" + "'", str1, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Refunded total cost of $1.0" + "'", str2, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str3, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str4, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "staff" + "'", str6, "staff");
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        boolean boolean15 = paymentManager0.refundTotalCost((double) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean26 = bookingManager0.confirmBooking("empty", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Refunded total cost of $1.0", (int) (byte) 1, "Card number should be 16 digits", 32, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled");
        ParkingSystem.BookingManager bookingManager27 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager27);
        ParkingSystem.SpaceManager spaceManager29 = bookingManager27.getSpaceManager();
        double double32 = bookingManager27.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit33 = new ParkingSystem.DebitOrCredit();
        bookingManager27.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        boolean boolean39 = debitOrCredit33.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str40 = debitOrCredit33.getPaymentMessage();
        boolean boolean43 = debitOrCredit33.validateCard("pass", (double) 100.0f);
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        double double46 = bookingManager0.getHourlyRate("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.CheckInManager checkInManager47 = new ParkingSystem.CheckInManager(bookingManager0);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spaceManager29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 165.0d + "'", double32 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Card number should be 16 digits" + "'", str40, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 15.0d + "'", double46 == 15.0d);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.BookingManager bookingManager19 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.Booking booking21 = parkingSpaceFacade17.getBookingDetails("");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Refunded total cost of $1.0" + "'", str6, "Refunded total cost of $1.0");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(bookingManager19);
        org.junit.Assert.assertNull(booking21);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy16 = null;
        paymentManager0.setStrategy(strategy16);
        java.lang.String str18 = paymentManager0.refundMessage;
        paymentManager0.refundMessage = "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c";
        java.lang.String str21 = paymentManager0.refundMessage;
        boolean boolean23 = paymentManager0.refundTotalCost((double) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str18, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c" + "'", str21, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean5 = parkingSpaceFacade0.extendBooking("staff", (int) (short) -1);
        ParkingSystem.BookingManager bookingManager6 = parkingSpaceFacade0.getBookingManager();
        boolean boolean10 = parkingSpaceFacade0.editBooking("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Refunded total cost of $1.0", 2);
        boolean boolean20 = parkingSpaceFacade0.confirmBooking("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) (short) 1, "433f3d1f-f758-4ae3-972b-7fb179aedfd7", 100, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(bookingManager6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj20 = parkingSpaceProxy17.login("empty", "Jane");
        parkingSpaceProxy17.validateClient("Jane");
        parkingSpaceProxy17.toggleSpace("", "staff", false);
        accountRegistry15.assignProxyToManager("pass", parkingSpaceProxy17);
        boolean boolean33 = parkingSpaceProxy17.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled", "Refunded total cost of $1.0", "", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.assignProxy(parkingSpaceProxy17);
        ParkingSystem.AccountRegistry accountRegistry38 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager39 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry38);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy41 = null;
        accountRegistry38.assignProxyToManager("disabled", parkingSpaceProxy41);
        ParkingSystem.AccountRegistry accountRegistry47 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager48 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry47);
        java.lang.String str49 = superManager48.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry53 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager54 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry53);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy56 = null;
        accountRegistry53.assignProxyToManager("disabled", parkingSpaceProxy56);
        superManager48.registry = accountRegistry53;
        ParkingSystem.AccountRegistry accountRegistry59 = superManager48.getRegistry();
        ParkingSystem.Manager manager60 = accountRegistry59.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy62 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry63 = parkingSpaceProxy62.getRegistry();
        boolean boolean69 = parkingSpaceProxy62.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy62.toggleLot("hi!", false);
        accountRegistry59.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy62);
        accountRegistry38.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy62);
        parkingSpaceProxy62.displayPendingValidations();
        boolean boolean77 = parkingSpaceProxy62.cancelBooking("Refunded total cost of $-1.0");
        boolean boolean79 = parkingSpaceProxy62.checkIn("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        boolean boolean81 = parkingSpaceProxy62.cancelBooking("empty");
        user0.assignProxy(parkingSpaceProxy62);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(superManager39);
        org.junit.Assert.assertNotNull(superManager48);
// flaky "38) test1700(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str49, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(superManager54);
        org.junit.Assert.assertNotNull(accountRegistry59);
        org.junit.Assert.assertNotNull(manager60);
        org.junit.Assert.assertNotNull(accountRegistry63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean21 = client0.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str22 = client0.getName();
        boolean boolean24 = client0.extendBooking((int) ' ');
        boolean boolean25 = client0.getIsValidated();
        boolean boolean26 = client0.checkOut();
        boolean boolean27 = client0.checkOut();
        boolean boolean28 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        ParkingSystem.ParkingLot parkingLot53 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking55 = null;
        boolean boolean56 = parkingLot53.assignBooking(0, booking55);
        boolean boolean58 = parkingLot53.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator59 = parkingLot53.getIterator();
        parkingLot53.removeBooking(0);
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLot53.getParkingSpace(0);
        java.lang.String str64 = disabled0.scanSpace(parkingSpace63);
        ParkingSystem.ParkingLot parkingLot66 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking68 = null;
        boolean boolean69 = parkingLot66.assignBooking(0, booking68);
        boolean boolean71 = parkingLot66.isSpaceAvailable((int) '#');
        boolean boolean73 = parkingLot66.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator74 = parkingLot66.getIterator();
        boolean boolean75 = parkingLot66.isEnabled();
        boolean boolean77 = parkingLot66.isSpaceAvailable((int) (short) -1);
        ParkingSystem.ParkingSpace parkingSpace79 = parkingLot66.getParkingSpace(32);
        java.lang.String str80 = disabled0.scanSpace(parkingSpace79);
        ParkingSystem.ParkingLot parkingLot82 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking84 = null;
        boolean boolean85 = parkingLot82.assignBooking(0, booking84);
        boolean boolean87 = parkingLot82.isSpaceAvailable((int) '#');
        boolean boolean89 = parkingLot82.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator90 = parkingLot82.getIterator();
        boolean boolean91 = parkingLot82.isEnabled();
        boolean boolean93 = parkingLot82.isSpaceAvailable((int) (short) -1);
        ParkingSystem.ParkingSpace parkingSpace95 = parkingLot82.getParkingSpace(32);
        java.lang.String str96 = disabled0.scanSpace(parkingSpace95);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator59);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "disabled" + "'", str64, "disabled");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(parkingSpace79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "disabled" + "'", str80, "disabled");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(parkingSpace95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "disabled" + "'", str96, "disabled");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5");
        java.lang.String str19 = debitOrCredit6.getPaymentMessage();
        boolean boolean24 = debitOrCredit6.processPayment("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", (double) 10, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-55105d92-54d6-44d2-965a-736022b7f7cd");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Card number should be 16 digits" + "'", str19, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Disabled disabled13 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace14 = null;
        java.lang.String str15 = disabled13.scanSpace(parkingSpace14);
        ParkingSystem.ParkingSpace parkingSpace16 = null;
        java.lang.String str17 = disabled13.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) disabled13);
        ParkingSystem.SpaceState spaceState19 = parkingSpace10.getState();
        int int20 = parkingSpace10.getSpaceId();
        boolean boolean21 = parkingSpace10.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertNotNull(spaceState19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.Enabled enabled1 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot3 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking5 = null;
        boolean boolean6 = parkingLot3.assignBooking(0, booking5);
        boolean boolean8 = parkingLot3.isSpaceAvailable((int) '#');
        boolean boolean10 = parkingLot3.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot3.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking13 = parkingSpace12.getCurrentBooking();
        parkingSpace12.removeBooking();
        java.lang.String str15 = enabled1.scanSpace(parkingSpace12);
        java.lang.String str16 = parkingSpace12.scanSpace();
        java.lang.String str17 = disabled0.scanSpace(parkingSpace12);
        java.lang.String str18 = parkingSpace12.scanSpace();
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int27 = booking26.getDuration();
        java.lang.String str28 = booking26.getClientId();
        boolean boolean29 = parkingSpace12.assignBooking(booking26);
        double double30 = booking26.getTotalCost();
        int int31 = booking26.getDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "empty" + "'", str15, "empty");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "empty" + "'", str16, "empty");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "empty" + "'", str18, "empty");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "staff" + "'", str28, "staff");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (short) 1);
        ParkingSystem.ParkingLot parkingLot7 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking9 = null;
        boolean boolean10 = parkingLot7.assignBooking(0, booking9);
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot7.assignBooking(1, booking12);
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking30 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean31 = parkingLot16.assignBooking((int) (short) -1, booking30);
        java.lang.String str32 = booking30.getLotId();
        boolean boolean33 = parkingLot7.assignBooking(0, booking30);
        booking30.setCheckedIn(true);
        java.lang.String str36 = booking30.getLotId();
        boolean boolean37 = spaceManager0.assignBooking("SRiN5ev00N", (int) (short) 1, booking30);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "jane" + "'", str32, "jane");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "jane" + "'", str36, "jane");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getClientId();
        boolean boolean11 = client0.getIsValidated();
        boolean boolean12 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        boolean boolean17 = accountRegistry14.requiresValidation("disabled");
        int int18 = accountRegistry14.getManagersSize();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.getRegistry();
        superManager4.registry = accountRegistry20;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade23 = parkingSpaceProxy22.getFacade();
        superManager4.assignProxy(parkingSpaceProxy22);
        ParkingSystem.AccountRegistry accountRegistry25 = superManager4.getRegistry();
        accountRegistry25.validateClient("86z9Z9e0MN");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj32 = parkingSpaceProxy29.login("empty", "Jane");
        parkingSpaceProxy29.validateClient("Jane");
        parkingSpaceProxy29.toggleSpace("", "staff", false);
        boolean boolean40 = parkingSpaceProxy29.cancelBooking("Jane");
        accountRegistry25.assignProxyToClient("", parkingSpaceProxy29);
        org.junit.Assert.assertNotNull(superManager4);
// flaky "39) test1708(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
// flaky "24) test1708(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str6, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(parkingSpaceFacade23);
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean3 = parkingSpaceFacade0.cancelBooking("qPYDfDnbtD");
        java.lang.String str6 = parkingSpaceFacade0.scanSpace("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        ParkingSystem.BookingManager bookingManager7 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertNotNull(bookingManager7);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        boolean boolean23 = bookingManager0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "", "Jane");
        ParkingSystem.AccountRegistry accountRegistry24 = bookingManager0.getAccountRegistry();
        ParkingSystem.Client client26 = accountRegistry24.getClient("");
        ParkingSystem.Client client28 = accountRegistry24.getClient("CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertNull(client28);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        accountRegistry1.assignProxyToManager("pass", parkingSpaceProxy3);
        ParkingSystem.Client client15 = accountRegistry1.getClient("");
        ParkingSystem.Client client17 = ParkingSystem.Client.getInstance();
        java.lang.String str18 = client17.getName();
        client17.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str27 = client17.getUsername();
        java.lang.String str28 = client17.getPassword();
        java.lang.String str29 = client17.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = null;
        client17.assignProxy(parkingSpaceProxy30);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj35 = parkingSpaceProxy32.login("empty", "Jane");
        client17.assignProxy(parkingSpaceProxy32);
        parkingSpaceProxy32.validateClient("13b04414-31a5-407f-8ea3-fba4613c73d1");
        accountRegistry1.assignProxyToClient("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", parkingSpaceProxy32);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertNotNull(client17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "disabled" + "'", str28, "disabled");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        parkingSpaceProxy0.addParkingLot("empty");
        boolean boolean8 = parkingSpaceProxy0.cancelBooking("Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        java.lang.String str4 = client0.getName();
        java.lang.String str5 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean6 = parkingSpaceFacade0.editBooking("Jane", "staff", (int) (short) 100);
        ParkingSystem.SpaceManager spaceManager7 = parkingSpaceFacade0.getSpaceManager();
        spaceManager7.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spaceManager7);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.paymentMessage = "staff";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (short) 0);
        boolean boolean7 = paymentManager0.refundWithoutDeposit((double) (-1.0f), (double) (short) -1);
        java.lang.String str8 = paymentManager0.refundMessage;
        paymentManager0.paymentMessage = "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841";
        paymentManager0.refundMessage = "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc";
        paymentManager0.refundMessage = "CLT-390234b0-d56e-4275-bd7b-122280609c69";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Refunded without deposit ($0.0)" + "'", str8, "Refunded without deposit ($0.0)");
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double18 = bookingManager0.calculateCost("Paid $ 10.0 with Mobile Pay", (int) (byte) 1);
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        java.util.List<ParkingSystem.Client> clientList20 = accountRegistry19.displayPendingValidations();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 30.0d + "'", double18 == 30.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(clientList20);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj33 = parkingSpaceProxy30.login("empty", "Jane");
        parkingSpaceProxy30.validateClient("Jane");
        parkingSpaceProxy30.toggleSpace("", "staff", false);
        accountRegistry28.assignProxyToManager("pass", parkingSpaceProxy30);
        boolean boolean46 = parkingSpaceProxy30.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled", "Refunded total cost of $1.0", "", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy30;
        java.lang.Object obj48 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = user0.parkingProxy;
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(parkingSpaceProxy49);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.BookingManager bookingManager19 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.SpaceManager spaceManager20 = bookingManager19.getSpaceManager();
        double double22 = bookingManager19.getDeposit("02659ad3-0b5c-4c48-a915-a466f2b50775");
        ParkingSystem.MobilePay mobilePay23 = new ParkingSystem.MobilePay();
        boolean boolean28 = mobilePay23.processPayment("hi!", (-1.0d), "", "");
        java.lang.String str29 = mobilePay23.getPaymentMessage();
        bookingManager19.setPaymentStrategy((ParkingSystem.Strategy) mobilePay23);
        java.lang.String str31 = mobilePay23.getPaymentMessage();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str6, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(bookingManager19);
        org.junit.Assert.assertNotNull(spaceManager20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str29, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str31, "Paid $ -1.0 with Mobile Pay");
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        java.lang.String str5 = parkingSpaceFacade0.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager6 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean10 = parkingSpaceFacade0.editBooking("Refunded deposit of $0.0", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertNotNull(checkInManager6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap7 = accountRegistry6.getManagers();
        accountRegistry6.validateClient("hi!");
        boolean boolean15 = accountRegistry6.registerClient("jane", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ 15.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "40) test1720(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str5, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.Client client11 = ParkingSystem.Client.getInstance();
        java.lang.String str12 = client11.getName();
        client11.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry16 = parkingSpaceProxy15.getRegistry();
        boolean boolean18 = parkingSpaceProxy15.checkIn("");
        client11.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = parkingSpaceProxy15.getFacade();
        boolean boolean22 = parkingSpaceFacade20.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager23 = parkingSpaceFacade20.getBookingManager();
        ParkingSystem.BookingManager bookingManager24 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager25 = new ParkingSystem.CheckInManager(bookingManager24);
        ParkingSystem.SpaceManager spaceManager26 = bookingManager24.getSpaceManager();
        double double29 = bookingManager24.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit30 = new ParkingSystem.DebitOrCredit();
        bookingManager24.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit30);
        boolean boolean36 = debitOrCredit30.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str37 = debitOrCredit30.getPaymentMessage();
        boolean boolean40 = debitOrCredit30.validateCard("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (double) (short) 1);
        bookingManager23.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit30);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit30);
        boolean boolean47 = paymentManager0.processPayment("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", (double) (short) 10, "Paid $ -1.0 with Mobile Pay", "SRiN5ev00N");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(client11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "jane" + "'", str12, "jane");
        org.junit.Assert.assertNotNull(accountRegistry16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(bookingManager23);
        org.junit.Assert.assertNotNull(spaceManager26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 165.0d + "'", double29 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Card number should be 16 digits" + "'", str37, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = bookingManager0.extendBooking("jane", (int) (byte) 100, "hi!", "jane");
        ParkingSystem.SpaceManager spaceManager7 = bookingManager0.getSpaceManager();
        spaceManager7.toggleSpace("Paid $ 1.0 with Mobile Pay", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spaceManager7);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Jane", "Refunded without deposit ($-42.0)", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (short) 10, "Paid $ -1.0 with Mobile Pay", (double) (short) 10);
        boolean boolean8 = booking7.isCheckedIn();
        double double9 = booking7.getTotalCost();
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime10 = booking7.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text '7aecb00c-028c-4dcf-96cc-14d25bd709ab' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        double double21 = bookingManager0.getDeposit("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.SpaceManager spaceManager22 = bookingManager0.getSpaceManager();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager22);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        java.lang.String str13 = superManager11.getManagerId();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
// flaky "41) test1725(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str13, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.CSVManager cSVManager14 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList16 = cSVManager14.readCSV("");
        java.util.List<java.lang.String[]> strArrayList18 = cSVManager14.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap19 = null;
        cSVManager14.loadParkingLots(strMap19);
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.Manager manager26 = superManager25.autoGenerateManager();
        cSVManager14.saveManager((ParkingSystem.Manager) superManager25);
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        spaceManager28.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager28.getParkingLots();
        cSVManager14.loadParkingLots(strMap47);
        ParkingSystem.SpaceManager spaceManager49 = new ParkingSystem.SpaceManager();
        boolean boolean52 = spaceManager49.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str55 = spaceManager49.scanSpace("disabled", "");
        spaceManager49.addParkingLot("hi!");
        java.lang.String str60 = spaceManager49.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap61 = spaceManager49.getParkingLots();
        cSVManager14.saveParkingLots(strMap61);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade63 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str66 = parkingSpaceFacade63.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager67 = parkingSpaceFacade63.getSpaceManager();
        spaceManager67.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap70 = spaceManager67.getParkingLots();
        cSVManager14.saveParkingLots(strMap70);
        cSVManager0.loadParkingLots(strMap70);
        ParkingSystem.Client client73 = ParkingSystem.Client.getInstance();
        java.lang.String str74 = client73.getClientType();
        java.lang.String str75 = client73.getName();
        cSVManager0.saveClient(client73);
        java.lang.String[] strArray77 = cSVManager0.loadSuperManager();
        java.util.List<java.lang.String[]> strArrayList79 = cSVManager0.readCSV("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList80 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(strArrayList16);
        org.junit.Assert.assertNotNull(strArrayList18);
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(manager26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "disabled" + "'", str60, "disabled");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertNotNull(spaceManager67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(client73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7" + "'", str74, "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "jane" + "'", str75, "jane");
        org.junit.Assert.assertNotNull(strArray77);
// flaky "42) test1726(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray77, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList79);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        boolean boolean14 = accountRegistry11.requiresValidation("disabled");
        int int15 = accountRegistry11.getManagersSize();
        boolean boolean21 = accountRegistry11.registerClient("Paid $ 10.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        accountRegistry11.validateClient("staff");
        boolean boolean29 = accountRegistry11.registerClient("Refunded without deposit ($-96.0)", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        ParkingSystem.SuperManager superManager30 = ParkingSystem.SuperManager.createFromCSV("qPYDfDnbtD", "hi!", "", accountRegistry11);
        cSVManager0.saveManager((ParkingSystem.Manager) superManager30);
        java.lang.String str32 = superManager30.getName();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(superManager30);
// flaky "43) test1727(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tbHxuilT" + "'", str32, "tbHxuilT");
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.SpaceManager spaceManager14 = new ParkingSystem.SpaceManager();
        boolean boolean17 = spaceManager14.isSpaceAvailable("hi!", (int) '#');
        spaceManager14.toggleLot("disabled", false);
        ParkingSystem.Booking booking30 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean31 = spaceManager14.assignBooking("empty", (int) (short) 0, booking30);
        spaceManager14.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager14.getParkingLots();
        cSVManager0.loadParkingLots(strMap33);
        ParkingSystem.SpaceManager spaceManager35 = new ParkingSystem.SpaceManager();
        boolean boolean38 = spaceManager35.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str41 = spaceManager35.scanSpace("disabled", "");
        spaceManager35.addParkingLot("hi!");
        java.lang.String str46 = spaceManager35.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager35.getParkingLots();
        cSVManager0.saveParkingLots(strMap47);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade49 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str52 = parkingSpaceFacade49.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager53 = parkingSpaceFacade49.getSpaceManager();
        spaceManager53.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap56 = spaceManager53.getParkingLots();
        cSVManager0.saveParkingLots(strMap56);
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        spaceManager58.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap79 = spaceManager58.getParkingLots();
        cSVManager0.saveParkingLots(strMap79);
        java.lang.String[] strArray81 = cSVManager0.loadSuperManager();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList82 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertNotNull(spaceManager53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strArray81);
// flaky "44) test1728(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray81, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        checkInManager1.refundMessage = "staff";
        boolean boolean7 = checkInManager1.checkIn("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean9 = checkInManager1.checkOut("Card number should be 16 digits");
        checkInManager1.refundMessage = "CLT-30fd593b-dedd-41b3-a919-c48700301f41";
        boolean boolean13 = checkInManager1.checkIn("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        java.lang.String str5 = paymentManager0.refundMessage;
        boolean boolean7 = paymentManager0.refundDeposit((double) ' ');
        java.lang.String str8 = paymentManager0.paymentMessage;
        boolean boolean11 = paymentManager0.refundWithoutDeposit((double) (byte) -1, (double) (-1L));
        boolean boolean16 = paymentManager0.processPayment("Paid $ 10.0 with Mobile Pay", (double) (byte) 0, "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "86z9Z9e0MN");
        boolean boolean19 = paymentManager0.refundWithoutDeposit(795.0d, 795.0d);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str5, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        boolean boolean20 = parkingSpaceProxy3.register("jane", "jane", "Jane", "hi!", "disabled");
        accountRegistry1.assignProxyToManager("empty", parkingSpaceProxy3);
        ParkingSystem.Client client23 = accountRegistry1.getClient("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.User user25 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj29 = parkingSpaceProxy26.login("empty", "Jane");
        parkingSpaceProxy26.validateClient("Jane");
        parkingSpaceProxy26.toggleSpace("", "staff", false);
        boolean boolean37 = parkingSpaceProxy26.cancelBooking("");
        user25.assignProxy(parkingSpaceProxy26);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy39 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry40 = parkingSpaceProxy39.getRegistry();
        boolean boolean46 = parkingSpaceProxy39.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean50 = parkingSpaceProxy39.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user25.parkingProxy = parkingSpaceProxy39;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy52 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry53 = parkingSpaceProxy52.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy55 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj58 = parkingSpaceProxy55.login("empty", "Jane");
        parkingSpaceProxy55.validateClient("Jane");
        parkingSpaceProxy55.toggleSpace("", "staff", false);
        accountRegistry53.assignProxyToManager("pass", parkingSpaceProxy55);
        boolean boolean71 = parkingSpaceProxy55.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled", "Refunded total cost of $1.0", "", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user25.parkingProxy = parkingSpaceProxy55;
        ParkingSystem.Booking booking74 = parkingSpaceProxy55.getBookingDetails("Refunded total cost of $1.0");
        accountRegistry1.assignProxyToClient("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", parkingSpaceProxy55);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(client23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(accountRegistry40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(accountRegistry53);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(booking74);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        boolean boolean13 = parkingSpaceProxy3.editBooking("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (short) 0);
        parkingSpaceProxy3.toggleSpace("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "empty", true);
        parkingSpaceProxy3.validateClient("02659ad3-0b5c-4c48-a915-a466f2b50775");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        double double18 = bookingManager0.getDeposit("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        double double21 = bookingManager0.getDeposit("Refunded total cost of $1.0");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 15.0d + "'", double18 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        ParkingSystem.SpaceManager spaceManager20 = new ParkingSystem.SpaceManager();
        boolean boolean23 = spaceManager20.isSpaceAvailable("hi!", (int) '#');
        spaceManager20.toggleLot("disabled", false);
        ParkingSystem.Booking booking36 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean37 = spaceManager20.assignBooking("empty", (int) (short) 0, booking36);
        boolean boolean38 = spaceManager0.assignBooking("disabled", (int) (byte) 0, booking36);
        spaceManager0.toggleSpace("Jane", "Refunded total cost of $0.0", false);
        spaceManager0.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) (byte) 1);
        boolean boolean2 = parkingSpace1.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        boolean boolean23 = bookingManager0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "", "Jane");
        ParkingSystem.AccountRegistry accountRegistry24 = bookingManager0.getAccountRegistry();
        int int25 = accountRegistry24.getManagersSize();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking(0);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(0);
        ParkingSystem.Booking booking20 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double21 = booking20.getTotalCost();
        java.lang.String str22 = booking20.getLotId();
        boolean boolean23 = booking20.isCheckedIn();
        boolean boolean24 = booking20.isCheckedIn();
        java.lang.String str25 = booking20.getClientId();
        java.lang.String str26 = booking20.getLicensePlate();
        boolean boolean27 = parkingLot1.assignBooking(10, booking20);
        ParkingSystem.ParkingLotIterator parkingLotIterator28 = parkingLot1.getIterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "jane" + "'", str22, "jane");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "staff" + "'", str25, "staff");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator28);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.lang.String str8 = superManager7.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = superManager7.registry;
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap10 = accountRegistry9.getManagers();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("Paid $ 100.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Paid $ -1.0 with Mobile Pay", accountRegistry9);
        superManager11.setManagerInfo("CLT-390234b0-d56e-4275-bd7b-122280609c69", "Refunded total cost of $-1.0", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertNotNull(superManager7);
// flaky "45) test1738(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f" + "'", str8, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(superManager11);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean4 = parkingSpaceFacade0.cancelBooking("jane");
        boolean boolean7 = parkingSpaceFacade0.extendBooking("hi!", (-1));
        parkingSpaceFacade0.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        parkingSpaceFacade0.toggleSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 10.0 with Mobile Pay", true);
        ParkingSystem.SpaceManager spaceManager15 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager16 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str27 = booking26.getLicensePlate();
        java.lang.String str28 = booking26.getStartTime();
        boolean boolean29 = spaceManager16.assignBooking("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", 100, booking26);
        boolean boolean30 = booking26.isCheckedIn();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(spaceManager15);
        org.junit.Assert.assertNotNull(spaceManager16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "disabled" + "'", str27, "disabled");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Jane" + "'", str28, "Jane");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.CSVManager cSVManager14 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList16 = cSVManager14.readCSV("");
        cSVManager14.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap20 = null;
        cSVManager14.loadParkingLots(strMap20);
        ParkingSystem.Client client22 = ParkingSystem.Client.getInstance();
        java.lang.String str23 = client22.getClientType();
        cSVManager14.saveClient(client22);
        java.util.List<java.lang.String[]> strArrayList26 = cSVManager14.readCSV("Jane");
        ParkingSystem.SpaceManager spaceManager27 = new ParkingSystem.SpaceManager();
        boolean boolean30 = spaceManager27.isSpaceAvailable("hi!", (int) '#');
        spaceManager27.toggleLot("disabled", false);
        ParkingSystem.Booking booking43 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean44 = spaceManager27.assignBooking("empty", (int) (short) 0, booking43);
        spaceManager27.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap46 = spaceManager27.getParkingLots();
        cSVManager14.loadParkingLots(strMap46);
        cSVManager0.saveParkingLots(strMap46);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(strArrayList16);
        org.junit.Assert.assertNotNull(client22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(strArrayList26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.Client client27 = ParkingSystem.Client.getInstance();
        java.lang.String str28 = client27.getClientType();
        java.lang.String str29 = client27.getPassword();
        user0.user = client27;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = null;
        user0.parkingProxy = parkingSpaceProxy31;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj35 = user0.login("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.login(String, String)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(client27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "empty" + "'", str28, "empty");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str29, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 0.0d, "disabled", "");
        boolean boolean21 = debitOrCredit6.validateCard("empty", (double) '4');
        java.lang.String str22 = debitOrCredit6.getPaymentMessage();
        boolean boolean25 = debitOrCredit6.validateCard("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6", 60.0d);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Card number should be 16 digits" + "'", str22, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace4 = parkingLot1.getParkingSpace((int) (byte) -1);
        ParkingSystem.SpaceState spaceState5 = parkingSpace4.getState();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertNotNull(spaceState5);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.lang.String[] strArray3 = cSVManager0.loadSuperManager();
        ParkingSystem.AccountRegistry accountRegistry7 = null;
        ParkingSystem.SuperManager superManager8 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry7);
        ParkingSystem.Manager manager9 = superManager8.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry11 = parkingSpaceProxy10.getRegistry();
        java.lang.String str14 = parkingSpaceProxy10.scanSpace("empty", "hi!");
        parkingSpaceProxy10.addParkingLot("empty");
        parkingSpaceProxy10.addParkingLot("");
        superManager8.assignProxy(parkingSpaceProxy10);
        ParkingSystem.Manager manager20 = superManager8.autoGenerateManager();
        java.lang.String str21 = manager20.getPassword();
        manager20.displayPendingValidations();
        cSVManager0.saveManager(manager20);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArray3);
// flaky "46) test1744(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray3, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(superManager8);
        org.junit.Assert.assertNotNull(manager9);
        org.junit.Assert.assertNotNull(accountRegistry11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertNotNull(manager20);
// flaky "25) test1744(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "5XQfkf24zK" + "'", str21, "5XQfkf24zK");
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str12 = mobilePay6.getPaymentMessage();
        boolean boolean17 = mobilePay6.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str18 = mobilePay6.getPaymentMessage();
        java.lang.String str19 = mobilePay6.getPaymentMessage();
        java.lang.String str20 = mobilePay6.getPaymentMessage();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str19, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str20, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.AccountRegistry accountRegistry4 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager5 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry4);
        boolean boolean7 = accountRegistry4.requiresValidation("disabled");
        int int8 = accountRegistry4.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj13 = parkingSpaceProxy10.login("empty", "Jane");
        parkingSpaceProxy10.validateClient("Jane");
        parkingSpaceProxy10.toggleSpace("", "staff", false);
        boolean boolean21 = parkingSpaceProxy10.cancelBooking("Jane");
        accountRegistry4.assignProxyToClient("pass", parkingSpaceProxy10);
        boolean boolean28 = parkingSpaceProxy10.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean34 = parkingSpaceProxy10.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        user0.parkingProxy = parkingSpaceProxy10;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = user0.parkingProxy;
        org.junit.Assert.assertNotNull(superManager5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy36);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        client0.setClientInfo("Jane", "", "pass", "pass", "pass", "hi!", true);
        boolean boolean10 = client0.checkOut();
        boolean boolean11 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Jane", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 100, "jane", (int) (short) 1, "pass", (double) 10);
        java.lang.String str8 = booking7.getLotId();
        booking7.setStartTime("2afd610d-a8cb-413a-bbee-7927f86b526c");
        java.lang.String str11 = booking7.getLicensePlate();
        booking7.setDuration(1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str8, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pass" + "'", str11, "pass");
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        boolean boolean41 = parkingSpaceFacade33.editBooking("Jane", "Paid $ 10.0 with Mobile Pay", (int) ' ');
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager3 = parkingSpaceFacade1.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager3.getParkingLots();
        cSVManager0.loadParkingLots(strMap4);
        ParkingSystem.CSVManager cSVManager6 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager8 = parkingSpaceFacade7.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager9 = parkingSpaceFacade7.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap10 = spaceManager9.getParkingLots();
        cSVManager6.loadParkingLots(strMap10);
        java.lang.String[] strArray12 = cSVManager6.loadSuperManager();
        ParkingSystem.CSVManager cSVManager13 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray14 = cSVManager13.loadSuperManager();
        java.lang.String[] strArray15 = cSVManager13.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade16 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager17 = parkingSpaceFacade16.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap18 = spaceManager17.getParkingLots();
        cSVManager13.saveParkingLots(strMap18);
        cSVManager6.saveParkingLots(strMap18);
        cSVManager0.loadParkingLots(strMap18);
        java.lang.String[] strArray22 = cSVManager0.loadSuperManager();
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(checkInManager8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strArray12);
// flaky "47) test1750(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray12, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray14);
// flaky "26) test1750(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray14, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray15);
// flaky "14) test1750(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray15, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strArray22);
// flaky "8) test1750(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray22, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        parkingLot1.setEnabled(true);
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        ParkingSystem.Booking booking17 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str18 = booking17.getLotId();
        java.lang.String str19 = booking17.getStartTime();
        boolean boolean20 = parkingLot1.assignBooking(10, booking17);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "jane" + "'", str18, "jane");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Jane" + "'", str19, "Jane");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean35 = parkingSpaceProxy14.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry12.assignProxyToManager("empty", parkingSpaceProxy14);
        boolean boolean38 = accountRegistry12.requiresValidation("lL3e2yIMXI");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        boolean boolean20 = bookingManager18.cancelBooking("disabled");
        double double22 = bookingManager18.getHourlyRate("disabled");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap23 = bookingManager18.getActiveBookings();
        boolean boolean25 = bookingManager18.cancelBooking("CLT-390234b0-d56e-4275-bd7b-122280609c69");
        boolean boolean35 = bookingManager18.confirmBooking("Jane", "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "ST001", "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc", (int) (short) 1, "CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4", (int) (short) 1, "8ca2ec61-774c-409d-89d5-5b9171b40497", "CLT-45a3d895-9bc3-45d3-9068-d4559eae3183");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean5 = parkingSpaceFacade0.extendBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (short) 0);
        ParkingSystem.BookingManager bookingManager6 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(bookingManager6);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceFacade9.toggleLot("ST001", false);
        ParkingSystem.Booking booking14 = parkingSpaceFacade9.getBookingDetails("3b453211-7dd1-4452-8741-a206711c1217");
        boolean boolean16 = parkingSpaceFacade9.checkOut("");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.SpaceManager spaceManager14 = new ParkingSystem.SpaceManager();
        boolean boolean17 = spaceManager14.isSpaceAvailable("hi!", (int) '#');
        spaceManager14.toggleLot("disabled", false);
        ParkingSystem.Booking booking30 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean31 = spaceManager14.assignBooking("empty", (int) (short) 0, booking30);
        spaceManager14.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager14.getParkingLots();
        cSVManager0.loadParkingLots(strMap33);
        ParkingSystem.SpaceManager spaceManager35 = new ParkingSystem.SpaceManager();
        boolean boolean38 = spaceManager35.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str41 = spaceManager35.scanSpace("disabled", "");
        spaceManager35.addParkingLot("hi!");
        java.lang.String str46 = spaceManager35.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap47 = spaceManager35.getParkingLots();
        cSVManager0.saveParkingLots(strMap47);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade49 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str52 = parkingSpaceFacade49.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager53 = parkingSpaceFacade49.getSpaceManager();
        spaceManager53.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap56 = spaceManager53.getParkingLots();
        cSVManager0.saveParkingLots(strMap56);
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        spaceManager58.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap79 = spaceManager58.getParkingLots();
        cSVManager0.saveParkingLots(strMap79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList81 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertNotNull(spaceManager53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        java.lang.Object obj18 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.Client client20 = ParkingSystem.Client.getInstance();
        java.lang.String str21 = client20.getName();
        client20.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry25 = parkingSpaceProxy24.getRegistry();
        boolean boolean27 = parkingSpaceProxy24.checkIn("");
        client20.assignProxy(parkingSpaceProxy24);
        boolean boolean29 = client20.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        client20.assignProxy(parkingSpaceProxy30);
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy30.getRegistry();
        boolean boolean34 = parkingSpaceProxy30.checkIn("hi!");
        user0.assignProxy(parkingSpaceProxy30);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean38 = parkingSpaceProxy36.cancelBooking("pass");
        user0.parkingProxy = parkingSpaceProxy36;
        ParkingSystem.MobilePay mobilePay40 = new ParkingSystem.MobilePay();
        java.lang.String str41 = mobilePay40.getPaymentMessage();
        boolean boolean46 = mobilePay40.processPayment("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", (double) 10, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        java.lang.String str47 = mobilePay40.getPaymentMessage();
        user0.user = mobilePay40;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = null;
        user0.assignProxy(parkingSpaceProxy49);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNotNull(client20);
// flaky "48) test1757(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Jane" + "'", str21, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str47, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = parkingSpaceProxy15.getFacade();
        parkingSpaceFacade20.addParkingLot("lL3e2yIMXI");
        org.junit.Assert.assertNotNull(client0);
// flaky "49) test1758(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(parkingSpaceFacade20);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("89de8237-29df-4908-9de4-6dc1ce90de94", "Paid $ -1.0 with Mobile Pay", "hi!", "Refunded deposit of $0.0", 32, "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", 0, "Jane", "CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        ParkingSystem.DebitOrCredit debitOrCredit21 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit21);
        java.lang.String str23 = debitOrCredit21.getPaymentMessage();
        boolean boolean28 = debitOrCredit21.processPayment("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", (double) (short) 1, "13b04414-31a5-407f-8ea3-fba4613c73d1", "tbHxuilT");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking(0);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(0);
        ParkingSystem.ParkingLotIterator parkingLotIterator12 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot1.getParkingSpace((int) '4');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNotNull(parkingLotIterator12);
        org.junit.Assert.assertNotNull(parkingSpace14);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime9 = booking7.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.toggleLot("", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = parkingSpaceProxy0.getFacade();
        ParkingSystem.Booking booking9 = parkingSpaceFacade7.getBookingDetails("jane");
        boolean boolean12 = parkingSpaceFacade7.extendBooking("Refunded without deposit ($1.0)", 52);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade7);
        org.junit.Assert.assertNull(booking9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLotIterator parkingLotIterator8 = parkingLot1.getIterator();
        // The following exception was thrown during execution in test generation
        try {
            parkingLotIterator8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator8);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.Object obj4 = accountRegistry1.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        ParkingSystem.Client client6 = accountRegistry1.getClient("CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNull(client6);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) '4');
        ParkingSystem.SpaceState spaceState2 = parkingSpace1.getState();
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        parkingSpace1.setState((ParkingSystem.SpaceState) enabled3);
        org.junit.Assert.assertNotNull(spaceState2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.paymentMessage = "staff";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (short) 0);
        boolean boolean7 = paymentManager0.refundWithoutDeposit(0.0d, 15.0d);
        java.lang.String str8 = paymentManager0.refundMessage;
        boolean boolean11 = paymentManager0.refundWithoutDeposit((double) (byte) -1, (double) '4');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Refunded without deposit ($-15.0)" + "'", str8, "Refunded without deposit ($-15.0)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean25 = bookingManager0.confirmBooking("CLT-390234b0-d56e-4275-bd7b-122280609c69", "02659ad3-0b5c-4c48-a915-a466f2b50775", "5XQfkf24zK", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (byte) 100, "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", (int) '#', "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        ParkingSystem.Client client6 = ParkingSystem.Client.getInstance();
        java.lang.String str7 = client6.getName();
        client6.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str16 = client6.getUsername();
        java.lang.String str17 = client6.getPassword();
        java.lang.String str18 = client6.getClientType();
        boolean boolean19 = client6.getIsValidated();
        boolean boolean27 = client6.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str28 = client6.getName();
        cSVManager0.saveClient(client6);
        java.lang.String[] strArray30 = cSVManager0.loadSuperManager();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList31 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client6);
// flaky "50) test1769(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "jane" + "'", str7, "jane");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strArray30);
// flaky "27) test1769(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager3 = parkingSpaceFacade1.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager3.getParkingLots();
        cSVManager0.loadParkingLots(strMap4);
        ParkingSystem.CSVManager cSVManager6 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList8 = cSVManager6.readCSV("");
        java.util.List<java.lang.String[]> strArrayList10 = cSVManager6.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap11 = null;
        cSVManager6.loadParkingLots(strMap11);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade13 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager14 = parkingSpaceFacade13.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap15 = spaceManager14.getParkingLots();
        cSVManager6.loadParkingLots(strMap15);
        cSVManager0.loadParkingLots(strMap15);
        ParkingSystem.CSVManager cSVManager18 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray19 = cSVManager18.loadSuperManager();
        java.lang.String[] strArray20 = cSVManager18.loadSuperManager();
        ParkingSystem.Client client21 = ParkingSystem.Client.getInstance();
        java.lang.String str22 = client21.getName();
        client21.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy25 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry26 = parkingSpaceProxy25.getRegistry();
        boolean boolean28 = parkingSpaceProxy25.checkIn("");
        client21.assignProxy(parkingSpaceProxy25);
        boolean boolean30 = client21.cancelBooking();
        java.lang.String str31 = client21.getExtraId();
        java.lang.String str32 = client21.getName();
        client21.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager18.saveClient(client21);
        java.util.List<java.lang.String[]> strArrayList43 = cSVManager18.readCSV("Jane");
        ParkingSystem.AccountRegistry accountRegistry53 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager54 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry53);
        boolean boolean56 = accountRegistry53.requiresValidation("disabled");
        int int57 = accountRegistry53.getManagersSize();
        ParkingSystem.SuperManager superManager58 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry53);
        ParkingSystem.AccountRegistry accountRegistry59 = superManager58.getRegistry();
        accountRegistry59.validateClient("pass");
        ParkingSystem.SuperManager superManager62 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry59);
        cSVManager18.saveManager((ParkingSystem.Manager) superManager62);
        ParkingSystem.Client client64 = ParkingSystem.Client.getInstance();
        java.lang.String str65 = client64.getName();
        client64.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy68 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry69 = parkingSpaceProxy68.getRegistry();
        boolean boolean71 = parkingSpaceProxy68.checkIn("");
        client64.assignProxy(parkingSpaceProxy68);
        boolean boolean73 = client64.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy74 = new ParkingSystem.ParkingSpaceProxy();
        client64.assignProxy(parkingSpaceProxy74);
        ParkingSystem.Booking booking76 = client64.getBookingDetails();
        java.lang.String str77 = client64.getClientId();
        boolean boolean78 = client64.getIsValidated();
        cSVManager18.saveClient(client64);
        cSVManager0.saveClient(client64);
        boolean boolean83 = client64.editBooking("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", 0);
        java.lang.String str84 = client64.getUsername();
        client64.setValidated(true);
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strArrayList8);
        org.junit.Assert.assertNotNull(strArrayList10);
        org.junit.Assert.assertNotNull(spaceManager14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strArray19);
// flaky "51) test1770(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray19, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray20);
// flaky "28) test1770(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray20, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client21);
// flaky "15) test1770(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Jane" + "'", str22, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
// flaky "9) test1770(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ST001" + "'", str31, "ST001");
// flaky "5) test1770(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Jane" + "'", str32, "Jane");
        org.junit.Assert.assertNotNull(strArrayList43);
        org.junit.Assert.assertNotNull(superManager54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(superManager58);
        org.junit.Assert.assertNotNull(accountRegistry59);
        org.junit.Assert.assertNotNull(superManager62);
        org.junit.Assert.assertNotNull(client64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "empty" + "'", str65, "empty");
        org.junit.Assert.assertNotNull(accountRegistry69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(booking76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pass" + "'", str77, "pass");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Jane" + "'", str84, "Jane");
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        ParkingSystem.Manager manager5 = superManager4.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        java.lang.String str10 = parkingSpaceProxy6.scanSpace("empty", "hi!");
        parkingSpaceProxy6.addParkingLot("empty");
        parkingSpaceProxy6.addParkingLot("");
        superManager4.assignProxy(parkingSpaceProxy6);
        ParkingSystem.Manager manager16 = superManager4.autoGenerateManager();
        java.lang.String str17 = manager16.getPassword();
        java.lang.String str18 = manager16.getManagerId();
        manager16.validateClient("disabled");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(manager5);
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(manager16);
// flaky "52) test1771(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "iHAHREGIAH" + "'", str17, "iHAHREGIAH");
// flaky "29) test1771(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "848f508e-e1d2-4f02-9fc9-e95eee425d36" + "'", str18, "848f508e-e1d2-4f02-9fc9-e95eee425d36");
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        ParkingSystem.AccountRegistry accountRegistry16 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry16);
        ParkingSystem.AccountRegistry accountRegistry21 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry21);
        superManager17.registry = accountRegistry21;
        ParkingSystem.Manager manager24 = superManager17.autoGenerateManager();
        java.lang.String str25 = manager24.getManagerId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj35 = parkingSpaceProxy32.login("empty", "Jane");
        parkingSpaceProxy32.validateClient("Jane");
        parkingSpaceProxy32.toggleSpace("", "staff", false);
        accountRegistry30.assignProxyToManager("pass", parkingSpaceProxy32);
        ParkingSystem.Client client44 = accountRegistry30.getClient("");
        ParkingSystem.SuperManager superManager45 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry30);
        boolean boolean51 = accountRegistry30.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy53 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry54 = parkingSpaceProxy53.getRegistry();
        boolean boolean56 = parkingSpaceProxy53.checkIn("");
        parkingSpaceProxy53.toggleLot("", true);
        accountRegistry30.assignProxyToManager("", parkingSpaceProxy53);
        manager24.assignProxy(parkingSpaceProxy53);
        client0.assignProxy(parkingSpaceProxy53);
        parkingSpaceProxy53.validateClient("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(superManager22);
        org.junit.Assert.assertNotNull(manager24);
// flaky "53) test1772(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "8de59b10-a65c-4d90-b56c-a637505ce1de" + "'", str25, "8de59b10-a65c-4d90-b56c-a637505ce1de");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(client44);
        org.junit.Assert.assertNotNull(superManager45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(accountRegistry54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        java.lang.String str19 = superManager18.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry20 = superManager18.registry;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager18);
        java.lang.String str22 = superManager18.getPassword();
        superManager18.setManagerInfo("CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "Paid $ 0.0 with Mobile Pay", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CLT-390234b0-d56e-4275-bd7b-122280609c69" + "'", str19, "CLT-390234b0-d56e-4275-bd7b-122280609c69");
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5" + "'", str22, "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray5 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.CSVManager cSVManager7 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList9 = cSVManager7.readCSV("");
        cSVManager7.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap13 = null;
        cSVManager7.loadParkingLots(strMap13);
        ParkingSystem.Client client15 = ParkingSystem.Client.getInstance();
        java.lang.String str16 = client15.getClientType();
        cSVManager7.saveClient(client15);
        ParkingSystem.SpaceManager spaceManager18 = new ParkingSystem.SpaceManager();
        boolean boolean21 = spaceManager18.isSpaceAvailable("hi!", (int) '#');
        spaceManager18.toggleLot("disabled", false);
        ParkingSystem.Booking booking34 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean35 = spaceManager18.assignBooking("empty", (int) (short) 0, booking34);
        spaceManager18.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap37 = spaceManager18.getParkingLots();
        cSVManager7.saveParkingLots(strMap37);
        cSVManager0.saveParkingLots(strMap37);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArray5);
// flaky "54) test1774(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray5, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray6);
// flaky "30) test1774(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList9);
        org.junit.Assert.assertNotNull(client15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str16, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager3 = parkingSpaceFacade1.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager3.getParkingLots();
        cSVManager0.loadParkingLots(strMap4);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        java.util.List<java.lang.String[]> strArrayList8 = cSVManager0.readCSV("Refunded total cost of $100.0");
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "55) test1775(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList8);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = parkingLot10.assignBooking((int) (short) -1, booking24);
        java.lang.String str26 = booking24.getLotId();
        boolean boolean27 = parkingLot1.assignBooking(0, booking24);
        ParkingSystem.ParkingLotIterator parkingLotIterator28 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLotIterator28.next();
        int int30 = parkingSpace29.getSpaceId();
        parkingSpace29.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator28);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        java.lang.String str28 = parkingSpace25.scanSpace();
        int int29 = parkingSpace25.getSpaceId();
        ParkingSystem.SpaceManager spaceManager30 = new ParkingSystem.SpaceManager();
        boolean boolean33 = spaceManager30.isSpaceAvailable("hi!", (int) '#');
        spaceManager30.toggleLot("disabled", false);
        ParkingSystem.Booking booking46 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean47 = spaceManager30.assignBooking("empty", (int) (short) 0, booking46);
        java.lang.String str48 = booking46.getClientId();
        boolean boolean49 = parkingSpace25.assignBooking(booking46);
        int int50 = booking46.getDuration();
        boolean boolean51 = parkingSpace10.assignBooking(booking46);
        int int52 = booking46.getSpaceId();
        java.lang.String str53 = booking46.getLicensePlate();
        java.lang.String str54 = booking46.getClientId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "empty" + "'", str28, "empty");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "staff" + "'", str48, "staff");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "disabled" + "'", str53, "disabled");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "staff" + "'", str54, "staff");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap3 = bookingManager0.getActiveBookings();
        ParkingSystem.MobilePay mobilePay4 = new ParkingSystem.MobilePay();
        boolean boolean9 = mobilePay4.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str10 = mobilePay4.getPaymentMessage();
        boolean boolean15 = mobilePay4.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str16 = mobilePay4.getPaymentMessage();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay4);
        ParkingSystem.CheckInManager checkInManager18 = new ParkingSystem.CheckInManager(bookingManager0);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str10, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str16, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        boolean boolean16 = parkingSpaceFacade0.confirmBooking("Refunded without deposit ($-42.0)", "Refunded without deposit ($-42.0)", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ 100.0 with Mobile Pay", (int) '#', "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 0, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Paid $ 10.0 with Mobile Pay");
        boolean boolean19 = parkingSpaceFacade0.extendBooking("02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (byte) 1);
        ParkingSystem.CheckInManager checkInManager20 = parkingSpaceFacade0.getCheckInManager();
        checkInManager20.refundMessage = "";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(checkInManager20);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        parkingLot1.removeBooking((int) (byte) 1);
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        spaceManager12.toggleLot("Jane", false);
        spaceManager12.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager21 = new ParkingSystem.SpaceManager();
        boolean boolean24 = spaceManager21.isSpaceAvailable("hi!", (int) '#');
        spaceManager21.toggleLot("disabled", false);
        ParkingSystem.Booking booking37 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean38 = spaceManager21.assignBooking("empty", (int) (short) 0, booking37);
        boolean boolean39 = spaceManager12.assignBooking("hi!", 0, booking37);
        boolean boolean40 = parkingLot1.assignBooking((int) (short) 1, booking37);
        boolean boolean41 = parkingLot1.isEnabled();
        ParkingSystem.ParkingLotIterator parkingLotIterator42 = parkingLot1.getIterator();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator42);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        parkingSpaceFacade0.addParkingLot("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean14 = parkingSpaceFacade0.checkIn("CLT-55105d92-54d6-44d2-965a-736022b7f7cd");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) ' ');
        boolean boolean11 = parkingLot1.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot1.getParkingSpace((int) 'a');
        ParkingSystem.ParkingLot parkingLot15 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking17 = null;
        boolean boolean18 = parkingLot15.assignBooking(0, booking17);
        boolean boolean20 = parkingLot15.isSpaceAvailable((int) '#');
        boolean boolean22 = parkingLot15.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLot15.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking25 = parkingSpace24.getCurrentBooking();
        ParkingSystem.Disabled disabled26 = new ParkingSystem.Disabled();
        parkingSpace24.setState((ParkingSystem.SpaceState) disabled26);
        parkingSpace13.setState((ParkingSystem.SpaceState) disabled26);
        ParkingSystem.Booking booking29 = parkingSpace13.getCurrentBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(parkingSpace13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertNull(booking25);
        org.junit.Assert.assertNull(booking29);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = parkingSpaceProxy0.getFacade();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.Client client6 = accountRegistry4.getClient("");
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry4.loadSuperManagerFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(parkingSpaceFacade3);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(client6);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        java.util.List<ParkingSystem.Client> clientList31 = accountRegistry24.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry34 = parkingSpaceProxy33.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj39 = parkingSpaceProxy36.login("empty", "Jane");
        parkingSpaceProxy36.validateClient("Jane");
        parkingSpaceProxy36.toggleSpace("", "staff", false);
        accountRegistry34.assignProxyToManager("pass", parkingSpaceProxy36);
        accountRegistry24.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy36);
        ParkingSystem.Manager manager48 = accountRegistry24.autoGenerateManager();
        int int49 = accountRegistry24.getManagersSize();
        int int50 = accountRegistry24.getManagersSize();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry24.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str5, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str20, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(clientList31);
        org.junit.Assert.assertNotNull(accountRegistry34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(manager48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager11 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager12 = new ParkingSystem.CheckInManager(bookingManager11);
        ParkingSystem.Booking booking14 = bookingManager11.getBooking("");
        double double16 = bookingManager11.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay17 = new ParkingSystem.MobilePay();
        boolean boolean22 = mobilePay17.processPayment("hi!", (-1.0d), "", "");
        boolean boolean27 = mobilePay17.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean32 = mobilePay17.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager11.setPaymentStrategy((ParkingSystem.Strategy) mobilePay17);
        ParkingSystem.Booking booking35 = bookingManager11.getBooking("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Booking booking37 = bookingManager11.getBooking("pass");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap38 = bookingManager11.getActiveBookings();
        boolean boolean40 = bookingManager11.cancelBooking("CLT-45a3d895-9bc3-45d3-9068-d4559eae3183");
        ParkingSystem.MobilePay mobilePay41 = new ParkingSystem.MobilePay();
        boolean boolean46 = mobilePay41.processPayment("hi!", (-1.0d), "", "");
        boolean boolean51 = mobilePay41.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str52 = mobilePay41.getPaymentMessage();
        boolean boolean57 = mobilePay41.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded total cost of $1.0", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean62 = mobilePay41.processPayment("Paid $ 100.0 with Mobile Pay", 165.0d, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        bookingManager11.setPaymentStrategy((ParkingSystem.Strategy) mobilePay41);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay41);
        boolean boolean66 = paymentManager0.refundDeposit(540.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(booking35);
        org.junit.Assert.assertNull(booking37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str52, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.checkIn();
        boolean boolean16 = client0.editBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (short) 0);
        boolean boolean17 = client0.cancelBooking();
        java.lang.String str18 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
// flaky "56) test1786(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        ParkingSystem.Manager manager31 = superManager4.autoGenerateManager();
        manager31.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str5, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str20, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(manager31);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) ' ', "Refunded total cost of $-1.0", (int) 'a', "staff", (double) (byte) 10);
        double double8 = booking7.getTotalCost();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.removeBooking("disabled", 10);
        spaceManager0.toggleLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41", false);
        spaceManager0.addParkingLot("0b35479f-5869-423e-9abc-e4ab9cef903d");
        java.lang.String str14 = spaceManager0.scanSpace("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        spaceManager0.toggleLot("9fJ5pCUl", false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        java.lang.String str19 = debitOrCredit17.getPaymentMessage();
        boolean boolean24 = debitOrCredit17.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded without deposit ($0.0)", "jane");
        boolean boolean29 = debitOrCredit17.processPayment("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (double) 10L, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "89de8237-29df-4908-9de4-6dc1ce90de94");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        java.lang.String str9 = booking7.getLotId();
        boolean boolean10 = booking7.isCheckedIn();
        boolean boolean11 = booking7.isCheckedIn();
        java.lang.String str12 = booking7.getClientId();
        int int13 = booking7.getDuration();
        booking7.setStartTime("hi!");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "jane" + "'", str9, "jane");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "staff" + "'", str12, "staff");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.User user21 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj25 = parkingSpaceProxy22.login("empty", "Jane");
        parkingSpaceProxy22.validateClient("Jane");
        parkingSpaceProxy22.toggleSpace("", "staff", false);
        boolean boolean33 = parkingSpaceProxy22.cancelBooking("");
        user21.assignProxy(parkingSpaceProxy22);
        user0.user = parkingSpaceProxy22;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = null;
        user0.assignProxy(parkingSpaceProxy36);
        // The following exception was thrown during execution in test generation
        try {
            user0.register("8812812f-8c58-440e-9188-ca0b1f996ced", "8de59b10-a65c-4d90-b56c-a637505ce1de", "Refunded total cost of $0.0", "aswfJGJtdF", "qPYDfDnbtD");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.register(String, String, String, String, String)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        boolean boolean46 = parkingSpace25.assignBooking(booking44);
        java.lang.String str47 = enabled0.scanSpace(parkingSpace25);
        ParkingSystem.Disabled disabled48 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace49 = null;
        java.lang.String str50 = disabled48.scanSpace(parkingSpace49);
        ParkingSystem.ParkingSpace parkingSpace51 = null;
        java.lang.String str52 = disabled48.scanSpace(parkingSpace51);
        ParkingSystem.ParkingLot parkingLot54 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking56 = null;
        boolean boolean57 = parkingLot54.assignBooking(0, booking56);
        boolean boolean59 = parkingLot54.isSpaceAvailable((int) '#');
        boolean boolean61 = parkingLot54.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLot54.getParkingSpace((int) (byte) 10);
        int int64 = parkingSpace63.getSpaceId();
        ParkingSystem.Booking booking65 = parkingSpace63.getCurrentBooking();
        java.lang.String str66 = parkingSpace63.scanSpace();
        ParkingSystem.Enabled enabled67 = new ParkingSystem.Enabled();
        parkingSpace63.setState((ParkingSystem.SpaceState) enabled67);
        java.lang.String str69 = disabled48.scanSpace(parkingSpace63);
        java.lang.String str70 = enabled0.scanSpace(parkingSpace63);
        int int71 = parkingSpace63.getSpaceId();
        java.lang.String str72 = parkingSpace63.scanSpace();
        java.lang.String str73 = parkingSpace63.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "disabled" + "'", str47, "disabled");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertNull(booking65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "empty" + "'", str66, "empty");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "disabled" + "'", str69, "disabled");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "empty" + "'", str70, "empty");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "empty" + "'", str72, "empty");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "empty" + "'", str73, "empty");
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Client client12 = accountRegistry8.getClient("empty");
        accountRegistry8.validateClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        java.lang.Object obj17 = accountRegistry8.login("ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        int int18 = accountRegistry8.getManagersSize();
        boolean boolean20 = accountRegistry8.requiresValidation("");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNull(client12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean27 = bookingManager0.confirmBooking("Refunded total cost of $-1.0", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "Refunded without deposit ($-96.0)", (int) (short) 0, "Paid $ 1470.0 with Mobile Pay", (int) '4', "Refunded total cost of $1.0", "");
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.Disabled disabled21 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace22 = null;
        java.lang.String str23 = disabled21.scanSpace(parkingSpace22);
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot26 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking28 = null;
        boolean boolean29 = parkingLot26.assignBooking(0, booking28);
        boolean boolean31 = parkingLot26.isSpaceAvailable((int) '#');
        boolean boolean33 = parkingLot26.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace35 = parkingLot26.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking36 = parkingSpace35.getCurrentBooking();
        parkingSpace35.removeBooking();
        java.lang.String str38 = enabled24.scanSpace(parkingSpace35);
        ParkingSystem.ParkingLot parkingLot40 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking42 = null;
        boolean boolean43 = parkingLot40.assignBooking(0, booking42);
        boolean boolean45 = parkingLot40.isSpaceAvailable((int) '#');
        boolean boolean47 = parkingLot40.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace49 = parkingLot40.getParkingSpace((int) (byte) 10);
        int int50 = parkingSpace49.getSpaceId();
        ParkingSystem.Booking booking51 = parkingSpace49.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = parkingSpace49.assignBooking(booking68);
        java.lang.String str71 = enabled24.scanSpace(parkingSpace49);
        java.lang.String str72 = disabled21.scanSpace(parkingSpace49);
        user0.user = str72;
        java.lang.Object obj74 = user0.user;
        java.lang.Object obj75 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpace35);
        org.junit.Assert.assertNull(booking36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "empty" + "'", str38, "empty");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(parkingSpace49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNull(booking51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "disabled" + "'", str71, "disabled");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "disabled" + "'", str72, "disabled");
        org.junit.Assert.assertEquals("'" + obj74 + "' != '" + "disabled" + "'", obj74, "disabled");
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "disabled" + "'", obj75, "disabled");
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.registry;
        java.lang.String str11 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry12 = superManager4.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj17 = parkingSpaceProxy14.login("empty", "Jane");
        boolean boolean19 = parkingSpaceProxy14.checkIn("Paid $ 10.0 with Mobile Pay");
        accountRegistry12.assignProxyToClient("FNuxCiXmkP", parkingSpaceProxy14);
        boolean boolean24 = parkingSpaceProxy14.editBooking("Refunded deposit of $0.0", "Refunded total cost of $100.0", (int) '4');
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str5, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str6, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str9, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str11, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client7 = ParkingSystem.Client.getInstance();
        java.lang.String str8 = client7.getName();
        client7.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str17 = client7.getUsername();
        java.lang.String str18 = client7.getPassword();
        java.lang.String str19 = client7.getClientType();
        boolean boolean20 = client7.getIsValidated();
        boolean boolean28 = client7.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str29 = client7.getName();
        boolean boolean30 = client7.getIsValidated();
        cSVManager0.saveClient(client7);
        boolean boolean34 = client7.editBooking("hi!", (int) (short) 10);
        java.lang.String str35 = client7.getUsername();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "57) test1798(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "disabled" + "'", str19, "disabled");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.User user20 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("");
        user20.assignProxy(parkingSpaceProxy21);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy34.getRegistry();
        boolean boolean41 = parkingSpaceProxy34.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean45 = parkingSpaceProxy34.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user20.parkingProxy = parkingSpaceProxy34;
        user0.parkingProxy = parkingSpaceProxy34;
        ParkingSystem.ParkingLot parkingLot49 = new ParkingSystem.ParkingLot("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        user0.user = parkingLot49;
        ParkingSystem.Client client51 = ParkingSystem.Client.getInstance();
        java.lang.String str52 = client51.getUsername();
        client51.setClientInfo("Jane", "", "pass", "pass", "pass", "hi!", true);
        boolean boolean61 = client51.getIsValidated();
        user0.user = client51;
        java.lang.Object obj63 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(parkingSpaceProxy18);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(accountRegistry35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(client51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(obj63);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "hi!";
        ParkingSystem.BookingManager bookingManager7 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager7);
        ParkingSystem.SpaceManager spaceManager9 = bookingManager7.getSpaceManager();
        double double12 = bookingManager7.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit13 = new ParkingSystem.DebitOrCredit();
        bookingManager7.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit13);
        boolean boolean19 = debitOrCredit13.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str20 = debitOrCredit13.getPaymentMessage();
        java.lang.String str21 = debitOrCredit13.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit13);
        java.lang.String str23 = paymentManager0.paymentMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 165.0d + "'", double12 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Card number should be 16 digits" + "'", str20, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Card number should be 16 digits" + "'", str21, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        ParkingSystem.User user31 = new ParkingSystem.User();
        java.lang.Object obj32 = user31.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj36 = parkingSpaceProxy33.login("empty", "Jane");
        parkingSpaceProxy33.validateClient("Jane");
        java.lang.String str41 = parkingSpaceProxy33.scanSpace("", "");
        parkingSpaceProxy33.toggleSpace("", "disabled", true);
        user31.parkingProxy = parkingSpaceProxy33;
        ParkingSystem.ParkingLot parkingLot48 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator49 = parkingLot48.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator50 = parkingLot48.getIterator();
        user31.user = parkingLot48;
        ParkingSystem.User user52 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy53 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj56 = parkingSpaceProxy53.login("empty", "Jane");
        parkingSpaceProxy53.validateClient("Jane");
        parkingSpaceProxy53.toggleSpace("", "staff", false);
        boolean boolean64 = parkingSpaceProxy53.cancelBooking("");
        user52.assignProxy(parkingSpaceProxy53);
        user31.user = parkingSpaceProxy53;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy67 = user31.parkingProxy;
        parkingSpaceProxy67.addParkingLot("pass");
        accountRegistry15.assignProxyToManager("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", parkingSpaceProxy67);
        boolean boolean76 = parkingSpaceProxy67.register("CLT-390234b0-d56e-4275-bd7b-122280609c69", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "4a1f2343-8b2e-4dea-ba69-efd105414390", "CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", "Paid $ 1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str5, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator49);
        org.junit.Assert.assertNotNull(parkingLotIterator50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy67);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        java.lang.String str12 = manager11.getManagerId();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = user13.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry17 = parkingSpaceProxy16.getRegistry();
        boolean boolean19 = parkingSpaceProxy16.checkIn("");
        parkingSpaceProxy16.validateClient("");
        user13.assignProxy(parkingSpaceProxy16);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = user13.parkingProxy;
        java.lang.Object obj26 = user13.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking29 = parkingSpaceProxy27.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade30 = parkingSpaceProxy27.getFacade();
        boolean boolean32 = parkingSpaceProxy27.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user13.parkingProxy = parkingSpaceProxy27;
        manager11.assignProxy(parkingSpaceProxy27);
        boolean boolean36 = parkingSpaceProxy27.checkIn("H33Itw4InT");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(manager11);
// flaky "58) test1802(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "721fcb72-c57d-4e99-81b7-06e4c7e1ed40" + "'", str12, "721fcb72-c57d-4e99-81b7-06e4c7e1ed40");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(parkingSpaceProxy15);
        org.junit.Assert.assertNotNull(accountRegistry17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(booking29);
        org.junit.Assert.assertNotNull(parkingSpaceFacade30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        java.util.List<ParkingSystem.Client> clientList31 = accountRegistry24.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry34 = parkingSpaceProxy33.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj39 = parkingSpaceProxy36.login("empty", "Jane");
        parkingSpaceProxy36.validateClient("Jane");
        parkingSpaceProxy36.toggleSpace("", "staff", false);
        accountRegistry34.assignProxyToManager("pass", parkingSpaceProxy36);
        accountRegistry24.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy36);
        boolean boolean53 = parkingSpaceProxy36.register("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4", "8de59b10-a65c-4d90-b56c-a637505ce1de", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str5, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CLT-c3ce9a25-7555-430c-9330-9203c36530f8" + "'", str20, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(clientList31);
        org.junit.Assert.assertNotNull(accountRegistry34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager21 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager22 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager23 = bookingManager0.getSpaceManager();
        boolean boolean25 = bookingManager0.cancelBooking("02659ad3-0b5c-4c48-a915-a466f2b50775");
        boolean boolean35 = bookingManager0.confirmBooking("jane", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Paid $ 1.0 with Mobile Pay", 1, "CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (short) 10, "83a51dc6-0c8f-4f21-ae40-68699828f95d", "3b453211-7dd1-4452-8741-a206711c1217");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap36 = bookingManager0.getActiveBookings();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertNotNull(spaceManager23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        java.lang.String str5 = superManager4.getName();
        java.lang.String str6 = superManager4.getName();
        ParkingSystem.User user7 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj11 = parkingSpaceProxy8.login("empty", "Jane");
        parkingSpaceProxy8.validateClient("Jane");
        parkingSpaceProxy8.toggleSpace("", "staff", false);
        boolean boolean19 = parkingSpaceProxy8.cancelBooking("");
        user7.assignProxy(parkingSpaceProxy8);
        parkingSpaceProxy8.displayPendingValidations();
        parkingSpaceProxy8.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade24 = parkingSpaceProxy8.getFacade();
        parkingSpaceProxy8.toggleSpace("FNuxCiXmkP", "H33Itw4InT", true);
        boolean boolean34 = parkingSpaceProxy8.register("H33Itw4InT", "FNuxCiXmkP", "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "qMzKSKOI", "I673kmcH");
        superManager4.assignProxy(parkingSpaceProxy8);
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str5, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str6, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade24);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        cSVManager0.updateClientValidation("empty", false);
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean17 = parkingSpaceProxy14.checkIn("");
        client4.assignProxy(parkingSpaceProxy14);
        cSVManager0.saveClient(client4);
        ParkingSystem.SpaceManager spaceManager20 = new ParkingSystem.SpaceManager();
        boolean boolean23 = spaceManager20.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str26 = spaceManager20.scanSpace("disabled", "");
        spaceManager20.addParkingLot("hi!");
        java.lang.String str31 = spaceManager20.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap32 = spaceManager20.getParkingLots();
        boolean boolean35 = spaceManager20.isSpaceAvailable("staff", (int) '4');
        spaceManager20.removeBooking("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) (byte) -1);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap39 = spaceManager20.getParkingLots();
        cSVManager0.saveParkingLots(strMap39);
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "H33Itw4InT" + "'", str5, "H33Itw4InT");
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "disabled" + "'", str31, "disabled");
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        java.lang.String str13 = client0.getClientType();
        boolean boolean16 = client0.editBooking("Jane", 100);
        boolean boolean17 = client0.checkIn();
        ParkingSystem.Booking booking18 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "disabled" + "'", str13, "disabled");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(booking18);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.toggleLot("hi!", true);
        java.lang.String str9 = spaceManager0.scanSpace("5XQfkf24zK", "disabled");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.SpaceManager spaceManager15 = new ParkingSystem.SpaceManager();
        boolean boolean18 = spaceManager15.isSpaceAvailable("hi!", (int) '#');
        spaceManager15.toggleLot("disabled", false);
        ParkingSystem.Booking booking31 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean32 = spaceManager15.assignBooking("empty", (int) (short) 0, booking31);
        java.lang.String str33 = booking31.getClientId();
        boolean boolean34 = parkingSpace10.assignBooking(booking31);
        int int35 = booking31.getDuration();
        double double36 = booking31.getTotalCost();
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime37 = booking31.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "staff" + "'", str33, "staff");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean6 = parkingSpaceFacade0.editBooking("Jane", "staff", (int) (short) 100);
        parkingSpaceFacade0.toggleSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", false);
        boolean boolean13 = parkingSpaceFacade0.extendBooking("disabled", (int) '4');
        boolean boolean15 = parkingSpaceFacade0.checkOut("jane");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getPassword();
        boolean boolean17 = client0.extendBooking((int) (short) 10);
        ParkingSystem.AccountRegistry accountRegistry21 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry21);
        java.lang.String str23 = superManager22.getManagerId();
        java.lang.String str24 = superManager22.getManagerId();
        ParkingSystem.Manager manager25 = superManager22.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry26 = superManager22.registry;
        ParkingSystem.AccountRegistry accountRegistry30 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager31 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry30);
        boolean boolean33 = accountRegistry30.requiresValidation("disabled");
        int int34 = accountRegistry30.getManagersSize();
        boolean boolean40 = accountRegistry30.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj45 = parkingSpaceProxy42.login("empty", "Jane");
        parkingSpaceProxy42.validateClient("Jane");
        parkingSpaceProxy42.toggleSpace("", "staff", false);
        boolean boolean53 = parkingSpaceProxy42.cancelBooking("Jane");
        accountRegistry30.assignProxyToClient("pass", parkingSpaceProxy42);
        parkingSpaceProxy42.autoGenerateManager();
        parkingSpaceProxy42.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        superManager22.assignProxy(parkingSpaceProxy42);
        client0.assignProxy(parkingSpaceProxy42);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(superManager22);
// flaky "59) test1811(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Refunded total cost of $0.0" + "'", str23, "Refunded total cost of $0.0");
// flaky "31) test1811(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Refunded total cost of $0.0" + "'", str24, "Refunded total cost of $0.0");
        org.junit.Assert.assertNotNull(manager25);
        org.junit.Assert.assertNotNull(accountRegistry26);
        org.junit.Assert.assertNotNull(superManager31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", true);
        boolean boolean12 = parkingSpaceFacade0.editBooking("Paid $ 15.0 with Mobile Pay", "pass", (int) (byte) -1);
        ParkingSystem.Booking booking14 = parkingSpaceFacade0.getBookingDetails("pass");
        parkingSpaceFacade0.addParkingLot("4a1f2343-8b2e-4dea-ba69-efd105414390");
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(booking14);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager21 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager22 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager23 = bookingManager0.getSpaceManager();
        boolean boolean25 = bookingManager0.cancelBooking("02659ad3-0b5c-4c48-a915-a466f2b50775");
        boolean boolean35 = bookingManager0.confirmBooking("jane", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Paid $ 1.0 with Mobile Pay", 1, "CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (short) 10, "83a51dc6-0c8f-4f21-ae40-68699828f95d", "3b453211-7dd1-4452-8741-a206711c1217");
        boolean boolean45 = bookingManager0.confirmBooking("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "jane", "e8686ac8-1df7-4a9b-b299-8fbcdd585528", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 1, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", 1, "CLT-f02c481e-1504-4abf-b598-76152da8586a", "3b453211-7dd1-4452-8741-a206711c1217");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertNotNull(spaceManager23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        java.lang.String str13 = client0.getClientType();
        boolean boolean21 = client0.confirmBooking("disabled", "CLT-f02c481e-1504-4abf-b598-76152da8586a", 0, "Paid $ 10.0 with Mobile Pay", (int) (byte) 1, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "TXCrKOGD");
        ParkingSystem.AccountRegistry accountRegistry25 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager26 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry25);
        boolean boolean28 = accountRegistry25.requiresValidation("disabled");
        int int29 = accountRegistry25.getManagersSize();
        boolean boolean35 = accountRegistry25.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy37 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj40 = parkingSpaceProxy37.login("empty", "Jane");
        parkingSpaceProxy37.validateClient("Jane");
        parkingSpaceProxy37.toggleSpace("", "staff", false);
        boolean boolean48 = parkingSpaceProxy37.cancelBooking("Jane");
        accountRegistry25.assignProxyToClient("pass", parkingSpaceProxy37);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap50 = accountRegistry25.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy52 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj55 = parkingSpaceProxy52.login("empty", "Jane");
        parkingSpaceProxy52.validateClient("Jane");
        parkingSpaceProxy52.toggleSpace("", "staff", false);
        boolean boolean63 = parkingSpaceProxy52.cancelBooking("Jane");
        boolean boolean65 = parkingSpaceProxy52.checkOut("empty");
        boolean boolean75 = parkingSpaceProxy52.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        accountRegistry25.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy52);
        client0.assignProxy(parkingSpaceProxy52);
        client0.setValidated(false);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "staff" + "'", str10, "staff");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "jane" + "'", str12, "jane");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str13, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(superManager26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy16 = null;
        paymentManager0.setStrategy(strategy16);
        paymentManager0.refundMessage = "Jane";
        boolean boolean21 = paymentManager0.refundDeposit((double) (byte) 100);
        boolean boolean23 = paymentManager0.refundDeposit(0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("Refunded without deposit ($0.0)");
        boolean boolean9 = bookingManager0.editBooking("Refunded without deposit ($-42.0)", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", (int) (byte) -1);
        boolean boolean13 = bookingManager0.editBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "Refunded without deposit ($-15.0)", 2);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean6 = parkingSpaceFacade0.editBooking("Jane", "staff", (int) (short) 100);
        ParkingSystem.SpaceManager spaceManager7 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("SRiN5ev00N", "Paid $ 1470.0 with Mobile Pay");
        java.lang.String str13 = parkingSpaceFacade0.scanSpace("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", "FNuxCiXmkP");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "disabled" + "'", str13, "disabled");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        parkingLot1.setEnabled(false);
        ParkingSystem.ParkingLotIterator parkingLotIterator5 = parkingLot1.getIterator();
        parkingLot1.setEnabled(true);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingLotIterator5);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.ParkingLot parkingLot4 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot4.assignBooking(0, booking6);
        boolean boolean9 = parkingLot4.isSpaceAvailable((int) '#');
        boolean boolean11 = parkingLot4.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot4.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking14 = parkingSpace13.getCurrentBooking();
        ParkingSystem.Disabled disabled15 = new ParkingSystem.Disabled();
        parkingSpace13.setState((ParkingSystem.SpaceState) disabled15);
        java.lang.String str17 = disabled0.scanSpace(parkingSpace13);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking29 = parkingSpace28.getCurrentBooking();
        java.lang.String str30 = disabled0.scanSpace(parkingSpace28);
        ParkingSystem.ParkingLot parkingLot32 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking34 = null;
        boolean boolean35 = parkingLot32.assignBooking(0, booking34);
        boolean boolean37 = parkingLot32.isSpaceAvailable((int) '#');
        boolean boolean39 = parkingLot32.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace41 = parkingLot32.getParkingSpace((int) (byte) 10);
        int int42 = parkingSpace41.getSpaceId();
        ParkingSystem.Booking booking43 = parkingSpace41.getCurrentBooking();
        java.lang.String str44 = parkingSpace41.scanSpace();
        ParkingSystem.Enabled enabled45 = new ParkingSystem.Enabled();
        parkingSpace41.setState((ParkingSystem.SpaceState) enabled45);
        java.lang.String str47 = disabled0.scanSpace(parkingSpace41);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(parkingSpace13);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertNull(booking29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "disabled" + "'", str30, "disabled");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(parkingSpace41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNull(booking43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "empty" + "'", str44, "empty");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "disabled" + "'", str47, "disabled");
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        client0.setValidated(false);
        ParkingSystem.AccountRegistry accountRegistry7 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager8 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry7);
        java.lang.String str9 = superManager8.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry13 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = null;
        accountRegistry13.assignProxyToManager("disabled", parkingSpaceProxy16);
        superManager8.registry = accountRegistry13;
        ParkingSystem.AccountRegistry accountRegistry19 = superManager8.getRegistry();
        ParkingSystem.Manager manager20 = accountRegistry19.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy22.getRegistry();
        boolean boolean29 = parkingSpaceProxy22.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy22.toggleLot("hi!", false);
        accountRegistry19.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy22);
        parkingSpaceProxy22.toggleLot("disabled", false);
        client0.assignProxy(parkingSpaceProxy22);
        java.lang.Object obj40 = parkingSpaceProxy22.login("pass", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        boolean boolean42 = parkingSpaceProxy22.cancelBooking("Paid $ 1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade43 = parkingSpaceProxy22.getFacade();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(superManager8);
// flaky "60) test1820(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Refunded without deposit ($1.0)" + "'", str9, "Refunded without deposit ($1.0)");
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(manager20);
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade43);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        boolean boolean11 = client0.extendBooking(100);
        client0.setValidated(true);
        ParkingSystem.Booking booking14 = client0.getBookingDetails();
        boolean boolean17 = client0.editBooking("Refunded total cost of $100.0", 52);
        java.lang.String str18 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
// flaky "61) test1821(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
// flaky "32) test1821(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        java.lang.String str17 = booking15.getLotId();
        java.lang.String str18 = booking15.getLicensePlate();
        double double19 = booking15.getTotalCost();
        booking15.setStartTime("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        java.lang.String str22 = booking15.getLicensePlate();
        java.lang.String str23 = booking15.getClientId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "jane" + "'", str17, "jane");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "staff" + "'", str23, "staff");
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        double double5 = bookingManager0.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean21 = mobilePay6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        boolean boolean26 = bookingManager0.editBooking("qPYDfDnbtD", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", (int) (short) -1);
        boolean boolean28 = bookingManager0.cancelBooking("Paid $ 0.0 with Mobile Pay");
        boolean boolean32 = bookingManager0.editBooking("", "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", (int) (byte) 100);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getUsername();
        boolean boolean4 = client0.extendBooking(100);
        boolean boolean5 = client0.checkIn();
        boolean boolean6 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
// flaky "62) test1824(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "disabled" + "'", str1, "disabled");
// flaky "33) test1824(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str2, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean4 = parkingSpaceFacade0.editBooking("empty", "9fJ5pCUl", (int) (byte) 10);
        java.lang.String str7 = parkingSpaceFacade0.scanSpace("CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "Refunded without deposit ($0.0)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("Paid $ 10.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        accountRegistry3.validateClient("staff");
        boolean boolean21 = accountRegistry3.registerClient("Refunded without deposit ($-96.0)", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        boolean boolean23 = accountRegistry3.requiresValidation("Refunded without deposit ($0.0)");
        ParkingSystem.Manager manager24 = accountRegistry3.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(manager24);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Jane", "Refunded without deposit ($-42.0)", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (short) 10, "Paid $ -1.0 with Mobile Pay", (double) (short) 10);
        java.lang.String str8 = booking7.getLotId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str8, "Refunded without deposit ($-42.0)");
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        parkingLot1.removeBooking(10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(32);
        java.lang.String str12 = parkingSpace11.scanSpace();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "empty" + "'", str12, "empty");
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        java.lang.String str5 = superManager4.getName();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        java.lang.String str7 = superManager4.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "63) test1829(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "86z9Z9e0MN" + "'", str5, "86z9Z9e0MN");
        org.junit.Assert.assertNotNull(accountRegistry6);
// flaky "34) test1829(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "5XQfkf24zK" + "'", str7, "5XQfkf24zK");
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        boolean boolean16 = parkingSpaceFacade0.confirmBooking("Refunded without deposit ($-42.0)", "Refunded without deposit ($-42.0)", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ 100.0 with Mobile Pay", (int) '#', "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 0, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Paid $ 10.0 with Mobile Pay");
        boolean boolean19 = parkingSpaceFacade0.extendBooking("02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (byte) 1);
        ParkingSystem.CheckInManager checkInManager20 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean22 = parkingSpaceFacade0.checkOut("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        boolean boolean25 = parkingSpaceFacade0.extendBooking("FNuxCiXmkP", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(checkInManager20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.CSVManager cSVManager7 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList9 = cSVManager7.readCSV("");
        java.util.List<java.lang.String[]> strArrayList11 = cSVManager7.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap12 = null;
        cSVManager7.loadParkingLots(strMap12);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        ParkingSystem.Manager manager19 = superManager18.autoGenerateManager();
        cSVManager7.saveManager((ParkingSystem.Manager) superManager18);
        ParkingSystem.SpaceManager spaceManager21 = new ParkingSystem.SpaceManager();
        boolean boolean24 = spaceManager21.isSpaceAvailable("hi!", (int) '#');
        spaceManager21.toggleLot("disabled", false);
        ParkingSystem.Booking booking37 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean38 = spaceManager21.assignBooking("empty", (int) (short) 0, booking37);
        spaceManager21.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap40 = spaceManager21.getParkingLots();
        cSVManager7.loadParkingLots(strMap40);
        cSVManager0.loadParkingLots(strMap40);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade43 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str46 = parkingSpaceFacade43.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager47 = parkingSpaceFacade43.getSpaceManager();
        spaceManager47.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap50 = spaceManager47.getParkingLots();
        cSVManager0.loadParkingLots(strMap50);
        org.junit.Assert.assertNotNull(strArray1);
// flaky "64) test1831(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "35) test1831(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strArrayList9);
        org.junit.Assert.assertNotNull(strArrayList11);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(manager19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertNotNull(spaceManager47);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str23 = parkingSpaceFacade20.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager24 = parkingSpaceFacade20.getSpaceManager();
        spaceManager24.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap27 = spaceManager24.getParkingLots();
        user0.user = spaceManager24;
        java.lang.Object obj29 = null;
        user0.user = obj29;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy34.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy37 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj40 = parkingSpaceProxy37.login("empty", "Jane");
        parkingSpaceProxy37.validateClient("Jane");
        parkingSpaceProxy37.toggleSpace("", "staff", false);
        accountRegistry35.assignProxyToManager("pass", parkingSpaceProxy37);
        ParkingSystem.Client client49 = accountRegistry35.getClient("");
        ParkingSystem.SuperManager superManager50 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry35);
        boolean boolean56 = accountRegistry35.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy58 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry59 = parkingSpaceProxy58.getRegistry();
        boolean boolean61 = parkingSpaceProxy58.checkIn("");
        parkingSpaceProxy58.toggleLot("", true);
        accountRegistry35.assignProxyToManager("", parkingSpaceProxy58);
        user0.parkingProxy = parkingSpaceProxy58;
        java.lang.Object obj67 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str6, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(spaceManager24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(accountRegistry35);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(client49);
        org.junit.Assert.assertNotNull(superManager50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(accountRegistry59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        java.lang.String str5 = parkingSpaceFacade0.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager6 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean8 = checkInManager6.checkOut("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        checkInManager6.refundMessage = "721fcb72-c57d-4e99-81b7-06e4c7e1ed40";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertNotNull(checkInManager6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        ParkingSystem.ParkingLot parkingLot13 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking15 = null;
        boolean boolean16 = parkingLot13.assignBooking(0, booking15);
        boolean boolean18 = parkingLot13.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking27 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean28 = parkingLot13.assignBooking((int) (short) -1, booking27);
        java.lang.String str29 = booking27.getLotId();
        java.lang.String str30 = booking27.getLicensePlate();
        booking27.setStartTime("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        booking27.setDuration((int) (short) 10);
        boolean boolean35 = spaceManager0.assignBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", (-1), booking27);
        boolean boolean38 = spaceManager0.isSpaceAvailable("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", 0);
        spaceManager0.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "jane" + "'", str29, "jane");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "disabled" + "'", str30, "disabled");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        java.lang.String str17 = booking15.getLotId();
        java.lang.String str18 = booking15.getLicensePlate();
        booking15.setStartTime("hi!");
        java.lang.String str21 = booking15.getStartTime();
        java.lang.String str22 = booking15.getLicensePlate();
        int int23 = booking15.getDuration();
        booking15.setStartTime("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        booking15.setCheckedIn(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "jane" + "'", str17, "jane");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        java.lang.String str2 = client0.getPassword();
        boolean boolean3 = client0.getIsValidated();
        ParkingSystem.Booking booking4 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded total cost of $1.0" + "'", str1, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str2, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(booking4);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        ParkingSystem.Manager manager10 = accountRegistry6.autoGenerateManager();
        java.util.List<ParkingSystem.Client> clientList11 = accountRegistry6.displayPendingValidations();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "tbHxuilT", accountRegistry6);
        accountRegistry6.validateClient("0b35479f-5869-423e-9abc-e4ab9cef903d");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(manager10);
        org.junit.Assert.assertNotNull(clientList11);
        org.junit.Assert.assertNotNull(superManager12);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        boolean boolean46 = parkingSpace25.assignBooking(booking44);
        java.lang.String str47 = enabled0.scanSpace(parkingSpace25);
        ParkingSystem.ParkingLot parkingLot49 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking51 = null;
        boolean boolean52 = parkingLot49.assignBooking(0, booking51);
        boolean boolean54 = parkingLot49.isSpaceAvailable((int) '#');
        boolean boolean56 = parkingLot49.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace58 = parkingLot49.getParkingSpace((int) (byte) 10);
        int int59 = parkingSpace58.getSpaceId();
        ParkingSystem.Booking booking60 = parkingSpace58.getCurrentBooking();
        java.lang.String str61 = parkingSpace58.scanSpace();
        int int62 = parkingSpace58.getSpaceId();
        ParkingSystem.Booking booking63 = parkingSpace58.getCurrentBooking();
        int int64 = parkingSpace58.getSpaceId();
        java.lang.String str65 = enabled0.scanSpace(parkingSpace58);
        boolean boolean66 = parkingSpace58.isAvailable();
        boolean boolean67 = parkingSpace58.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "disabled" + "'", str47, "disabled");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(parkingSpace58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertNull(booking60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "empty" + "'", str61, "empty");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNull(booking63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "empty" + "'", str65, "empty");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry23 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry23);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = null;
        accountRegistry23.assignProxyToManager("disabled", parkingSpaceProxy26);
        boolean boolean29 = accountRegistry23.requiresValidation("disabled");
        int int30 = accountRegistry23.getManagersSize();
        superManager19.registry = accountRegistry23;
        int int32 = accountRegistry23.getManagersSize();
        java.util.List<ParkingSystem.Client> clientList33 = accountRegistry23.displayPendingValidations();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(superManager24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(clientList33);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.Disabled disabled21 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace22 = null;
        java.lang.String str23 = disabled21.scanSpace(parkingSpace22);
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot26 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking28 = null;
        boolean boolean29 = parkingLot26.assignBooking(0, booking28);
        boolean boolean31 = parkingLot26.isSpaceAvailable((int) '#');
        boolean boolean33 = parkingLot26.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace35 = parkingLot26.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking36 = parkingSpace35.getCurrentBooking();
        parkingSpace35.removeBooking();
        java.lang.String str38 = enabled24.scanSpace(parkingSpace35);
        ParkingSystem.ParkingLot parkingLot40 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking42 = null;
        boolean boolean43 = parkingLot40.assignBooking(0, booking42);
        boolean boolean45 = parkingLot40.isSpaceAvailable((int) '#');
        boolean boolean47 = parkingLot40.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace49 = parkingLot40.getParkingSpace((int) (byte) 10);
        int int50 = parkingSpace49.getSpaceId();
        ParkingSystem.Booking booking51 = parkingSpace49.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = parkingSpace49.assignBooking(booking68);
        java.lang.String str71 = enabled24.scanSpace(parkingSpace49);
        java.lang.String str72 = disabled21.scanSpace(parkingSpace49);
        user0.user = str72;
        user0.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "Jane", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Client client80 = ParkingSystem.Client.getInstance();
        java.lang.String str81 = client80.getName();
        java.lang.String str82 = client80.getClientId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy83 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj86 = parkingSpaceProxy83.login("empty", "Jane");
        parkingSpaceProxy83.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        client80.assignProxy(parkingSpaceProxy83);
        user0.user = parkingSpaceProxy83;
        boolean boolean96 = parkingSpaceProxy83.editBooking("", "empty", 0);
        ParkingSystem.AccountRegistry accountRegistry97 = parkingSpaceProxy83.getRegistry();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpace35);
        org.junit.Assert.assertNull(booking36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "empty" + "'", str38, "empty");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(parkingSpace49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNull(booking51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "disabled" + "'", str71, "disabled");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "disabled" + "'", str72, "disabled");
        org.junit.Assert.assertNotNull(client80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str81, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
// flaky "65) test1840(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3" + "'", str82, "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(accountRegistry97);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = null;
        accountRegistry3.assignProxyToClient("", parkingSpaceProxy8);
        java.util.List<ParkingSystem.Client> clientList10 = accountRegistry3.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy12.getRegistry();
        java.lang.String str16 = parkingSpaceProxy12.scanSpace("empty", "hi!");
        boolean boolean26 = parkingSpaceProxy12.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean30 = parkingSpaceProxy12.editBooking("pass", "2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (byte) 100);
        accountRegistry3.assignProxyToManager("", parkingSpaceProxy12);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade32 = parkingSpaceProxy12.getFacade();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(clientList10);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade32);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.Manager manager5 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        accountRegistry6.validateClient("721fcb72-c57d-4e99-81b7-06e4c7e1ed40");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(manager5);
        org.junit.Assert.assertNotNull(accountRegistry6);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy6.getFacade();
        user0.assignProxy(parkingSpaceProxy6);
        java.lang.String str15 = parkingSpaceProxy6.scanSpace("disabled", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        parkingSpaceProxy6.toggleLot("empty", true);
        boolean boolean21 = parkingSpaceProxy6.extendBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", 0);
        boolean boolean23 = parkingSpaceProxy6.cancelBooking("Paid $ 10.0 with Mobile Pay");
        parkingSpaceProxy6.toggleSpace("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8", "Paid $ 15.0 with Mobile Pay", false);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str3, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = parkingSpaceProxy0.getFacade();
        parkingSpaceFacade1.toggleSpace("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", false);
        parkingSpaceFacade1.toggleLot("CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade1);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        boolean boolean4 = client0.editBooking("jane", (int) (short) 0);
        ParkingSystem.Booking booking5 = client0.getBookingDetails();
        java.lang.String str6 = client0.getUsername();
        java.lang.String str7 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str1, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str6, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Jane" + "'", str7, "Jane");
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        ParkingSystem.AccountRegistry accountRegistry21 = superManager19.registry;
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap22 = accountRegistry21.getManagers();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        boolean boolean9 = client0.confirmBooking("", "pass", (int) (byte) 0, "Paid $ 10.0 with Mobile Pay", (int) (byte) 0, "", "Jane");
        java.lang.String str10 = client0.getUsername();
        client0.setValidated(true);
        java.lang.String str13 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str10, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str13, "2afd610d-a8cb-413a-bbee-7927f86b526c");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy6.getFacade();
        user0.assignProxy(parkingSpaceProxy6);
        java.lang.String str15 = parkingSpaceProxy6.scanSpace("disabled", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        parkingSpaceProxy6.toggleLot("empty", true);
        boolean boolean20 = parkingSpaceProxy6.checkIn("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade21 = parkingSpaceProxy6.getFacade();
        boolean boolean24 = parkingSpaceFacade21.extendBooking("09622cbf-e665-45db-b1ad-365065947a20", (int) ' ');
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str3, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap28 = accountRegistry3.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj33 = parkingSpaceProxy30.login("empty", "Jane");
        parkingSpaceProxy30.validateClient("Jane");
        parkingSpaceProxy30.toggleSpace("", "staff", false);
        boolean boolean41 = parkingSpaceProxy30.cancelBooking("Jane");
        boolean boolean43 = parkingSpaceProxy30.checkOut("empty");
        boolean boolean53 = parkingSpaceProxy30.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        accountRegistry3.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy30);
        boolean boolean60 = accountRegistry3.registerClient("Paid $ -1.0 with Mobile Pay", "disabled", "Paid $ -1.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", "jane");
        ParkingSystem.Client client62 = accountRegistry3.getClient("CLT-390234b0-d56e-4275-bd7b-122280609c69");
        java.util.List<ParkingSystem.Client> clientList63 = accountRegistry3.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(client62);
        org.junit.Assert.assertNotNull(clientList63);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = parkingLot10.assignBooking((int) (short) -1, booking24);
        java.lang.String str26 = booking24.getLotId();
        boolean boolean27 = parkingLot1.assignBooking(0, booking24);
        java.lang.String str28 = booking24.getStartTime();
        java.lang.String str29 = booking24.getLicensePlate();
        booking24.setDuration((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Jane" + "'", str28, "Jane");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean4 = spaceManager1.isSpaceAvailable("Jane", (int) 'a');
        spaceManager1.toggleLot("Refunded without deposit ($0.0)", true);
        spaceManager1.removeBooking("Card number should be 16 digits", (int) '#');
        boolean boolean13 = spaceManager1.isSpaceAvailable("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", 1);
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking(0);
        ParkingSystem.ParkingLot parkingLot12 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = parkingLot12.assignBooking(0, booking14);
        boolean boolean17 = parkingLot12.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean27 = parkingLot12.assignBooking((int) (short) -1, booking26);
        java.lang.String str28 = booking26.getLotId();
        java.lang.String str29 = booking26.getLicensePlate();
        boolean boolean30 = parkingLot1.assignBooking((int) (short) -1, booking26);
        ParkingSystem.ParkingLotIterator parkingLotIterator31 = parkingLot1.getIterator();
        ParkingSystem.ParkingLot parkingLot34 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking36 = null;
        boolean boolean37 = parkingLot34.assignBooking(0, booking36);
        boolean boolean39 = parkingLot34.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = parkingLot34.assignBooking((int) (short) -1, booking48);
        java.lang.String str50 = booking48.getLotId();
        int int51 = booking48.getDuration();
        int int52 = booking48.getSpaceId();
        booking48.setStartTime("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        booking48.setDuration((int) 'a');
        boolean boolean57 = parkingLot1.assignBooking((int) (short) 1, booking48);
        ParkingSystem.ParkingSpace parkingSpace59 = parkingLot1.getParkingSpace((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "jane" + "'", str28, "jane");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "jane" + "'", str50, "jane");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(parkingSpace59);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.displayPendingValidations();
        boolean boolean18 = parkingSpaceProxy1.editBooking("Paid $ -1.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", 100);
        boolean boolean28 = parkingSpaceProxy1.confirmBooking("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "fhd49ADb", 3, "Refunded total cost of $1.0", 2, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client7 = ParkingSystem.Client.getInstance();
        java.lang.String str8 = client7.getName();
        client7.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str17 = client7.getUsername();
        java.lang.String str18 = client7.getPassword();
        java.lang.String str19 = client7.getClientType();
        boolean boolean20 = client7.getIsValidated();
        boolean boolean28 = client7.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str29 = client7.getName();
        boolean boolean30 = client7.getIsValidated();
        cSVManager0.saveClient(client7);
        ParkingSystem.CSVManager cSVManager32 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList34 = cSVManager32.readCSV("");
        java.util.List<java.lang.String[]> strArrayList36 = cSVManager32.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap37 = null;
        cSVManager32.loadParkingLots(strMap37);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade39 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager40 = parkingSpaceFacade39.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap41 = spaceManager40.getParkingLots();
        cSVManager32.loadParkingLots(strMap41);
        cSVManager0.loadParkingLots(strMap41);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "66) test1854(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str8, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "disabled" + "'", str19, "disabled");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArrayList34);
        org.junit.Assert.assertNotNull(strArrayList36);
        org.junit.Assert.assertNotNull(spaceManager40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        java.lang.String str15 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry22 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry22);
        boolean boolean25 = accountRegistry22.requiresValidation("disabled");
        int int26 = accountRegistry22.getManagersSize();
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry22);
        ParkingSystem.AccountRegistry accountRegistry28 = superManager27.getRegistry();
        accountRegistry28.validateClient("pass");
        superManager4.registry = accountRegistry28;
        org.junit.Assert.assertNotNull(superManager4);
// flaky "67) test1856(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($1.0)" + "'", str5, "Refunded without deposit ($1.0)");
        org.junit.Assert.assertNotNull(superManager10);
// flaky "36) test1856(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "5XQfkf24zK" + "'", str15, "5XQfkf24zK");
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertNotNull(accountRegistry28);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        java.lang.String str12 = manager11.getManagerId();
        manager11.setManagerInfo("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff", "disabled");
        java.lang.String str17 = manager11.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(manager11);
// flaky "68) test1857(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "8bf217fa-1769-4d04-858b-ce78fe94bf0c" + "'", str12, "8bf217fa-1769-4d04-858b-ce78fe94bf0c");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        parkingLot1.setEnabled(false);
        ParkingSystem.ParkingLotIterator parkingLotIterator12 = parkingLot1.getIterator();
        // The following exception was thrown during execution in test generation
        try {
            parkingLotIterator12.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertNotNull(parkingLotIterator12);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager1 = parkingSpaceFacade0.getBookingManager();
        java.lang.String str4 = parkingSpaceFacade0.scanSpace("jane", "Jane");
        parkingSpaceFacade0.toggleSpace("empty", "Refunded total cost of $1.0", false);
        parkingSpaceFacade0.toggleLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", true);
        ParkingSystem.CheckInManager checkInManager12 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager13 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertNotNull(bookingManager1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertNotNull(checkInManager12);
        org.junit.Assert.assertNotNull(spaceManager13);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        boolean boolean50 = booking48.isCheckedIn();
        java.lang.String str51 = booking48.getClientId();
        boolean boolean52 = parkingSpace10.assignBooking(booking48);
        boolean boolean53 = booking48.isCheckedIn();
        int int54 = booking48.getSpaceId();
        int int55 = booking48.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "staff" + "'", str51, "staff");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        cSVManager0.updateClientValidation("empty", false);
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean17 = parkingSpaceProxy14.checkIn("");
        client4.assignProxy(parkingSpaceProxy14);
        cSVManager0.saveClient(client4);
        client4.setClientInfo("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", "Paid $ -1.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "disabled", true);
        java.lang.String str28 = client4.getClientId();
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3" + "'", str28, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy6.getFacade();
        user0.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry14 = parkingSpaceProxy13.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj19 = parkingSpaceProxy16.login("empty", "Jane");
        parkingSpaceProxy16.validateClient("Jane");
        parkingSpaceProxy16.toggleSpace("", "staff", false);
        boolean boolean27 = parkingSpaceProxy16.cancelBooking("");
        boolean boolean33 = parkingSpaceProxy16.register("jane", "jane", "Jane", "hi!", "disabled");
        accountRegistry14.assignProxyToManager("empty", parkingSpaceProxy16);
        user0.parkingProxy = parkingSpaceProxy16;
        ParkingSystem.User user36 = new ParkingSystem.User();
        java.lang.Object obj37 = user36.user;
        ParkingSystem.Client client38 = ParkingSystem.Client.getInstance();
        java.lang.String str39 = client38.getName();
        client38.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry43 = parkingSpaceProxy42.getRegistry();
        boolean boolean45 = parkingSpaceProxy42.checkIn("");
        client38.assignProxy(parkingSpaceProxy42);
        boolean boolean47 = client38.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        client38.assignProxy(parkingSpaceProxy48);
        ParkingSystem.AccountRegistry accountRegistry50 = parkingSpaceProxy48.getRegistry();
        boolean boolean52 = parkingSpaceProxy48.checkIn("hi!");
        user36.parkingProxy = parkingSpaceProxy48;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy54 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry55 = parkingSpaceProxy54.getRegistry();
        boolean boolean61 = parkingSpaceProxy54.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy54.toggleLot("hi!", false);
        parkingSpaceProxy54.validateClient("3b453211-7dd1-4452-8741-a206711c1217");
        boolean boolean68 = parkingSpaceProxy54.checkIn("disabled");
        user36.assignProxy(parkingSpaceProxy54);
        user0.parkingProxy = parkingSpaceProxy54;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "9701df9a-2178-4ad5-8076-46ff5f05b3e8" + "'", str3, "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
        org.junit.Assert.assertNotNull(accountRegistry14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(client38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "jane" + "'", str39, "jane");
        org.junit.Assert.assertNotNull(accountRegistry43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(accountRegistry50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(accountRegistry55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean11 = parkingSpaceProxy0.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean14 = parkingSpaceProxy0.extendBooking("", 0);
        parkingSpaceProxy0.toggleSpace("5XQfkf24zK", "Refunded without deposit ($1.0)", true);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        boolean boolean6 = parkingSpaceProxy0.extendBooking("pass", 0);
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy0.getFacade();
        ParkingSystem.Booking booking13 = parkingSpaceProxy0.getBookingDetails("CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
        org.junit.Assert.assertNull(booking13);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", (int) '#', "jane", 32, "", (double) 3);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "4a1f2343-8b2e-4dea-ba69-efd105414390", accountRegistry3);
        java.lang.String str5 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.getRegistry();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "69) test1866(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "5XQfkf24zK" + "'", str5, "5XQfkf24zK");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertNotNull(manager7);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        boolean boolean17 = accountRegistry14.requiresValidation("disabled");
        int int18 = accountRegistry14.getManagersSize();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.getRegistry();
        superManager4.registry = accountRegistry20;
        ParkingSystem.AccountRegistry accountRegistry25 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager26 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry25);
        boolean boolean28 = accountRegistry25.requiresValidation("disabled");
        int int29 = accountRegistry25.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj34 = parkingSpaceProxy31.login("empty", "Jane");
        parkingSpaceProxy31.validateClient("Jane");
        parkingSpaceProxy31.toggleSpace("", "staff", false);
        boolean boolean42 = parkingSpaceProxy31.cancelBooking("Jane");
        accountRegistry25.assignProxyToClient("pass", parkingSpaceProxy31);
        boolean boolean49 = parkingSpaceProxy31.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean55 = parkingSpaceProxy31.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        java.lang.String str58 = parkingSpaceProxy31.scanSpace("13b04414-31a5-407f-8ea3-fba4613c73d1", "Jane");
        superManager4.assignProxy(parkingSpaceProxy31);
        parkingSpaceProxy31.validateClient("cf448544-0e6d-4a41-94c2-e67f848ae8df");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "70) test1867(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($1.0)" + "'", str5, "Refunded without deposit ($1.0)");
// flaky "37) test1867(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Refunded without deposit ($1.0)" + "'", str6, "Refunded without deposit ($1.0)");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(superManager26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "disabled" + "'", str58, "disabled");
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        spaceManager2.loadParkingLots();
        spaceManager2.toggleSpace("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", true);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap8 = spaceManager2.getParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap9 = spaceManager2.getParkingLots();
        spaceManager2.removeBooking("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", 3);
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager6.getSpaceManager();
        double double11 = bookingManager6.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit12 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        boolean boolean18 = debitOrCredit12.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        double double21 = bookingManager0.getHourlyRate("");
        double double24 = bookingManager0.calculateCost("pass", 3);
        boolean boolean28 = bookingManager0.editBooking("qPYDfDnbtD", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", 52);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 165.0d + "'", double11 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 60.0d + "'", double24 == 60.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("hi!", (-1.0d), "", "");
        boolean boolean10 = mobilePay0.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str11 = mobilePay0.getPaymentMessage();
        java.lang.String str12 = mobilePay0.getPaymentMessage();
        java.lang.String str13 = mobilePay0.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str11, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str12, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str13, "Paid $ 100.0 with Mobile Pay");
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.ParkingSpace parkingSpace3 = null;
        java.lang.String str4 = disabled0.scanSpace(parkingSpace3);
        ParkingSystem.ParkingLot parkingLot6 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking8 = null;
        boolean boolean9 = parkingLot6.assignBooking(0, booking8);
        boolean boolean11 = parkingLot6.isSpaceAvailable((int) '#');
        boolean boolean13 = parkingLot6.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace15 = parkingLot6.getParkingSpace((int) (byte) 10);
        int int16 = parkingSpace15.getSpaceId();
        ParkingSystem.Booking booking17 = parkingSpace15.getCurrentBooking();
        java.lang.String str18 = parkingSpace15.scanSpace();
        ParkingSystem.Enabled enabled19 = new ParkingSystem.Enabled();
        parkingSpace15.setState((ParkingSystem.SpaceState) enabled19);
        java.lang.String str21 = disabled0.scanSpace(parkingSpace15);
        ParkingSystem.Enabled enabled22 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot24 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking26 = null;
        boolean boolean27 = parkingLot24.assignBooking(0, booking26);
        boolean boolean29 = parkingLot24.isSpaceAvailable((int) '#');
        boolean boolean31 = parkingLot24.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace33 = parkingLot24.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking34 = parkingSpace33.getCurrentBooking();
        parkingSpace33.removeBooking();
        java.lang.String str36 = enabled22.scanSpace(parkingSpace33);
        ParkingSystem.ParkingLot parkingLot38 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking40 = null;
        boolean boolean41 = parkingLot38.assignBooking(0, booking40);
        boolean boolean43 = parkingLot38.isSpaceAvailable((int) '#');
        boolean boolean45 = parkingLot38.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace47 = parkingLot38.getParkingSpace((int) (byte) 10);
        int int48 = parkingSpace47.getSpaceId();
        ParkingSystem.Booking booking49 = parkingSpace47.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager50 = new ParkingSystem.SpaceManager();
        boolean boolean53 = spaceManager50.isSpaceAvailable("hi!", (int) '#');
        spaceManager50.toggleLot("disabled", false);
        ParkingSystem.Booking booking66 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean67 = spaceManager50.assignBooking("empty", (int) (short) 0, booking66);
        boolean boolean68 = parkingSpace47.assignBooking(booking66);
        java.lang.String str69 = enabled22.scanSpace(parkingSpace47);
        ParkingSystem.ParkingLot parkingLot71 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking73 = null;
        boolean boolean74 = parkingLot71.assignBooking(0, booking73);
        boolean boolean76 = parkingLot71.isSpaceAvailable((int) '#');
        boolean boolean78 = parkingLot71.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace80 = parkingLot71.getParkingSpace((int) (byte) 10);
        int int81 = parkingSpace80.getSpaceId();
        ParkingSystem.Booking booking82 = parkingSpace80.getCurrentBooking();
        java.lang.String str83 = parkingSpace80.scanSpace();
        int int84 = parkingSpace80.getSpaceId();
        ParkingSystem.Booking booking85 = parkingSpace80.getCurrentBooking();
        java.lang.String str86 = enabled22.scanSpace(parkingSpace80);
        java.lang.String str87 = disabled0.scanSpace(parkingSpace80);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(parkingSpace15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNull(booking17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "empty" + "'", str18, "empty");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "disabled" + "'", str21, "disabled");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(parkingSpace33);
        org.junit.Assert.assertNull(booking34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "empty" + "'", str36, "empty");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(parkingSpace47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNull(booking49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "disabled" + "'", str69, "disabled");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(parkingSpace80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNull(booking82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "empty" + "'", str83, "empty");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertNull(booking85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "empty" + "'", str86, "empty");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "disabled" + "'", str87, "disabled");
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        spaceManager4.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap7 = spaceManager4.getParkingLots();
        java.lang.String str10 = spaceManager4.scanSpace("", "staff");
        spaceManager4.loadParkingLots();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        superManager7.registry = accountRegistry11;
        ParkingSystem.Client client15 = accountRegistry11.getClient("empty");
        boolean boolean21 = accountRegistry11.registerClient("Paid $ -1.0 with Mobile Pay", "jane", "hi!", "Refunded total cost of $1.0", "");
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", accountRegistry11);
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry11.loadManagersFromCSV();
// flaky "71) test1873(RegressionTest3)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(superManager22);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.ParkingSpace parkingSpace3 = parkingLot1.getParkingSpace((int) (byte) 100);
        org.junit.Assert.assertNotNull(parkingSpace3);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        boolean boolean11 = paymentManager0.refundDeposit(0.0d);
        boolean boolean14 = paymentManager0.refundWithoutDeposit((double) ' ', (double) (short) 100);
        paymentManager0.paymentMessage = "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa";
        boolean boolean21 = paymentManager0.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", 15.0d, "", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        boolean boolean24 = paymentManager0.refundWithoutDeposit((double) (short) 1, (double) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        ParkingSystem.Booking booking3 = client0.getBookingDetails();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj13 = parkingSpaceProxy10.login("empty", "Jane");
        parkingSpaceProxy10.validateClient("Jane");
        parkingSpaceProxy10.toggleSpace("", "staff", false);
        accountRegistry8.assignProxyToManager("pass", parkingSpaceProxy10);
        ParkingSystem.Client client22 = accountRegistry8.getClient("");
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry8);
        boolean boolean29 = accountRegistry8.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy31.getRegistry();
        boolean boolean34 = parkingSpaceProxy31.checkIn("");
        parkingSpaceProxy31.toggleLot("", true);
        accountRegistry8.assignProxyToManager("", parkingSpaceProxy31);
        client0.assignProxy(parkingSpaceProxy31);
        ParkingSystem.User user40 = new ParkingSystem.User();
        java.lang.Object obj41 = user40.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = user40.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry44 = parkingSpaceProxy43.getRegistry();
        java.lang.String str47 = parkingSpaceProxy43.scanSpace("empty", "hi!");
        boolean boolean57 = parkingSpaceProxy43.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy43.autoGenerateManager();
        user40.user = parkingSpaceProxy43;
        client0.assignProxy(parkingSpaceProxy43);
        java.lang.String str63 = parkingSpaceProxy43.scanSpace("9fJ5pCUl", "Refunded total cost of $0.0");
        boolean boolean67 = parkingSpaceProxy43.editBooking("aswfJGJtdF", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", (int) (byte) -1);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded total cost of $1.0" + "'", str1, "Refunded total cost of $1.0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(client22);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(parkingSpaceProxy42);
        org.junit.Assert.assertNotNull(accountRegistry44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "disabled" + "'", str47, "disabled");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "disabled" + "'", str63, "disabled");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        superManager10.registry = accountRegistry14;
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry14);
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Paid $ -1.0 with Mobile Pay", "", "Jane", accountRegistry14);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking21 = parkingSpaceProxy19.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry22 = parkingSpaceProxy19.getRegistry();
        parkingSpaceProxy19.autoGenerateManager();
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.AccountRegistry accountRegistry25 = parkingSpaceProxy19.getRegistry();
        java.lang.String str28 = parkingSpaceProxy19.scanSpace("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", "CLT-631eb509-a6c4-407c-b16d-582a6faabddb");
        ParkingSystem.AccountRegistry accountRegistry29 = parkingSpaceProxy19.getRegistry();
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNull(booking21);
        org.junit.Assert.assertNotNull(accountRegistry22);
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "disabled" + "'", str28, "disabled");
        org.junit.Assert.assertNotNull(accountRegistry29);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        boolean boolean25 = accountRegistry4.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        boolean boolean30 = parkingSpaceProxy27.checkIn("");
        parkingSpaceProxy27.toggleLot("", true);
        accountRegistry4.assignProxyToManager("", parkingSpaceProxy27);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade35 = parkingSpaceProxy27.getFacade();
        parkingSpaceFacade35.toggleSpace("qPYDfDnbtD", "Refunded without deposit ($-42.0)", true);
        boolean boolean41 = parkingSpaceFacade35.cancelBooking("disabled");
        parkingSpaceFacade35.toggleLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", true);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", 52, "0b35479f-5869-423e-9abc-e4ab9cef903d", (int) (byte) 1, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", 1470.0d);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        java.lang.String str40 = parkingSpaceFacade33.scanSpace("Paid $ 0.0 with Mobile Pay", "disabled");
        parkingSpaceFacade33.toggleSpace("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", true);
        boolean boolean47 = parkingSpaceFacade33.extendBooking("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", (int) ' ');
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "disabled" + "'", str40, "disabled");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace(1);
        boolean boolean2 = parkingSpace1.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double17 = bookingManager0.getHourlyRate("Paid $ 0.0 with Mobile Pay");
        double double19 = bookingManager0.getDeposit("aswfJGJtdF");
        ParkingSystem.Booking booking21 = bookingManager0.getBooking("Refunded without deposit ($-96.0)");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 15.0d + "'", double17 == 15.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 15.0d + "'", double19 == 15.0d);
        org.junit.Assert.assertNull(booking21);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        boolean boolean20 = bookingManager18.cancelBooking("disabled");
        ParkingSystem.CheckInManager checkInManager21 = new ParkingSystem.CheckInManager(bookingManager18);
        ParkingSystem.CheckInManager checkInManager22 = new ParkingSystem.CheckInManager(bookingManager18);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        java.lang.String str14 = debitOrCredit6.getPaymentMessage();
        java.lang.String str15 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.validateCard("staff", (double) (-1.0f));
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Card number should be 16 digits" + "'", str14, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Card number should be 16 digits" + "'", str15, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        java.lang.String str9 = booking7.getLotId();
        boolean boolean10 = booking7.isCheckedIn();
        java.lang.String str11 = booking7.getLicensePlate();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "jane" + "'", str9, "jane");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        boolean boolean11 = spaceManager0.isSpaceAvailable("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 100);
        spaceManager0.toggleLot("TXCrKOGD", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.PaymentManager paymentManager21 = new ParkingSystem.PaymentManager();
        java.lang.String str22 = paymentManager21.refundMessage;
        boolean boolean24 = paymentManager21.refundTotalCost((-1.0d));
        paymentManager21.refundMessage = "disabled";
        boolean boolean31 = paymentManager21.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay32 = new ParkingSystem.MobilePay();
        boolean boolean37 = mobilePay32.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str38 = mobilePay32.getPaymentMessage();
        java.lang.String str39 = mobilePay32.getPaymentMessage();
        paymentManager21.setStrategy((ParkingSystem.Strategy) mobilePay32);
        user0.user = paymentManager21;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj45 = parkingSpaceProxy42.login("empty", "Jane");
        boolean boolean48 = parkingSpaceProxy42.extendBooking("pass", 0);
        boolean boolean50 = parkingSpaceProxy42.checkOut("Paid $ 10.0 with Mobile Pay");
        java.lang.String str53 = parkingSpaceProxy42.scanSpace("hi!", "Jane");
        parkingSpaceProxy42.validateClient("0b35479f-5869-423e-9abc-e4ab9cef903d");
        user0.assignProxy(parkingSpaceProxy42);
        boolean boolean58 = parkingSpaceProxy42.checkIn("9fJ5pCUl");
        parkingSpaceProxy42.toggleSpace("staff", "CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6", false);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str38, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str39, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "disabled" + "'", str53, "disabled");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        boolean boolean12 = client0.getIsValidated();
        java.lang.String str13 = client0.getExtraId();
        java.lang.String str14 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "staff" + "'", str10, "staff");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "jane" + "'", str11, "jane");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "staff" + "'", str13, "staff");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str14, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        boolean boolean13 = accountRegistry6.requiresValidation("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        boolean boolean19 = accountRegistry6.registerClient("Refunded without deposit ($-42.0)", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "4a1f2343-8b2e-4dea-ba69-efd105414390", "83a51dc6-0c8f-4f21-ae40-68699828f95d", "FNuxCiXmkP");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean3 = parkingLot1.isSpaceAvailable((int) (byte) 1);
        parkingLot1.removeBooking((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Disabled disabled13 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace14 = null;
        java.lang.String str15 = disabled13.scanSpace(parkingSpace14);
        ParkingSystem.ParkingSpace parkingSpace16 = null;
        java.lang.String str17 = disabled13.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) disabled13);
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        boolean boolean27 = parkingLot20.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot20.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking30 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        parkingSpace29.removeBooking();
        java.lang.String str33 = disabled13.scanSpace(parkingSpace29);
        ParkingSystem.SpaceState spaceState34 = parkingSpace29.getState();
        ParkingSystem.ParkingSpace parkingSpace35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = spaceState34.scanSpace(parkingSpace35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpace.getCurrentBooking()\" because \"space\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "disabled" + "'", str33, "disabled");
        org.junit.Assert.assertNotNull(spaceState34);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("qPYDfDnbtD");
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        java.lang.String str12 = parkingSpace10.scanSpace();
        ParkingSystem.SpaceState spaceState13 = parkingSpace10.getState();
        java.lang.String str14 = parkingSpace10.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "empty" + "'", str12, "empty");
        org.junit.Assert.assertNotNull(spaceState13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj33 = parkingSpaceProxy30.login("empty", "Jane");
        parkingSpaceProxy30.validateClient("Jane");
        parkingSpaceProxy30.toggleSpace("", "staff", false);
        accountRegistry28.assignProxyToManager("pass", parkingSpaceProxy30);
        boolean boolean46 = parkingSpaceProxy30.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled", "Refunded total cost of $1.0", "", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy30;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = user0.parkingProxy;
        java.lang.String str51 = parkingSpaceProxy48.scanSpace("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded total cost of $100.0");
        parkingSpaceProxy48.displayPendingValidations();
        boolean boolean56 = parkingSpaceProxy48.editBooking("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", "2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8", (int) (byte) 0);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        java.lang.String str8 = parkingSpaceProxy0.scanSpace("", "");
        parkingSpaceProxy0.toggleSpace("", "disabled", true);
        boolean boolean18 = parkingSpaceProxy0.register("Refunded total cost of $-1.0", "Refunded total cost of $1.0", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Paid $ 100.0 with Mobile Pay", "hi!");
        ParkingSystem.Booking booking20 = parkingSpaceProxy0.getBookingDetails("aa9c00f6-ec11-46c5-a72b-a7f620703e51");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "disabled" + "'", str8, "disabled");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(booking20);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        cSVManager0.updateClientValidation("empty", false);
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean17 = parkingSpaceProxy14.checkIn("");
        client4.assignProxy(parkingSpaceProxy14);
        cSVManager0.saveClient(client4);
        client4.setClientInfo("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", "Paid $ -1.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "disabled", true);
        boolean boolean28 = client4.checkIn();
        java.lang.String str29 = client4.getUsername();
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded total cost of $-1.0" + "'", str5, "Refunded total cost of $-1.0");
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        superManager10.registry = accountRegistry14;
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry14);
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Paid $ -1.0 with Mobile Pay", "", "Jane", accountRegistry14);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking21 = parkingSpaceProxy19.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry22 = parkingSpaceProxy19.getRegistry();
        parkingSpaceProxy19.autoGenerateManager();
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.Booking booking26 = parkingSpaceProxy19.getBookingDetails("CLT-390234b0-d56e-4275-bd7b-122280609c69");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNull(booking21);
        org.junit.Assert.assertNotNull(accountRegistry22);
        org.junit.Assert.assertNull(booking26);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        spaceManager4.addParkingLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        spaceManager4.removeBooking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", (int) (byte) 0);
        spaceManager4.toggleLot("", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.Manager manager14 = superManager11.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry15 = superManager11.registry;
        ParkingSystem.AccountRegistry accountRegistry19 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager20 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry19);
        ParkingSystem.Manager manager21 = superManager20.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry22 = superManager20.getRegistry();
        java.lang.String str23 = superManager20.getPassword();
        superManager20.displayPendingValidations();
        ParkingSystem.User user25 = new ParkingSystem.User();
        java.lang.Object obj26 = user25.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj30 = parkingSpaceProxy27.login("empty", "Jane");
        parkingSpaceProxy27.validateClient("Jane");
        java.lang.String str35 = parkingSpaceProxy27.scanSpace("", "");
        parkingSpaceProxy27.toggleSpace("", "disabled", true);
        user25.parkingProxy = parkingSpaceProxy27;
        parkingSpaceProxy27.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry42 = parkingSpaceProxy27.getRegistry();
        superManager20.registry = accountRegistry42;
        superManager11.registry = accountRegistry42;
        accountRegistry42.validateClient("aswfJGJtdF");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(manager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager20);
        org.junit.Assert.assertNotNull(manager21);
        org.junit.Assert.assertNotNull(accountRegistry22);
// flaky "72) test1899(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "5XQfkf24zK" + "'", str23, "5XQfkf24zK");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "disabled" + "'", str35, "disabled");
        org.junit.Assert.assertNotNull(accountRegistry42);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = bookingManager0.extendBooking("jane", (int) (byte) 100, "hi!", "jane");
        ParkingSystem.SpaceManager spaceManager7 = bookingManager0.getSpaceManager();
        boolean boolean12 = bookingManager0.extendBooking("Refunded without deposit ($0.0)", (int) (byte) 1, "hi!", "pass");
        boolean boolean16 = bookingManager0.editBooking("09622cbf-e665-45db-b1ad-365065947a20", "CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", 32);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        java.lang.Object obj15 = accountRegistry12.login("disabled", "pass");
        ParkingSystem.Manager manager16 = accountRegistry12.autoGenerateManager();
        boolean boolean22 = accountRegistry12.registerClient("pass", "Paid $ 100.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay", "pass", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        int int23 = accountRegistry12.getManagersSize();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager5.getSpaceManager();
        boolean boolean19 = bookingManager5.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double21 = bookingManager5.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit22 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit22);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit22);
        boolean boolean29 = debitOrCredit22.processPayment("Jane", 1.0d, "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", "8bf217fa-1769-4d04-858b-ce78fe94bf0c");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.addParkingLot("pass");
        boolean boolean6 = parkingSpaceProxy0.checkIn("Paid $ 100.0 with Mobile Pay");
        boolean boolean12 = parkingSpaceProxy0.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Refunded without deposit ($-42.0)", "Paid $ 0.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled");
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy0.getRegistry();
        java.lang.Object obj16 = parkingSpaceProxy0.login("Paid $ 0.0 with Mobile Pay", "Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        java.util.List<java.lang.String[]> strArrayList8 = cSVManager0.readCSV("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Client client9 = ParkingSystem.Client.getInstance();
        java.lang.String str10 = client9.getName();
        client9.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str19 = client9.getUsername();
        java.lang.String str20 = client9.getPassword();
        java.lang.String str21 = client9.getUsername();
        cSVManager0.saveClient(client9);
        boolean boolean24 = client9.extendBooking((int) (byte) 0);
        java.lang.String str25 = client9.getClientId();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList8);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str10, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry13 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry13);
        boolean boolean16 = accountRegistry13.requiresValidation("disabled");
        int int17 = accountRegistry13.getManagersSize();
        boolean boolean23 = accountRegistry13.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        java.util.List<ParkingSystem.Client> clientList24 = accountRegistry13.displayPendingValidations();
        superManager4.registry = accountRegistry13;
        ParkingSystem.AccountRegistry accountRegistry32 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager33 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry32);
        ParkingSystem.AccountRegistry accountRegistry37 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager38 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry37);
        superManager33.registry = accountRegistry37;
        ParkingSystem.SuperManager superManager40 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry37);
        superManager4.registry = accountRegistry37;
        ParkingSystem.AccountRegistry accountRegistry42 = superManager4.getRegistry();
        java.lang.String str43 = superManager4.getManagerId();
        java.lang.String str44 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry45 = superManager4.getRegistry();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "73) test1905(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($1.0)" + "'", str5, "Refunded without deposit ($1.0)");
// flaky "38) test1905(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Refunded without deposit ($1.0)" + "'", str6, "Refunded without deposit ($1.0)");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
// flaky "16) test1905(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "5XQfkf24zK" + "'", str9, "5XQfkf24zK");
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(clientList24);
        org.junit.Assert.assertNotNull(superManager33);
        org.junit.Assert.assertNotNull(superManager38);
        org.junit.Assert.assertNotNull(superManager40);
        org.junit.Assert.assertNotNull(accountRegistry42);
// flaky "10) test1905(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Refunded without deposit ($1.0)" + "'", str43, "Refunded without deposit ($1.0)");
// flaky "6) test1905(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Refunded without deposit ($1.0)" + "'", str44, "Refunded without deposit ($1.0)");
        org.junit.Assert.assertNotNull(accountRegistry45);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.Client client27 = ParkingSystem.Client.getInstance();
        java.lang.String str28 = client27.getClientType();
        java.lang.String str29 = client27.getPassword();
        user0.user = client27;
        client27.setValidated(false);
        java.lang.String str33 = client27.getName();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(client27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "empty" + "'", str28, "empty");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str29, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "empty" + "'", str33, "empty");
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = parkingLot10.assignBooking((int) (short) -1, booking24);
        java.lang.String str26 = booking24.getLotId();
        boolean boolean27 = parkingLot1.assignBooking(0, booking24);
        int int28 = booking24.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        boolean boolean16 = accountRegistry6.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj21 = parkingSpaceProxy18.login("empty", "Jane");
        parkingSpaceProxy18.validateClient("Jane");
        parkingSpaceProxy18.toggleSpace("", "staff", false);
        boolean boolean29 = parkingSpaceProxy18.cancelBooking("Jane");
        accountRegistry6.assignProxyToClient("pass", parkingSpaceProxy18);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap31 = accountRegistry6.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj36 = parkingSpaceProxy33.login("empty", "Jane");
        parkingSpaceProxy33.validateClient("Jane");
        parkingSpaceProxy33.toggleSpace("", "staff", false);
        boolean boolean44 = parkingSpaceProxy33.cancelBooking("Jane");
        boolean boolean46 = parkingSpaceProxy33.checkOut("empty");
        boolean boolean56 = parkingSpaceProxy33.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        accountRegistry6.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy33);
        ParkingSystem.User user59 = new ParkingSystem.User();
        java.lang.Object obj60 = user59.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy61 = user59.parkingProxy;
        ParkingSystem.User user62 = new ParkingSystem.User();
        java.lang.Object obj63 = user62.user;
        ParkingSystem.Client client64 = ParkingSystem.Client.getInstance();
        java.lang.String str65 = client64.getName();
        client64.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy68 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry69 = parkingSpaceProxy68.getRegistry();
        boolean boolean71 = parkingSpaceProxy68.checkIn("");
        client64.assignProxy(parkingSpaceProxy68);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade73 = parkingSpaceProxy68.getFacade();
        user62.assignProxy(parkingSpaceProxy68);
        user59.parkingProxy = parkingSpaceProxy68;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade76 = parkingSpaceProxy68.getFacade();
        accountRegistry6.assignProxyToClient("pass", parkingSpaceProxy68);
        ParkingSystem.Client client79 = accountRegistry6.getClient("Paid $ -1.0 with Mobile Pay");
        accountRegistry6.validateClient("pass");
        ParkingSystem.Manager manager82 = accountRegistry6.autoGenerateManager();
        ParkingSystem.SuperManager superManager83 = ParkingSystem.SuperManager.createFromCSV("pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", accountRegistry6);
        java.util.List<ParkingSystem.Client> clientList84 = accountRegistry6.displayPendingValidations();
        int int85 = accountRegistry6.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy87 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean89 = parkingSpaceProxy87.cancelBooking("pass");
        parkingSpaceProxy87.toggleSpace("jane", "Paid $ -1.0 with Mobile Pay", false);
        parkingSpaceProxy87.addParkingLot("pass");
        accountRegistry6.assignProxyToClient("02659ad3-0b5c-4c48-a915-a466f2b50775", parkingSpaceProxy87);
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry6.loadManagersFromCSV();
// flaky "74) test1908(RegressionTest3)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(parkingSpaceProxy61);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(client64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "jane" + "'", str65, "jane");
        org.junit.Assert.assertNotNull(accountRegistry69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade73);
        org.junit.Assert.assertNotNull(parkingSpaceFacade76);
        org.junit.Assert.assertNull(client79);
        org.junit.Assert.assertNotNull(manager82);
        org.junit.Assert.assertNotNull(superManager83);
        org.junit.Assert.assertNotNull(clientList84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace4 = parkingLot1.getParkingSpace((int) (byte) -1);
        boolean boolean5 = parkingLot1.isEnabled();
        parkingLot1.removeBooking((int) ' ');
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        boolean boolean5 = checkInManager1.checkIn("jane");
        java.lang.String str6 = checkInManager1.refundMessage;
        boolean boolean8 = checkInManager1.checkOut("Refunded total cost of $1.0");
        boolean boolean10 = checkInManager1.checkIn("Refunded total cost of $100.0");
        boolean boolean12 = checkInManager1.checkOut("3b453211-7dd1-4452-8741-a206711c1217");
        java.lang.String str13 = checkInManager1.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        java.lang.Object obj32 = parkingSpaceProxy18.login("", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean34 = parkingSpaceProxy18.cancelBooking("Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade35 = parkingSpaceProxy18.getFacade();
        boolean boolean45 = parkingSpaceProxy18.confirmBooking("89de8237-29df-4908-9de4-6dc1ce90de94", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "09622cbf-e665-45db-b1ad-365065947a20", 4, "CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (byte) 0, "8bf217fa-1769-4d04-858b-ce78fe94bf0c", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        org.junit.Assert.assertNotNull(superManager4);
// flaky "75) test1911(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($1.0)" + "'", str5, "Refunded without deposit ($1.0)");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade35);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Paid $ 15.0 with Mobile Pay", "2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8", 0, "CLT-55105d92-54d6-44d2-965a-736022b7f7cd", 3, "Refunded total cost of $-1.0", (double) '4');
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap19 = bookingManager18.getActiveBookings();
        boolean boolean24 = bookingManager18.extendBooking("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) (byte) 10, "CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", "Paid $ 1470.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry25 = bookingManager18.getAccountRegistry();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(accountRegistry25);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.Enabled enabled16 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled16);
        ParkingSystem.Enabled enabled18 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        boolean boolean27 = parkingLot20.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot20.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking30 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        java.lang.String str32 = enabled18.scanSpace(parkingSpace29);
        ParkingSystem.ParkingLot parkingLot34 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking36 = null;
        boolean boolean37 = parkingLot34.assignBooking(0, booking36);
        boolean boolean39 = parkingLot34.isSpaceAvailable((int) '#');
        boolean boolean41 = parkingLot34.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace43 = parkingLot34.getParkingSpace((int) (byte) 10);
        int int44 = parkingSpace43.getSpaceId();
        ParkingSystem.Booking booking45 = parkingSpace43.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager46 = new ParkingSystem.SpaceManager();
        boolean boolean49 = spaceManager46.isSpaceAvailable("hi!", (int) '#');
        spaceManager46.toggleLot("disabled", false);
        ParkingSystem.Booking booking62 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean63 = spaceManager46.assignBooking("empty", (int) (short) 0, booking62);
        boolean boolean64 = parkingSpace43.assignBooking(booking62);
        java.lang.String str65 = enabled18.scanSpace(parkingSpace43);
        ParkingSystem.Disabled disabled66 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace67 = null;
        java.lang.String str68 = disabled66.scanSpace(parkingSpace67);
        ParkingSystem.ParkingSpace parkingSpace69 = null;
        java.lang.String str70 = disabled66.scanSpace(parkingSpace69);
        ParkingSystem.ParkingLot parkingLot72 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking74 = null;
        boolean boolean75 = parkingLot72.assignBooking(0, booking74);
        boolean boolean77 = parkingLot72.isSpaceAvailable((int) '#');
        boolean boolean79 = parkingLot72.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace81 = parkingLot72.getParkingSpace((int) (byte) 10);
        int int82 = parkingSpace81.getSpaceId();
        ParkingSystem.Booking booking83 = parkingSpace81.getCurrentBooking();
        java.lang.String str84 = parkingSpace81.scanSpace();
        ParkingSystem.Enabled enabled85 = new ParkingSystem.Enabled();
        parkingSpace81.setState((ParkingSystem.SpaceState) enabled85);
        java.lang.String str87 = disabled66.scanSpace(parkingSpace81);
        java.lang.String str88 = enabled18.scanSpace(parkingSpace81);
        int int89 = parkingSpace81.getSpaceId();
        java.lang.String str90 = parkingSpace81.scanSpace();
        java.lang.String str91 = enabled16.scanSpace(parkingSpace81);
        java.lang.String str92 = parkingSpace81.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "empty" + "'", str32, "empty");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(parkingSpace43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNull(booking45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "disabled" + "'", str65, "disabled");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "disabled" + "'", str68, "disabled");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "disabled" + "'", str70, "disabled");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(parkingSpace81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertNull(booking83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "empty" + "'", str84, "empty");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "disabled" + "'", str87, "disabled");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "empty" + "'", str88, "empty");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "empty" + "'", str90, "empty");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "empty" + "'", str91, "empty");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "empty" + "'", str92, "empty");
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.toggleLot("", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = parkingSpaceProxy0.getFacade();
        ParkingSystem.Booking booking9 = parkingSpaceProxy0.getBookingDetails("3b453211-7dd1-4452-8741-a206711c1217");
        boolean boolean11 = parkingSpaceProxy0.checkIn("");
        boolean boolean15 = parkingSpaceProxy0.editBooking("Paid $ 1470.0 with Mobile Pay", "Refunded total cost of $1.0", (int) (short) 100);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade7);
        org.junit.Assert.assertNull(booking9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        ParkingSystem.ParkingLotIterator parkingLotIterator10 = parkingLot1.getIterator();
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int20 = booking19.getDuration();
        java.lang.String str21 = booking19.getClientId();
        booking19.setStartTime("hi!");
        boolean boolean24 = booking19.isCheckedIn();
        java.lang.String str25 = booking19.getLotId();
        boolean boolean26 = parkingLot1.assignBooking((int) '#', booking19);
        double double27 = booking19.getTotalCost();
        java.lang.String str28 = booking19.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "jane" + "'", str25, "jane");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "disabled" + "'", str28, "disabled");
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        ParkingSystem.CheckInManager checkInManager18 = new ParkingSystem.CheckInManager(bookingManager0);
        java.lang.String str19 = checkInManager18.refundMessage;
        boolean boolean21 = checkInManager18.checkIn("25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        boolean boolean23 = checkInManager18.checkOut("fhd49ADb");
        boolean boolean25 = checkInManager18.checkOut("");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        parkingLot1.setEnabled(true);
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        parkingLot1.setEnabled(false);
        boolean boolean11 = parkingLot1.isEnabled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        ParkingSystem.PaymentManager paymentManager14 = new ParkingSystem.PaymentManager();
        paymentManager14.refundMessage = "";
        boolean boolean18 = paymentManager14.refundTotalCost((double) (byte) 1);
        paymentManager14.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean23 = paymentManager14.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str24 = paymentManager14.paymentMessage;
        boolean boolean29 = paymentManager14.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy30 = null;
        paymentManager14.setStrategy(strategy30);
        java.lang.String str32 = paymentManager14.refundMessage;
        ParkingSystem.MobilePay mobilePay33 = new ParkingSystem.MobilePay();
        boolean boolean38 = mobilePay33.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str39 = mobilePay33.getPaymentMessage();
        java.lang.String str40 = mobilePay33.getPaymentMessage();
        boolean boolean45 = mobilePay33.processPayment("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", 1.0d, "disabled", "Refunded without deposit ($0.0)");
        paymentManager14.setStrategy((ParkingSystem.Strategy) mobilePay33);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay33);
        boolean boolean52 = paymentManager0.processPayment("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", (double) 52, "721fcb72-c57d-4e99-81b7-06e4c7e1ed40", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str24, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str32, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str39, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str40, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Paid $ 1470.0 with Mobile Pay", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", 0, "CLT-390234b0-d56e-4275-bd7b-122280609c69", (int) (byte) 10, "e8686ac8-1df7-4a9b-b299-8fbcdd585528", 0.0d);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj12 = parkingSpaceProxy9.login("empty", "Jane");
        parkingSpaceProxy9.validateClient("Jane");
        parkingSpaceProxy9.toggleSpace("", "staff", false);
        boolean boolean20 = parkingSpaceProxy9.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy9);
        java.lang.Object obj24 = accountRegistry3.login("", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean30 = accountRegistry3.registerClient("", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "", "2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8", "848f508e-e1d2-4f02-9fc9-e95eee425d36");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = user0.parkingProxy;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceProxy17);
        org.junit.Assert.assertNotNull(parkingSpaceProxy18);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.ParkingLot parkingLot11 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking13 = null;
        boolean boolean14 = parkingLot11.assignBooking(0, booking13);
        boolean boolean16 = parkingLot11.isSpaceAvailable((int) '#');
        boolean boolean18 = parkingLot11.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace20 = parkingLot11.getParkingSpace((int) (byte) 10);
        int int21 = parkingSpace20.getSpaceId();
        ParkingSystem.Booking booking22 = parkingSpace20.getCurrentBooking();
        java.lang.String str23 = parkingSpace20.scanSpace();
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        parkingSpace20.setState((ParkingSystem.SpaceState) enabled24);
        parkingSpace9.setState((ParkingSystem.SpaceState) enabled24);
        ParkingSystem.ParkingLot parkingLot28 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator29 = parkingLot28.getIterator();
        ParkingSystem.Booking booking31 = null;
        boolean boolean32 = parkingLot28.assignBooking((int) (short) 1, booking31);
        ParkingSystem.ParkingSpace parkingSpace34 = parkingLot28.getParkingSpace((int) ' ');
        java.lang.String str35 = enabled24.scanSpace(parkingSpace34);
        int int36 = parkingSpace34.getSpaceId();
        ParkingSystem.ParkingLot parkingLot38 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking40 = null;
        boolean boolean41 = parkingLot38.assignBooking(0, booking40);
        boolean boolean43 = parkingLot38.isSpaceAvailable((int) '#');
        boolean boolean45 = parkingLot38.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace47 = parkingLot38.getParkingSpace((int) (byte) 10);
        int int48 = parkingSpace47.getSpaceId();
        ParkingSystem.Booking booking49 = parkingSpace47.getCurrentBooking();
        java.lang.String str50 = parkingSpace47.scanSpace();
        int int51 = parkingSpace47.getSpaceId();
        ParkingSystem.ParkingLot parkingLot53 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking55 = null;
        boolean boolean56 = parkingLot53.assignBooking(0, booking55);
        boolean boolean58 = parkingLot53.isSpaceAvailable((int) '#');
        boolean boolean60 = parkingLot53.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace62 = parkingLot53.getParkingSpace((int) (byte) 10);
        int int63 = parkingSpace62.getSpaceId();
        ParkingSystem.Booking booking64 = parkingSpace62.getCurrentBooking();
        java.lang.String str65 = parkingSpace62.scanSpace();
        int int66 = parkingSpace62.getSpaceId();
        ParkingSystem.SpaceManager spaceManager67 = new ParkingSystem.SpaceManager();
        boolean boolean70 = spaceManager67.isSpaceAvailable("hi!", (int) '#');
        spaceManager67.toggleLot("disabled", false);
        ParkingSystem.Booking booking83 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean84 = spaceManager67.assignBooking("empty", (int) (short) 0, booking83);
        java.lang.String str85 = booking83.getClientId();
        boolean boolean86 = parkingSpace62.assignBooking(booking83);
        int int87 = booking83.getDuration();
        boolean boolean88 = parkingSpace47.assignBooking(booking83);
        booking83.setStartTime("Paid $ 10.0 with Mobile Pay");
        java.lang.String str91 = booking83.getLicensePlate();
        boolean boolean92 = parkingSpace34.assignBooking(booking83);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parkingSpace20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "empty" + "'", str23, "empty");
        org.junit.Assert.assertNotNull(parkingLotIterator29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(parkingSpace34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "empty" + "'", str35, "empty");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(parkingSpace47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNull(booking49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "empty" + "'", str50, "empty");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(parkingSpace62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertNull(booking64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "empty" + "'", str65, "empty");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "staff" + "'", str85, "staff");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 32 + "'", int87 == 32);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "disabled" + "'", str91, "disabled");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.CheckInManager checkInManager11 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean13 = checkInManager11.checkOut("86z9Z9e0MN");
        checkInManager11.refundMessage = "09622cbf-e665-45db-b1ad-365065947a20";
        boolean boolean17 = checkInManager11.checkOut("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        boolean boolean19 = checkInManager11.checkIn("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(checkInManager11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        client0.assignProxy(parkingSpaceProxy17);
        java.lang.String str22 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5" + "'", str1, "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8" + "'", str22, "2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8");
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.ParkingLot parkingLot12 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = parkingLot12.assignBooking(0, booking14);
        boolean boolean17 = parkingLot12.isSpaceAvailable((int) '#');
        boolean boolean19 = parkingLot12.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace21 = parkingLot12.getParkingSpace((int) (byte) 10);
        int int22 = parkingSpace21.getSpaceId();
        ParkingSystem.Booking booking23 = parkingSpace21.getCurrentBooking();
        java.lang.String str24 = parkingSpace21.scanSpace();
        ParkingSystem.Enabled enabled25 = new ParkingSystem.Enabled();
        parkingSpace21.setState((ParkingSystem.SpaceState) enabled25);
        ParkingSystem.Disabled disabled27 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace28 = null;
        java.lang.String str29 = disabled27.scanSpace(parkingSpace28);
        ParkingSystem.Enabled enabled30 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot32 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking34 = null;
        boolean boolean35 = parkingLot32.assignBooking(0, booking34);
        boolean boolean37 = parkingLot32.isSpaceAvailable((int) '#');
        boolean boolean39 = parkingLot32.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace41 = parkingLot32.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking42 = parkingSpace41.getCurrentBooking();
        parkingSpace41.removeBooking();
        java.lang.String str44 = enabled30.scanSpace(parkingSpace41);
        ParkingSystem.ParkingLot parkingLot46 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking48 = null;
        boolean boolean49 = parkingLot46.assignBooking(0, booking48);
        boolean boolean51 = parkingLot46.isSpaceAvailable((int) '#');
        boolean boolean53 = parkingLot46.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace55 = parkingLot46.getParkingSpace((int) (byte) 10);
        int int56 = parkingSpace55.getSpaceId();
        ParkingSystem.Booking booking57 = parkingSpace55.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        boolean boolean76 = parkingSpace55.assignBooking(booking74);
        java.lang.String str77 = enabled30.scanSpace(parkingSpace55);
        java.lang.String str78 = disabled27.scanSpace(parkingSpace55);
        java.lang.String str79 = enabled25.scanSpace(parkingSpace55);
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled25);
        ParkingSystem.SpaceState spaceState81 = parkingSpace10.getState();
        ParkingSystem.SpaceState spaceState82 = parkingSpace10.getState();
        ParkingSystem.SpaceState spaceState83 = parkingSpace10.getState();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(parkingSpace21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNull(booking23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "empty" + "'", str24, "empty");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(parkingSpace41);
        org.junit.Assert.assertNull(booking42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "empty" + "'", str44, "empty");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(parkingSpace55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(booking57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "disabled" + "'", str77, "disabled");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "disabled" + "'", str78, "disabled");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "disabled" + "'", str79, "disabled");
        org.junit.Assert.assertNotNull(spaceState81);
        org.junit.Assert.assertNotNull(spaceState82);
        org.junit.Assert.assertNotNull(spaceState83);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Paid $ 100.0 with Mobile Pay", false);
        boolean boolean21 = parkingSpaceFacade0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "4a1f2343-8b2e-4dea-ba69-efd105414390", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "", (int) (byte) 1, "pass", (int) (byte) 10, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager22 = parkingSpaceFacade0.getBookingManager();
        double double24 = bookingManager22.getDeposit("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        ParkingSystem.BookingManager bookingManager25 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager26 = new ParkingSystem.CheckInManager(bookingManager25);
        ParkingSystem.SpaceManager spaceManager27 = bookingManager25.getSpaceManager();
        double double30 = bookingManager25.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit31 = new ParkingSystem.DebitOrCredit();
        bookingManager25.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean37 = debitOrCredit31.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str38 = debitOrCredit31.getPaymentMessage();
        boolean boolean43 = debitOrCredit31.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean46 = debitOrCredit31.validateCard("Jane", (double) '4');
        java.lang.String str47 = debitOrCredit31.getPaymentMessage();
        bookingManager22.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean53 = debitOrCredit31.processPayment("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", (double) 0, "8812812f-8c58-440e-9188-ca0b1f996ced", "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bookingManager22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 165.0d + "'", double30 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Card number should be 16 digits" + "'", str38, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Card number should be 16 digits" + "'", str47, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        ParkingSystem.AccountRegistry accountRegistry6 = null;
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj17 = parkingSpaceProxy14.login("empty", "Jane");
        parkingSpaceProxy14.validateClient("Jane");
        parkingSpaceProxy14.toggleSpace("", "staff", false);
        accountRegistry12.assignProxyToManager("pass", parkingSpaceProxy14);
        ParkingSystem.Client client26 = accountRegistry12.getClient("");
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry12);
        superManager7.registry = accountRegistry12;
        ParkingSystem.AccountRegistry accountRegistry29 = superManager7.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry34 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager35 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry34);
        superManager35.setManagerInfo("Paid $ 0.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay", "Refunded total cost of $1.0");
        ParkingSystem.User user40 = new ParkingSystem.User();
        java.lang.Object obj41 = user40.user;
        ParkingSystem.Client client42 = ParkingSystem.Client.getInstance();
        java.lang.String str43 = client42.getName();
        client42.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy46 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry47 = parkingSpaceProxy46.getRegistry();
        boolean boolean49 = parkingSpaceProxy46.checkIn("");
        client42.assignProxy(parkingSpaceProxy46);
        boolean boolean51 = client42.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy52 = new ParkingSystem.ParkingSpaceProxy();
        client42.assignProxy(parkingSpaceProxy52);
        ParkingSystem.AccountRegistry accountRegistry54 = parkingSpaceProxy52.getRegistry();
        boolean boolean56 = parkingSpaceProxy52.checkIn("hi!");
        user40.parkingProxy = parkingSpaceProxy52;
        superManager35.assignProxy(parkingSpaceProxy52);
        accountRegistry29.assignProxyToManager("jane", parkingSpaceProxy52);
        ParkingSystem.SuperManager superManager60 = ParkingSystem.SuperManager.createFromCSV("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "", "13b04414-31a5-407f-8ea3-fba4613c73d1", accountRegistry29);
        ParkingSystem.Manager manager61 = accountRegistry29.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertNotNull(superManager35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(client42);
// flaky "76) test1928(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str43, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(accountRegistry54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(superManager60);
        org.junit.Assert.assertNotNull(manager61);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        java.lang.String str8 = booking7.getLotId();
        booking7.setDuration((int) '4');
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "jane" + "'", str8, "jane");
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay11 = new ParkingSystem.MobilePay();
        boolean boolean16 = mobilePay11.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str17 = mobilePay11.getPaymentMessage();
        java.lang.String str18 = mobilePay11.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay11);
        paymentManager0.refundMessage = "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49";
        paymentManager0.refundMessage = "H33Itw4InT";
        java.lang.String str24 = paymentManager0.paymentMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str17, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        java.lang.String str20 = spaceManager0.scanSpace("h40rNQ7kR1", "disabled");
        java.lang.String str23 = spaceManager0.scanSpace("staff", "staff");
        spaceManager0.addParkingLot("4a1f2343-8b2e-4dea-ba69-efd105414390");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean15 = parkingSpaceFacade0.checkOut("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.BookingManager bookingManager16 = parkingSpaceFacade0.getBookingManager();
        boolean boolean18 = parkingSpaceFacade0.cancelBooking("Paid $ -1.0 with Mobile Pay");
        boolean boolean20 = parkingSpaceFacade0.checkIn("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(bookingManager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.Client client7 = ParkingSystem.Client.getInstance();
        java.lang.String str8 = client7.getName();
        client7.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        boolean boolean14 = parkingSpaceProxy11.checkIn("");
        client7.assignProxy(parkingSpaceProxy11);
        boolean boolean16 = client7.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        client7.assignProxy(parkingSpaceProxy17);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        client7.assignProxy(parkingSpaceProxy19);
        cSVManager0.saveClient(client7);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = client7.cancelBooking();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.cancelBooking(String)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "77) test1933(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "39) test1933(RegressionTest3)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(client7);
// flaky "17) test1933(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str8, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.addParkingLot("Refunded total cost of $1.0");
        spaceManager0.addParkingLot("hi!");
        spaceManager0.loadParkingLots();
        spaceManager0.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        parkingSpaceFacade0.addParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceFacade0.addParkingLot("hi!");
        ParkingSystem.CheckInManager checkInManager6 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean8 = checkInManager6.checkOut("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        java.lang.String str9 = checkInManager6.refundMessage;
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(checkInManager6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager9 = new ParkingSystem.SpaceManager();
        boolean boolean12 = spaceManager9.isSpaceAvailable("hi!", (int) '#');
        spaceManager9.toggleLot("disabled", false);
        ParkingSystem.Booking booking25 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean26 = spaceManager9.assignBooking("empty", (int) (short) 0, booking25);
        boolean boolean27 = spaceManager0.assignBooking("hi!", 0, booking25);
        double double28 = booking25.getTotalCost();
        booking25.setDuration((-1));
        int int31 = booking25.getDuration();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager19 = bookingManager0.getSpaceManager();
        double double21 = bookingManager0.getDeposit("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        double double23 = bookingManager0.getDeposit("Jane");
        ParkingSystem.AccountRegistry accountRegistry24 = bookingManager0.getAccountRegistry();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(spaceManager19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 15.0d + "'", double23 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry24);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Jane", "Refunded without deposit ($-42.0)", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (short) 10, "Paid $ -1.0 with Mobile Pay", (double) (short) 10);
        boolean boolean8 = booking7.isCheckedIn();
        booking7.setDuration((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean11 = parkingSpaceProxy0.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean21 = parkingSpaceProxy0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        boolean boolean23 = parkingSpaceProxy0.checkOut("Card number should be 16 digits");
        ParkingSystem.AccountRegistry accountRegistry24 = parkingSpaceProxy0.getRegistry();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(accountRegistry24);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str6 = mobilePay0.getPaymentMessage();
        boolean boolean11 = mobilePay0.processPayment("empty", (double) 4, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "ua4ppOLtSl");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str6, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        boolean boolean2 = parkingLot1.isEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        user0.register("ST001", "TXCrKOGD", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.BookingManager bookingManager27 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager27);
        ParkingSystem.Booking booking30 = bookingManager27.getBooking("");
        double double32 = bookingManager27.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay33 = new ParkingSystem.MobilePay();
        boolean boolean38 = mobilePay33.processPayment("hi!", (-1.0d), "", "");
        boolean boolean43 = mobilePay33.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean48 = mobilePay33.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager27.setPaymentStrategy((ParkingSystem.Strategy) mobilePay33);
        ParkingSystem.Booking booking51 = bookingManager27.getBooking("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Booking booking53 = bookingManager27.getBooking("pass");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap54 = bookingManager27.getActiveBookings();
        boolean boolean56 = bookingManager27.cancelBooking("CLT-45a3d895-9bc3-45d3-9068-d4559eae3183");
        ParkingSystem.MobilePay mobilePay57 = new ParkingSystem.MobilePay();
        boolean boolean62 = mobilePay57.processPayment("hi!", (-1.0d), "", "");
        boolean boolean67 = mobilePay57.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str68 = mobilePay57.getPaymentMessage();
        boolean boolean73 = mobilePay57.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded total cost of $1.0", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean78 = mobilePay57.processPayment("Paid $ 100.0 with Mobile Pay", 165.0d, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        bookingManager27.setPaymentStrategy((ParkingSystem.Strategy) mobilePay57);
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap80 = bookingManager27.getActiveBookings();
        user0.user = strMap80;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 15.0d + "'", double32 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(booking51);
        org.junit.Assert.assertNull(booking53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str68, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        parkingLot1.removeBooking((int) (short) -1);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) (byte) 0);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean24 = parkingSpaceProxy0.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        boolean boolean28 = parkingSpaceProxy0.editBooking("disabled", "Card number should be 16 digits", (int) (byte) -1);
        java.lang.Object obj31 = parkingSpaceProxy0.login("Paid $ 0.0 with Mobile Pay", "jane");
        java.lang.Object obj34 = parkingSpaceProxy0.login("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean36 = parkingSpaceProxy0.checkOut("Refunded total cost of $10.0");
        boolean boolean38 = parkingSpaceProxy0.checkIn("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        superManager19.setManagerInfo("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", "lL3e2yIMXI", "848f508e-e1d2-4f02-9fc9-e95eee425d36");
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        paymentManager0.paymentMessage = "";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap8 = accountRegistry6.getManagers();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry6);
        int int10 = accountRegistry6.getManagersSize();
        boolean boolean16 = accountRegistry6.registerClient("TXCrKOGD", "8812812f-8c58-440e-9188-ca0b1f996ced", "FNuxCiXmkP", "", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        java.lang.String str52 = parkingSpace28.scanSpace();
        ParkingSystem.Booking booking53 = parkingSpace28.getCurrentBooking();
        java.lang.String str54 = booking53.getLotId();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertNotNull(booking53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "jane" + "'", str54, "jane");
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean24 = parkingSpaceProxy0.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        boolean boolean28 = parkingSpaceProxy0.editBooking("disabled", "Card number should be 16 digits", (int) (byte) -1);
        java.lang.Object obj31 = parkingSpaceProxy0.login("Paid $ 0.0 with Mobile Pay", "jane");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade32 = parkingSpaceProxy0.getFacade();
        boolean boolean34 = parkingSpaceProxy0.checkOut("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(parkingSpaceFacade32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.validateClient("");
        parkingSpaceProxy0.autoGenerateManager();
        boolean boolean9 = parkingSpaceProxy0.extendBooking("Refunded total cost of $1.0", 1);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 10.0 with Mobile Pay", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 1, "2afd610d-a8cb-413a-bbee-7927f86b526c", (-1.0d));
        boolean boolean8 = booking7.isCheckedIn();
        java.lang.String str9 = booking7.getLotId();
        booking7.setStartTime("89de8237-29df-4908-9de4-6dc1ce90de94");
        java.lang.String str12 = booking7.getLotId();
        boolean boolean13 = booking7.isCheckedIn();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str9, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        client0.setClientInfo("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Paid $ -1.0 with Mobile Pay", "2afd610d-a8cb-413a-bbee-7927f86b526c", "2afd610d-a8cb-413a-bbee-7927f86b526c", "empty", "disabled", false);
        java.lang.String str23 = client0.getUsername();
        java.lang.String str24 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
// flaky "78) test1952(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "hi!" + "'", str1, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str23, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str24, "2afd610d-a8cb-413a-bbee-7927f86b526c");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        superManager7.registry = accountRegistry11;
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry11);
        java.lang.Object obj17 = accountRegistry11.login("CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc", "K6PkM9rcCx");
        ParkingSystem.Client client19 = accountRegistry11.getClient("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(client19);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        client0.setClientInfo("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Paid $ -1.0 with Mobile Pay", "2afd610d-a8cb-413a-bbee-7927f86b526c", "2afd610d-a8cb-413a-bbee-7927f86b526c", "empty", "disabled", false);
        java.lang.String str23 = client0.getUsername();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = client0.checkOut();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.checkOut(String)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str1, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str23, "2afd610d-a8cb-413a-bbee-7927f86b526c");
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap13 = accountRegistry11.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry16 = parkingSpaceProxy15.getRegistry();
        java.lang.String str19 = parkingSpaceProxy15.scanSpace("empty", "hi!");
        boolean boolean29 = parkingSpaceProxy15.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy15.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean39 = parkingSpaceProxy15.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry11.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy15);
        accountRegistry3.assignProxyToManager("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy15);
        ParkingSystem.Manager manager42 = accountRegistry3.autoGenerateManager();
        ParkingSystem.Manager manager43 = accountRegistry3.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(accountRegistry16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "disabled" + "'", str19, "disabled");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(manager42);
        org.junit.Assert.assertNotNull(manager43);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.toggleLot("fhd49ADb", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.SpaceManager spaceManager8 = bookingManager0.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap9 = bookingManager0.getActiveBookings();
        boolean boolean13 = bookingManager0.editBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", (int) '#');
        double double15 = bookingManager0.getDeposit("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        spaceManager4.addParkingLot("hi!");
        boolean boolean9 = spaceManager4.isSpaceAvailable("Paid $ 0.0 with Mobile Pay", (int) ' ');
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        boolean boolean15 = spaceManager12.isSpaceAvailable("hi!", (int) '#');
        spaceManager12.toggleLot("disabled", false);
        ParkingSystem.Booking booking28 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean29 = spaceManager12.assignBooking("empty", (int) (short) 0, booking28);
        boolean boolean30 = booking28.isCheckedIn();
        java.lang.String str31 = booking28.getClientId();
        java.lang.String str32 = booking28.getStartTime();
        boolean boolean33 = spaceManager4.assignBooking("ST001", (int) ' ', booking28);
        spaceManager4.toggleLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", true);
        spaceManager4.removeBooking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", (int) '4');
        spaceManager4.removeBooking("CLT-f5f3129f-6f77-4a04-a68b-486f89449455", (-1));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "staff" + "'", str31, "staff");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Jane" + "'", str32, "Jane");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double17 = bookingManager0.getHourlyRate("Paid $ 0.0 with Mobile Pay");
        boolean boolean22 = bookingManager0.extendBooking("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (int) (byte) -1, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4");
        double double25 = bookingManager0.calculateCost("9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (short) 0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 15.0d + "'", double17 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 15.0d + "'", double25 == 15.0d);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap16 = bookingManager0.getActiveBookings();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = parkingSpaceProxy15.getFacade();
        boolean boolean23 = parkingSpaceFacade20.extendBooking("empty", (-1));
        boolean boolean26 = parkingSpaceFacade20.extendBooking("Refunded without deposit ($-42.0)", (int) (short) 0);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(parkingSpaceFacade20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        parkingSpaceFacade17.toggleSpace("pass", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        ParkingSystem.SpaceManager spaceManager22 = parkingSpaceFacade17.getSpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("Refunded total cost of $10.0", (int) (byte) -1);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        client0.assignProxy(parkingSpaceProxy10);
        ParkingSystem.Booking booking12 = client0.getBookingDetails();
        client0.setClientInfo("ST001", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "", "CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", "qPYDfDnbtD", "Paid $ 1.0 with Mobile Pay", true);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(booking12);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = bookingManager0.extendBooking("jane", (int) (byte) 100, "hi!", "jane");
        ParkingSystem.SpaceManager spaceManager7 = bookingManager0.getSpaceManager();
        boolean boolean11 = bookingManager0.editBooking("CLT-92729d37-9255-42b4-9361-c1978aadacb0", "", 2);
        double double13 = bookingManager0.getHourlyRate("CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spaceManager7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 15.0d + "'", double13 == 15.0d);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        java.lang.String str13 = client0.getName();
        boolean boolean15 = client0.extendBooking((int) (short) 0);
        java.lang.String str16 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "06b0adae-5a80-41cd-b7f6-6da51afdd4f5" + "'", str1, "06b0adae-5a80-41cd-b7f6-6da51afdd4f5");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        ParkingSystem.SpaceManager spaceManager16 = bookingManager0.getSpaceManager();
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int27 = booking26.getDuration();
        java.lang.String str28 = booking26.getClientId();
        booking26.setStartTime("hi!");
        boolean boolean31 = booking26.isCheckedIn();
        java.lang.String str32 = booking26.getLotId();
        boolean boolean33 = spaceManager16.assignBooking("", 52, booking26);
        spaceManager16.toggleLot("", true);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager16);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "staff" + "'", str28, "staff");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "jane" + "'", str32, "jane");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        boolean boolean6 = parkingLot1.isEnabled();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade6 = parkingSpaceProxy0.getFacade();
        ParkingSystem.Booking booking8 = parkingSpaceFacade6.getBookingDetails("Paid $ 15.0 with Mobile Pay");
        boolean boolean10 = parkingSpaceFacade6.checkIn("CLT-b6a8264c-f386-4429-b59c-b7f465002e13");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade6);
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap19 = bookingManager18.getActiveBookings();
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager18);
        boolean boolean22 = checkInManager20.checkIn("Paid $ 1.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        ParkingSystem.Manager manager0 = ParkingSystem.Manager.getInstance();
        manager0.setManagerInfo("hi!", "disabled", "hi!");
        java.lang.String str5 = manager0.getManagerId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = null;
        manager0.assignProxy(parkingSpaceProxy6);
        java.lang.String str8 = manager0.getManagerId();
        java.lang.String str9 = manager0.getManagerId();
        manager0.setManagerInfo("Paid $ 15.0 with Mobile Pay", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "");
        org.junit.Assert.assertNotNull(manager0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        ParkingSystem.ParkingLot parkingLot13 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking15 = null;
        boolean boolean16 = parkingLot13.assignBooking(0, booking15);
        boolean boolean18 = parkingLot13.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking27 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean28 = parkingLot13.assignBooking((int) (short) -1, booking27);
        java.lang.String str29 = booking27.getLotId();
        java.lang.String str30 = booking27.getLicensePlate();
        booking27.setStartTime("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        booking27.setDuration((int) (short) 10);
        boolean boolean35 = spaceManager0.assignBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", (-1), booking27);
        booking27.setStartTime("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        int int38 = booking27.getSpaceId();
        java.lang.String str39 = booking27.getStartTime();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "jane" + "'", str29, "jane");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "disabled" + "'", str30, "disabled");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CLT-035180a0-4707-410d-a011-2a4f0f46838b" + "'", str39, "CLT-035180a0-4707-410d-a011-2a4f0f46838b");
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLotIterator parkingLotIterator8 = parkingLot1.getIterator();
        boolean boolean10 = parkingLot1.isSpaceAvailable(1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        java.lang.String str17 = booking15.getLotId();
        java.lang.String str18 = booking15.getLicensePlate();
        booking15.setStartTime("hi!");
        java.lang.String str21 = booking15.getStartTime();
        booking15.setCheckedIn(false);
        int int24 = booking15.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "jane" + "'", str17, "jane");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("Jane", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 100, "jane", (int) (short) 1, "pass", (double) 10);
        int int8 = booking7.getDuration();
        int int9 = booking7.getDuration();
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime10 = booking7.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean4 = parkingSpaceFacade0.cancelBooking("jane");
        boolean boolean7 = parkingSpaceFacade0.extendBooking("hi!", (-1));
        parkingSpaceFacade0.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        parkingSpaceFacade0.toggleSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 10.0 with Mobile Pay", true);
        ParkingSystem.SpaceManager spaceManager15 = parkingSpaceFacade0.getSpaceManager();
        spaceManager15.toggleLot("Paid $ 1.0 with Mobile Pay", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(spaceManager15);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry3 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.Manager manager4 = accountRegistry3.autoGenerateManager();
        java.lang.Object obj7 = accountRegistry3.login("433f3d1f-f758-4ae3-972b-7fb179aedfd7", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.Client client9 = ParkingSystem.Client.getInstance();
        java.lang.String str10 = client9.getName();
        client9.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str19 = client9.getUsername();
        java.lang.String str20 = client9.getPassword();
        java.lang.String str21 = client9.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = null;
        client9.assignProxy(parkingSpaceProxy22);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj27 = parkingSpaceProxy24.login("empty", "Jane");
        client9.assignProxy(parkingSpaceProxy24);
        accountRegistry3.assignProxyToManager("I673kmcH", parkingSpaceProxy24);
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(accountRegistry3);
        org.junit.Assert.assertNotNull(manager4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        superManager7.registry = accountRegistry11;
        ParkingSystem.Client client15 = accountRegistry11.getClient("empty");
        boolean boolean21 = accountRegistry11.registerClient("Paid $ -1.0 with Mobile Pay", "jane", "hi!", "Refunded total cost of $1.0", "");
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", accountRegistry11);
        java.lang.Object obj25 = accountRegistry11.login("hi!", "848f508e-e1d2-4f02-9fc9-e95eee425d36");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNull(client15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(superManager22);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        ParkingSystem.ParkingLot parkingLot7 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking9 = null;
        boolean boolean10 = parkingLot7.assignBooking(0, booking9);
        boolean boolean12 = parkingLot7.isSpaceAvailable((int) '#');
        boolean boolean14 = parkingLot7.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace16 = parkingLot7.getParkingSpace((int) (byte) 10);
        int int17 = parkingSpace16.getSpaceId();
        ParkingSystem.Booking booking18 = parkingSpace16.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager19 = new ParkingSystem.SpaceManager();
        boolean boolean22 = spaceManager19.isSpaceAvailable("hi!", (int) '#');
        spaceManager19.toggleLot("disabled", false);
        ParkingSystem.Booking booking35 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean36 = spaceManager19.assignBooking("empty", (int) (short) 0, booking35);
        boolean boolean37 = parkingSpace16.assignBooking(booking35);
        ParkingSystem.SpaceManager spaceManager38 = new ParkingSystem.SpaceManager();
        boolean boolean41 = spaceManager38.isSpaceAvailable("hi!", (int) '#');
        spaceManager38.toggleLot("disabled", false);
        ParkingSystem.Booking booking54 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean55 = spaceManager38.assignBooking("empty", (int) (short) 0, booking54);
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        boolean boolean76 = spaceManager38.assignBooking("disabled", (int) (byte) 0, booking74);
        boolean boolean77 = parkingSpace16.assignBooking(booking74);
        boolean boolean78 = spaceManager0.assignBooking("", (int) (short) 1, booking74);
        boolean boolean81 = spaceManager0.isSpaceAvailable("hi!", (int) (byte) 1);
        boolean boolean84 = spaceManager0.isSpaceAvailable("hi!", 3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(parkingSpace16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNull(booking18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager9 = new ParkingSystem.SpaceManager();
        boolean boolean12 = spaceManager9.isSpaceAvailable("hi!", (int) '#');
        spaceManager9.toggleLot("disabled", false);
        ParkingSystem.Booking booking25 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean26 = spaceManager9.assignBooking("empty", (int) (short) 0, booking25);
        boolean boolean27 = spaceManager0.assignBooking("hi!", 0, booking25);
        booking25.setStartTime("2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy0.toggleLot("hi!", false);
        parkingSpaceProxy0.validateClient("3b453211-7dd1-4452-8741-a206711c1217");
        boolean boolean14 = parkingSpaceProxy0.checkIn("disabled");
        parkingSpaceProxy0.addParkingLot("CLT-f02c481e-1504-4abf-b598-76152da8586a");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        superManager4.validateClient("Refunded without deposit ($-42.0)");
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.registry;
        superManager4.validateClient("qPYDfDnbtD");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry7);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("staff");
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.toggleSpace("jane", "Paid $ -1.0 with Mobile Pay", false);
        boolean boolean16 = parkingSpaceProxy0.confirmBooking("hi!", "Refunded without deposit ($0.0)", "hi!", "Refunded without deposit ($-42.0)", 0, "Refunded total cost of $1.0", 0, "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "hi!");
        java.lang.Object obj19 = parkingSpaceProxy0.login("CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "Refunded total cost of $0.0");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        ParkingSystem.BookingManager bookingManager28 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager29 = new ParkingSystem.CheckInManager(bookingManager28);
        ParkingSystem.Booking booking31 = bookingManager28.getBooking("");
        ParkingSystem.SpaceManager spaceManager32 = bookingManager28.getSpaceManager();
        boolean boolean42 = bookingManager28.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double44 = bookingManager28.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit45 = new ParkingSystem.DebitOrCredit();
        bookingManager28.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit45);
        java.lang.String str47 = debitOrCredit45.getPaymentMessage();
        java.lang.String str48 = debitOrCredit45.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit45);
        java.lang.String str50 = paymentManager0.refundMessage;
        paymentManager0.refundMessage = "Refunded without deposit ($-96.0)";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertNotNull(spaceManager32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 15.0d + "'", double44 == 15.0d);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str50, "Refunded without deposit ($-96.0)");
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        boolean boolean11 = client2.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        client2.assignProxy(parkingSpaceProxy12);
        ParkingSystem.AccountRegistry accountRegistry14 = parkingSpaceProxy12.getRegistry();
        boolean boolean16 = parkingSpaceProxy12.checkIn("hi!");
        user0.parkingProxy = parkingSpaceProxy12;
        user0.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy25 = user0.parkingProxy;
        user0.register("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "jane", "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "aswfJGJtdF", "");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "empty" + "'", str3, "empty");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(accountRegistry14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy24);
        org.junit.Assert.assertNotNull(parkingSpaceProxy25);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int8 = booking7.getDuration();
        java.lang.String str9 = booking7.getClientId();
        java.lang.String str10 = booking7.getLotId();
        int int11 = booking7.getDuration();
        booking7.setCheckedIn(false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "staff" + "'", str9, "staff");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "jane" + "'", str10, "jane");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = user0.parkingProxy;
        java.lang.Object obj20 = user0.login("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        java.lang.Object obj23 = user0.login("Paid $ 1470.0 with Mobile Pay", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        user0.register("09622cbf-e665-45db-b1ad-365065947a20", "Refunded total cost of $0.0", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "fhd49ADb", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
// flaky "79) test1987(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceProxy17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean10 = parkingSpaceProxy0.extendBooking("pass", (int) (byte) 10);
        ParkingSystem.AccountRegistry accountRegistry11 = parkingSpaceProxy0.getRegistry();
        boolean boolean14 = parkingSpaceProxy0.extendBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) '#');
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(accountRegistry11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        java.lang.String str19 = superManager18.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry20 = superManager18.registry;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager18);
        java.lang.String str22 = superManager18.getPassword();
        ParkingSystem.AccountRegistry accountRegistry23 = null;
        superManager18.registry = accountRegistry23;
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188" + "'", str19, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "848f508e-e1d2-4f02-9fc9-e95eee425d36" + "'", str22, "848f508e-e1d2-4f02-9fc9-e95eee425d36");
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceFacade9.toggleSpace("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "empty", true);
        org.junit.Assert.assertNotNull(client0);
// flaky "80) test1990(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str1, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap20 = bookingManager0.getActiveBookings();
        boolean boolean24 = bookingManager0.editBooking("Refunded without deposit ($0.0)", "staff", (int) (short) 1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.Disabled disabled21 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace22 = null;
        java.lang.String str23 = disabled21.scanSpace(parkingSpace22);
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot26 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking28 = null;
        boolean boolean29 = parkingLot26.assignBooking(0, booking28);
        boolean boolean31 = parkingLot26.isSpaceAvailable((int) '#');
        boolean boolean33 = parkingLot26.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace35 = parkingLot26.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking36 = parkingSpace35.getCurrentBooking();
        parkingSpace35.removeBooking();
        java.lang.String str38 = enabled24.scanSpace(parkingSpace35);
        ParkingSystem.ParkingLot parkingLot40 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking42 = null;
        boolean boolean43 = parkingLot40.assignBooking(0, booking42);
        boolean boolean45 = parkingLot40.isSpaceAvailable((int) '#');
        boolean boolean47 = parkingLot40.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace49 = parkingLot40.getParkingSpace((int) (byte) 10);
        int int50 = parkingSpace49.getSpaceId();
        ParkingSystem.Booking booking51 = parkingSpace49.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = parkingSpace49.assignBooking(booking68);
        java.lang.String str71 = enabled24.scanSpace(parkingSpace49);
        java.lang.String str72 = disabled21.scanSpace(parkingSpace49);
        user0.user = str72;
        user0.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "Jane", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Client client80 = ParkingSystem.Client.getInstance();
        java.lang.String str81 = client80.getName();
        java.lang.String str82 = client80.getClientId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy83 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj86 = parkingSpaceProxy83.login("empty", "Jane");
        parkingSpaceProxy83.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        client80.assignProxy(parkingSpaceProxy83);
        user0.user = parkingSpaceProxy83;
        user0.register("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "Refunded total cost of $1.0", "ST001", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy99 = user0.parkingProxy;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpace35);
        org.junit.Assert.assertNull(booking36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "empty" + "'", str38, "empty");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(parkingSpace49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNull(booking51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "disabled" + "'", str71, "disabled");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "disabled" + "'", str72, "disabled");
        org.junit.Assert.assertNotNull(client80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str81, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
// flaky "81) test1992(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "CLT-22138484-eb59-490e-9c41-9fd9c319dcda" + "'", str82, "CLT-22138484-eb59-490e-9c41-9fd9c319dcda");
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(parkingSpaceProxy99);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.displayPendingValidations();
        parkingSpaceProxy1.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy1.getFacade();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy1.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj23 = parkingSpaceProxy20.login("empty", "Jane");
        parkingSpaceProxy20.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        java.lang.Object obj30 = parkingSpaceProxy20.login("Paid $ 0.0 with Mobile Pay", "CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        accountRegistry18.assignProxyToClient("", parkingSpaceProxy20);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = spaceManager32.assignBooking("disabled", (int) (byte) 0, booking68);
        boolean boolean71 = parkingSpace10.assignBooking(booking68);
        booking68.setDuration(0);
        java.lang.String str74 = booking68.getStartTime();
        booking68.setDuration(10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Jane" + "'", str74, "Jane");
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double18 = bookingManager0.calculateCost("Paid $ 10.0 with Mobile Pay", (int) (byte) 1);
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.MobilePay mobilePay20 = new ParkingSystem.MobilePay();
        boolean boolean25 = mobilePay20.processPayment("hi!", (-1.0d), "", "");
        boolean boolean30 = mobilePay20.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean35 = mobilePay20.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        boolean boolean40 = mobilePay20.processPayment("Paid $ 100.0 with Mobile Pay", (double) (short) 0, "Paid $ -1.0 with Mobile Pay", "Jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay20);
        double double43 = bookingManager0.getDeposit("8812812f-8c58-440e-9188-ca0b1f996ced");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 30.0d + "'", double18 == 30.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 15.0d + "'", double43 == 15.0d);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        parkingLot1.setEnabled(true);
        parkingLot1.removeBooking((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator11 = parkingLot1.getIterator();
        parkingLot1.removeBooking((int) (short) 100);
        parkingLot1.removeBooking(0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator11);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        java.lang.String str2 = client0.getClientId();
        java.lang.String str3 = client0.getClientType();
        boolean boolean11 = client0.confirmBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", (-1), "qMzKSKOI", (int) (byte) 100, "8bf217fa-1769-4d04-858b-ce78fe94bf0c", "");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753" + "'", str1, "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
// flaky "82) test1997(RegressionTest3)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f" + "'", str2, "CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ST001" + "'", str3, "ST001");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        client0.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        boolean boolean27 = client0.confirmBooking("K6PkM9rcCx", "848f508e-e1d2-4f02-9fc9-e95eee425d36", (int) ' ', "9701df9a-2178-4ad5-8076-46ff5f05b3e8", 10, "Paid $ -1.0 with Mobile Pay", "");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-631eb509-a6c4-407c-b16d-582a6faabddb" + "'", str1, "CLT-631eb509-a6c4-407c-b16d-582a6faabddb");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753" + "'", str10, "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CLT-631eb509-a6c4-407c-b16d-582a6faabddb" + "'", str11, "CLT-631eb509-a6c4-407c-b16d-582a6faabddb");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = spaceManager0.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        spaceManager0.addParkingLot("pass");
        spaceManager0.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap16 = spaceManager0.getParkingLots();
        spaceManager0.toggleLot("CLT-390234b0-d56e-4275-bd7b-122280609c69", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("pass");
        parkingLot1.removeBooking(0);
        parkingLot1.removeBooking((int) (short) 1);
    }
}
