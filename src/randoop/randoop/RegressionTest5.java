package randoop;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("FNuxCiXmkP", "Refunded total cost of $100.0", 0, "89de8237-29df-4908-9de4-6dc1ce90de94", (int) (byte) 1, "disabled", (double) (byte) 10);
        java.lang.String str8 = booking7.getStartTime();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "89de8237-29df-4908-9de4-6dc1ce90de94" + "'", str8, "89de8237-29df-4908-9de4-6dc1ce90de94");
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        boolean boolean2 = paymentManager0.refundDeposit(100.0d);
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getUsername();
        boolean boolean23 = client0.confirmBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b", "Jane", 0, "disabled", (int) (byte) 0, "4a1f2343-8b2e-4dea-ba69-efd105414390", "hi!");
        boolean boolean31 = client0.confirmBooking("ST001", "pass", (int) (short) 1, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", 52, "Paid $ 100.0 with Mobile Pay", "CLT-4aab5c22-53d4-41cb-8ccf-dd435bb7f17b");
        org.junit.Assert.assertNotNull(client0);
// flaky "1) test2503(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "1) test2503(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Refunded total cost of $1.0" + "'", str10, "Refunded total cost of $1.0");
// flaky "1) test2503(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "empty" + "'", str11, "empty");
// flaky "1) test2503(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "empty" + "'", str12, "empty");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
// flaky "1) test2503(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "pass" + "'", str14, "pass");
// flaky "1) test2503(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Jane" + "'", str15, "Jane");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str6 = mobilePay0.getPaymentMessage();
        boolean boolean11 = mobilePay0.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = mobilePay0.getPaymentMessage();
        boolean boolean17 = mobilePay0.processPayment("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 15.0d, "Paid $ 10.0 with Mobile Pay", "Paid $ 1470.0 with Mobile Pay");
        java.lang.String str18 = mobilePay0.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str6, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 15.0 with Mobile Pay" + "'", str18, "Paid $ 15.0 with Mobile Pay");
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getPassword();
        boolean boolean17 = client0.extendBooking((int) (short) 10);
        java.lang.String str18 = client0.getClientType();
        boolean boolean19 = client0.checkOut();
        boolean boolean22 = client0.editBooking("Paid $ 1.0 with Mobile Pay", 2);
        java.lang.String str23 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
// flaky "2) test2505(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.checkOut();
        java.lang.String str10 = client0.getName();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray5 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.CSVManager cSVManager7 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade8 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager9 = parkingSpaceFacade8.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager10 = parkingSpaceFacade8.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap11 = spaceManager10.getParkingLots();
        cSVManager7.loadParkingLots(strMap11);
        java.lang.String[] strArray13 = cSVManager7.loadSuperManager();
        java.util.List<java.lang.String[]> strArrayList15 = cSVManager7.readCSV("disabled");
        ParkingSystem.CSVManager cSVManager16 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager18 = parkingSpaceFacade17.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager19 = parkingSpaceFacade17.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap20 = spaceManager19.getParkingLots();
        cSVManager16.loadParkingLots(strMap20);
        cSVManager7.loadParkingLots(strMap20);
        cSVManager0.loadParkingLots(strMap20);
        cSVManager0.updateClientValidation("pass", true);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArray5);
// flaky "3) test2507(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray5, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray6);
// flaky "2) test2507(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(checkInManager9);
        org.junit.Assert.assertNotNull(spaceManager10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strArray13);
// flaky "2) test2507(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray13, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList15);
        org.junit.Assert.assertNotNull(checkInManager18);
        org.junit.Assert.assertNotNull(spaceManager19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade9.getBookingManager();
        ParkingSystem.BookingManager bookingManager13 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager14 = new ParkingSystem.CheckInManager(bookingManager13);
        ParkingSystem.SpaceManager spaceManager15 = bookingManager13.getSpaceManager();
        double double18 = bookingManager13.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit19 = new ParkingSystem.DebitOrCredit();
        bookingManager13.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit19);
        boolean boolean25 = debitOrCredit19.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str26 = debitOrCredit19.getPaymentMessage();
        boolean boolean29 = debitOrCredit19.validateCard("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (double) (short) 1);
        bookingManager12.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit19);
        boolean boolean33 = debitOrCredit19.validateCard("Refunded without deposit ($-42.0)", (double) 2);
        java.lang.String str34 = debitOrCredit19.getPaymentMessage();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
        org.junit.Assert.assertNotNull(spaceManager15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 165.0d + "'", double18 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Card number should be 16 digits" + "'", str26, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Card number should be 16 digits" + "'", str34, "Card number should be 16 digits");
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray5 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        cSVManager0.updateClientValidation("CLT-f02c481e-1504-4abf-b598-76152da8586a", true);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArray5);
// flaky "4) test2509(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray5, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray6);
// flaky "3) test2509(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.paymentMessage = "pass";
        java.lang.String str6 = paymentManager0.paymentMessage;
        paymentManager0.paymentMessage = "433f3d1f-f758-4ae3-972b-7fb179aedfd7";
        ParkingSystem.PaymentManager paymentManager9 = new ParkingSystem.PaymentManager();
        java.lang.String str10 = paymentManager9.refundMessage;
        boolean boolean12 = paymentManager9.refundTotalCost((-1.0d));
        java.lang.String str13 = paymentManager9.paymentMessage;
        ParkingSystem.BookingManager bookingManager14 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager15 = new ParkingSystem.CheckInManager(bookingManager14);
        ParkingSystem.Booking booking17 = bookingManager14.getBooking("");
        ParkingSystem.SpaceManager spaceManager18 = bookingManager14.getSpaceManager();
        boolean boolean28 = bookingManager14.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double30 = bookingManager14.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit31 = new ParkingSystem.DebitOrCredit();
        bookingManager14.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        paymentManager9.setStrategy((ParkingSystem.Strategy) debitOrCredit31);
        java.lang.String str34 = debitOrCredit31.getPaymentMessage();
        boolean boolean39 = debitOrCredit31.processPayment("Refunded total cost of $0.0", (double) 1.0f, "K6PkM9rcCx", "CLT-55105d92-54d6-44d2-965a-736022b7f7cd");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit31);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pass" + "'", str6, "pass");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(booking17);
        org.junit.Assert.assertNotNull(spaceManager18);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 15.0d + "'", double30 == 15.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager9 = new ParkingSystem.SpaceManager();
        boolean boolean12 = spaceManager9.isSpaceAvailable("hi!", (int) '#');
        spaceManager9.toggleLot("disabled", false);
        ParkingSystem.Booking booking25 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean26 = spaceManager9.assignBooking("empty", (int) (short) 0, booking25);
        boolean boolean27 = spaceManager0.assignBooking("hi!", 0, booking25);
        double double28 = booking25.getTotalCost();
        booking25.setDuration((-1));
        java.lang.String str31 = booking25.getLotId();
        int int32 = booking25.getDuration();
        booking25.setStartTime("Refunded without deposit ($0.0)");
        double double35 = booking25.getTotalCost();
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime36 = booking25.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Refunded without deposit ($0.0)' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "jane" + "'", str31, "jane");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        boolean boolean7 = bookingManager0.cancelBooking("13b04414-31a5-407f-8ea3-fba4613c73d1");
        double double9 = bookingManager0.getHourlyRate("89de8237-29df-4908-9de4-6dc1ce90de94");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 15.0d + "'", double9 == 15.0d);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        boolean boolean17 = accountRegistry14.requiresValidation("disabled");
        int int18 = accountRegistry14.getManagersSize();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.getRegistry();
        superManager4.registry = accountRegistry20;
        ParkingSystem.AccountRegistry accountRegistry25 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager26 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry25);
        boolean boolean28 = accountRegistry25.requiresValidation("disabled");
        int int29 = accountRegistry25.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj34 = parkingSpaceProxy31.login("empty", "Jane");
        parkingSpaceProxy31.validateClient("Jane");
        parkingSpaceProxy31.toggleSpace("", "staff", false);
        boolean boolean42 = parkingSpaceProxy31.cancelBooking("Jane");
        accountRegistry25.assignProxyToClient("pass", parkingSpaceProxy31);
        boolean boolean49 = parkingSpaceProxy31.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean55 = parkingSpaceProxy31.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        java.lang.String str58 = parkingSpaceProxy31.scanSpace("13b04414-31a5-407f-8ea3-fba4613c73d1", "Jane");
        superManager4.assignProxy(parkingSpaceProxy31);
        ParkingSystem.Manager manager60 = superManager4.autoGenerateManager();
        superManager4.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager4);
// flaky "5) test2513(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str5, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
// flaky "4) test2513(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str6, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(superManager26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "disabled" + "'", str58, "disabled");
        org.junit.Assert.assertNotNull(manager60);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        ParkingSystem.Client client30 = ParkingSystem.Client.getInstance();
        java.lang.String str31 = client30.getClientType();
        boolean boolean39 = client30.confirmBooking("", "pass", (int) (byte) 0, "Paid $ 10.0 with Mobile Pay", (int) (byte) 0, "", "Jane");
        boolean boolean40 = client30.checkOut();
        cSVManager0.saveClient(client30);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap42 = null;
        // The following exception was thrown during execution in test generation
        try {
            cSVManager0.saveParkingLots(strMap42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Map.values()\" because \"parkingLots\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "6) test2514(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "5) test2514(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(client30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "jane" + "'", str31, "jane");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        double double21 = bookingManager0.getDeposit("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.AccountRegistry accountRegistry22 = bookingManager0.getAccountRegistry();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry22);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        java.lang.String str20 = superManager19.getName();
        superManager19.setManagerInfo("12fea0ad-7859-47d9-95f1-1985d2c4ed33", "5XQfkf24zK", "86z9Z9e0MN");
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
// flaky "7) test2516(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e" + "'", str20, "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e");
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double4 = bookingManager0.getHourlyRate("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        double double7 = bookingManager0.calculateCost("86z9Z9e0MN", (int) (byte) 1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 15.0d + "'", double4 == 15.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 30.0d + "'", double7 == 30.0d);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        ParkingSystem.Client client6 = ParkingSystem.Client.getInstance();
        java.lang.String str7 = client6.getName();
        client6.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str16 = client6.getUsername();
        java.lang.String str17 = client6.getPassword();
        java.lang.String str18 = client6.getClientType();
        boolean boolean19 = client6.getIsValidated();
        boolean boolean27 = client6.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str28 = client6.getName();
        cSVManager0.saveClient(client6);
        ParkingSystem.BookingManager bookingManager30 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager31 = new ParkingSystem.CheckInManager(bookingManager30);
        ParkingSystem.Booking booking33 = bookingManager30.getBooking("");
        ParkingSystem.SpaceManager spaceManager34 = bookingManager30.getSpaceManager();
        boolean boolean44 = bookingManager30.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double46 = bookingManager30.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit47 = new ParkingSystem.DebitOrCredit();
        bookingManager30.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit47);
        ParkingSystem.CheckInManager checkInManager49 = new ParkingSystem.CheckInManager(bookingManager30);
        ParkingSystem.CheckInManager checkInManager50 = new ParkingSystem.CheckInManager(bookingManager30);
        ParkingSystem.SpaceManager spaceManager51 = bookingManager30.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap52 = spaceManager51.getParkingLots();
        cSVManager0.loadParkingLots(strMap52);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade54 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str57 = parkingSpaceFacade54.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager58 = parkingSpaceFacade54.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap59 = spaceManager58.getParkingLots();
        cSVManager0.loadParkingLots(strMap59);
        cSVManager0.updateClientValidation("CLT-390234b0-d56e-4275-bd7b-122280609c69", true);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str7, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(booking33);
        org.junit.Assert.assertNotNull(spaceManager34);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 15.0d + "'", double46 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "disabled" + "'", str57, "disabled");
        org.junit.Assert.assertNotNull(spaceManager58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean14 = paymentManager0.processPayment("hi!", (double) 0.0f, "empty", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str15 = paymentManager0.paymentMessage;
        boolean boolean18 = paymentManager0.refundWithoutDeposit(10.0d, (double) 1L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded total cost of $1.0" + "'", str7, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str15, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        java.lang.String str6 = spaceManager0.scanSpace("jane", "");
        spaceManager0.removeBooking("CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        boolean boolean11 = parkingSpaceProxy0.cancelBooking("Jane");
        boolean boolean13 = parkingSpaceProxy0.checkOut("empty");
        parkingSpaceProxy0.toggleSpace("H33Itw4InT", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", false);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceFacade9.toggleLot("ST001", false);
        ParkingSystem.Booking booking14 = parkingSpaceFacade9.getBookingDetails("3b453211-7dd1-4452-8741-a206711c1217");
        ParkingSystem.BookingManager bookingManager15 = parkingSpaceFacade9.getBookingManager();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertNotNull(bookingManager15);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        java.util.List<java.lang.String[]> strArrayList25 = cSVManager0.readCSV("Jane");
        ParkingSystem.AccountRegistry accountRegistry35 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager36 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry35);
        boolean boolean38 = accountRegistry35.requiresValidation("disabled");
        int int39 = accountRegistry35.getManagersSize();
        ParkingSystem.SuperManager superManager40 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry35);
        ParkingSystem.AccountRegistry accountRegistry41 = superManager40.getRegistry();
        accountRegistry41.validateClient("pass");
        ParkingSystem.SuperManager superManager44 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry41);
        cSVManager0.saveManager((ParkingSystem.Manager) superManager44);
        ParkingSystem.AccountRegistry accountRegistry46 = null;
        superManager44.registry = accountRegistry46;
        // The following exception was thrown during execution in test generation
        try {
            ParkingSystem.Manager manager48 = superManager44.autoGenerateManager();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.AccountRegistry.autoGenerateManager()\" because \"this.registry\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "8) test2523(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "6) test2523(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(strArrayList25);
        org.junit.Assert.assertNotNull(superManager36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(superManager40);
        org.junit.Assert.assertNotNull(accountRegistry41);
        org.junit.Assert.assertNotNull(superManager44);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        boolean boolean24 = client0.confirmBooking("Refunded without deposit ($0.0)", "Paid $ 10.0 with Mobile Pay", 1, "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) '4', "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        boolean boolean25 = client0.checkOut();
        boolean boolean26 = client0.cancelBooking();
        boolean boolean34 = client0.confirmBooking("ua4ppOLtSl", "4a1f2343-8b2e-4dea-ba69-efd105414390", (int) (short) 100, "WxoDOyjI", (int) (byte) 10, "83a51dc6-0c8f-4f21-ae40-68699828f95d", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getPassword();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str5, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "86z9Z9e0MN" + "'", str6, "86z9Z9e0MN");
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean21 = client0.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str22 = client0.getName();
        boolean boolean24 = client0.extendBooking((int) ' ');
        boolean boolean25 = client0.getIsValidated();
        boolean boolean26 = client0.checkOut();
        java.lang.String str27 = client0.getClientType();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy28 = null;
        client0.assignProxy(parkingSpaceProxy28);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "disabled" + "'", str27, "disabled");
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        spaceManager0.loadParkingLots();
        spaceManager0.loadParkingLots();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        client0.setClientInfo("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Paid $ -1.0 with Mobile Pay", "2afd610d-a8cb-413a-bbee-7927f86b526c", "2afd610d-a8cb-413a-bbee-7927f86b526c", "empty", "disabled", false);
        boolean boolean23 = client0.getIsValidated();
        java.lang.String str24 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy25 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj28 = parkingSpaceProxy25.login("empty", "Jane");
        parkingSpaceProxy25.validateClient("Jane");
        java.lang.String str33 = parkingSpaceProxy25.scanSpace("", "");
        java.lang.Object obj36 = parkingSpaceProxy25.login("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff");
        parkingSpaceProxy25.toggleLot("Refunded without deposit ($-42.0)", false);
        boolean boolean49 = parkingSpaceProxy25.confirmBooking("Paid $ 10.0 with Mobile Pay", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Paid $ 10.0 with Mobile Pay", 1, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", (-1), "Refunded total cost of $-1.0", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        parkingSpaceProxy25.displayPendingValidations();
        client0.assignProxy(parkingSpaceProxy25);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str24, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "disabled" + "'", str33, "disabled");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean26 = bookingManager0.confirmBooking("empty", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Refunded total cost of $1.0", (int) (byte) 1, "Card number should be 16 digits", 32, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled");
        ParkingSystem.BookingManager bookingManager27 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager27);
        ParkingSystem.SpaceManager spaceManager29 = bookingManager27.getSpaceManager();
        double double32 = bookingManager27.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit33 = new ParkingSystem.DebitOrCredit();
        bookingManager27.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        boolean boolean39 = debitOrCredit33.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str40 = debitOrCredit33.getPaymentMessage();
        boolean boolean43 = debitOrCredit33.validateCard("pass", (double) 100.0f);
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        java.lang.String str45 = debitOrCredit33.getPaymentMessage();
        java.lang.String str46 = debitOrCredit33.getPaymentMessage();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spaceManager29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 165.0d + "'", double32 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Card number should be 16 digits" + "'", str40, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Card number should be 16 digits" + "'", str45, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Card number should be 16 digits" + "'", str46, "Card number should be 16 digits");
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        double double21 = bookingManager0.getDeposit("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        double double24 = bookingManager0.calculateCost("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (short) 100);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1515.0d + "'", double24 == 1515.0d);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        boolean boolean16 = parkingSpaceFacade0.confirmBooking("Refunded without deposit ($-42.0)", "Refunded without deposit ($-42.0)", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ 100.0 with Mobile Pay", (int) '#', "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", 0, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Paid $ 10.0 with Mobile Pay");
        boolean boolean19 = parkingSpaceFacade0.extendBooking("02659ad3-0b5c-4c48-a915-a466f2b50775", (int) (byte) 1);
        ParkingSystem.CheckInManager checkInManager20 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.BookingManager bookingManager21 = parkingSpaceFacade0.getBookingManager();
        boolean boolean23 = parkingSpaceFacade0.checkIn("0b35479f-5869-423e-9abc-e4ab9cef903d");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(checkInManager20);
        org.junit.Assert.assertNotNull(bookingManager21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean11 = bookingManager0.editBooking("Jane", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (short) 1);
        ParkingSystem.SpaceManager spaceManager12 = bookingManager0.getSpaceManager();
        spaceManager12.toggleSpace("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", false);
        spaceManager12.addParkingLot("8ca2ec61-774c-409d-89d5-5b9171b40497");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(spaceManager12);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        spaceManager4.addParkingLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        spaceManager4.removeBooking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", (int) (byte) 0);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade12 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str15 = parkingSpaceFacade12.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager16 = parkingSpaceFacade12.getSpaceManager();
        spaceManager16.addParkingLot("hi!");
        boolean boolean21 = spaceManager16.isSpaceAvailable("Paid $ 0.0 with Mobile Pay", (int) ' ');
        ParkingSystem.SpaceManager spaceManager24 = new ParkingSystem.SpaceManager();
        boolean boolean27 = spaceManager24.isSpaceAvailable("hi!", (int) '#');
        spaceManager24.toggleLot("disabled", false);
        ParkingSystem.Booking booking40 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean41 = spaceManager24.assignBooking("empty", (int) (short) 0, booking40);
        boolean boolean42 = booking40.isCheckedIn();
        java.lang.String str43 = booking40.getClientId();
        java.lang.String str44 = booking40.getStartTime();
        boolean boolean45 = spaceManager16.assignBooking("ST001", (int) ' ', booking40);
        boolean boolean46 = spaceManager4.assignBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b", 1, booking40);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertNotNull(spaceManager16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "staff" + "'", str43, "staff");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Jane" + "'", str44, "Jane");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.Enabled enabled16 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled16);
        ParkingSystem.SpaceState spaceState18 = parkingSpace10.getState();
        boolean boolean19 = parkingSpace10.isAvailable();
        int int20 = parkingSpace10.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertNotNull(spaceState18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        double double5 = bookingManager0.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        boolean boolean10 = bookingManager0.extendBooking("hi!", (int) (short) 1, "Paid $ 100.0 with Mobile Pay", "Jane");
        boolean boolean12 = bookingManager0.cancelBooking("CLT-f02c481e-1504-4abf-b598-76152da8586a");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        boolean boolean24 = client0.confirmBooking("Refunded without deposit ($0.0)", "Paid $ 10.0 with Mobile Pay", 1, "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) '4', "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        boolean boolean25 = client0.checkOut();
        boolean boolean26 = client0.cancelBooking();
        java.lang.String str27 = client0.getClientType();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str1, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "empty" + "'", str27, "empty");
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.paymentMessage = "staff";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (short) 0);
        boolean boolean7 = paymentManager0.refundWithoutDeposit((double) (-1.0f), (double) (short) -1);
        java.lang.String str8 = paymentManager0.refundMessage;
        paymentManager0.refundMessage = "Paid $ 1.0 with Mobile Pay";
        boolean boolean12 = paymentManager0.refundDeposit((double) 35);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Refunded without deposit ($0.0)" + "'", str8, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        java.lang.String str22 = superManager21.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager21.registry;
        java.lang.String str24 = superManager21.getManagerId();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        superManager21.assignProxy(parkingSpaceProxy35);
        user0.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry39 = parkingSpaceProxy35.getRegistry();
        java.lang.String str42 = parkingSpaceProxy35.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj45 = parkingSpaceProxy35.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade46 = parkingSpaceProxy35.getFacade();
        boolean boolean56 = parkingSpaceProxy35.confirmBooking("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "Refunded total cost of $100.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", 2, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", (int) (byte) 0, "25527a32-01ef-45ba-816a-1d0a2fc2a52d", "4a1f2343-8b2e-4dea-ba69-efd105414390");
        parkingSpaceProxy35.autoGenerateManager();
        boolean boolean61 = parkingSpaceProxy35.editBooking("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", 32);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str6, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str22, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNull(accountRegistry23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str24, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str26, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "disabled" + "'", str42, "disabled");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(parkingSpaceFacade46);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        ParkingSystem.Client client6 = ParkingSystem.Client.getInstance();
        java.lang.String str7 = client6.getName();
        client6.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str16 = client6.getUsername();
        java.lang.String str17 = client6.getPassword();
        java.lang.String str18 = client6.getClientType();
        boolean boolean19 = client6.getIsValidated();
        boolean boolean27 = client6.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str28 = client6.getName();
        cSVManager0.saveClient(client6);
        java.lang.String str30 = client6.getExtraId();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str7, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        boolean boolean40 = parkingSpaceFacade33.extendBooking("jane", (int) ' ');
        ParkingSystem.SpaceManager spaceManager41 = parkingSpaceFacade33.getSpaceManager();
        boolean boolean51 = parkingSpaceFacade33.confirmBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) '#', "Paid $ -1.0 with Mobile Pay", (int) (short) -1, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean53 = parkingSpaceFacade33.cancelBooking("CLT-b6a8264c-f386-4429-b59c-b7f465002e13");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        java.util.List<ParkingSystem.Client> clientList31 = accountRegistry24.displayPendingValidations();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap32 = accountRegistry24.getManagers();
        int int33 = accountRegistry24.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str5, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str20, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(clientList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade0.getBookingManager();
        double double6 = bookingManager4.getHourlyRate("pass");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 15.0d + "'", double6 == 15.0d);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj23 = parkingSpaceProxy20.login("empty", "Jane");
        parkingSpaceProxy20.toggleSpace("jane", "Paid $ 10.0 with Mobile Pay", true);
        parkingSpaceProxy20.displayPendingValidations();
        client0.assignProxy(parkingSpaceProxy20);
        client0.setClientInfo("09622cbf-e665-45db-b1ad-365065947a20", "2afd610d-a8cb-413a-bbee-7927f86b526c", "Refunded total cost of $1.0", "staff", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", false);
        java.lang.String str38 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "25527a32-01ef-45ba-816a-1d0a2fc2a52d" + "'", str38, "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str6 = mobilePay0.getPaymentMessage();
        boolean boolean11 = mobilePay0.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = mobilePay0.getPaymentMessage();
        java.lang.String str13 = mobilePay0.getPaymentMessage();
        boolean boolean18 = mobilePay0.processPayment("kYN6YZxC3k", (double) 100L, "Refunded total cost of $-1.0", "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str6, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str13, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade9.getBookingManager();
        ParkingSystem.BookingManager bookingManager13 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager14 = new ParkingSystem.CheckInManager(bookingManager13);
        ParkingSystem.SpaceManager spaceManager15 = bookingManager13.getSpaceManager();
        double double18 = bookingManager13.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit19 = new ParkingSystem.DebitOrCredit();
        bookingManager13.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit19);
        boolean boolean25 = debitOrCredit19.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str26 = debitOrCredit19.getPaymentMessage();
        boolean boolean29 = debitOrCredit19.validateCard("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (double) (short) 1);
        bookingManager12.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit19);
        boolean boolean33 = debitOrCredit19.validateCard("Refunded without deposit ($-42.0)", (double) 2);
        java.lang.String str34 = debitOrCredit19.getPaymentMessage();
        boolean boolean37 = debitOrCredit19.validateCard("848f508e-e1d2-4f02-9fc9-e95eee425d36", (double) (short) 100);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str1, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
        org.junit.Assert.assertNotNull(spaceManager15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 165.0d + "'", double18 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Card number should be 16 digits" + "'", str26, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Card number should be 16 digits" + "'", str34, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.displayPendingValidations();
        parkingSpaceProxy1.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy1.getFacade();
        boolean boolean21 = parkingSpaceFacade17.editBooking("CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", 100);
        boolean boolean25 = parkingSpaceFacade17.editBooking("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "89de8237-29df-4908-9de4-6dc1ce90de94", (int) (byte) 10);
        boolean boolean35 = parkingSpaceFacade17.confirmBooking("h40rNQ7kR1", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "79e86af2-7061-42df-ba07-6f6ce7f1b89c", "Refunded without deposit ($-15.0)", (int) (byte) 10, "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", (int) (short) 100, "2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", true);
        org.junit.Assert.assertNotNull(strArrayList2);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.ParkingSpace parkingSpace17 = new ParkingSystem.ParkingSpace((int) (short) -1);
        ParkingSystem.SpaceManager spaceManager18 = new ParkingSystem.SpaceManager();
        spaceManager18.toggleLot("Jane", false);
        spaceManager18.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager27 = new ParkingSystem.SpaceManager();
        boolean boolean30 = spaceManager27.isSpaceAvailable("hi!", (int) '#');
        spaceManager27.toggleLot("disabled", false);
        ParkingSystem.Booking booking43 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean44 = spaceManager27.assignBooking("empty", (int) (short) 0, booking43);
        boolean boolean45 = spaceManager18.assignBooking("hi!", 0, booking43);
        double double46 = booking43.getTotalCost();
        booking43.setDuration((-1));
        boolean boolean49 = booking43.isCheckedIn();
        int int50 = booking43.getDuration();
        boolean boolean51 = parkingSpace17.assignBooking(booking43);
        java.lang.String str52 = enabled14.scanSpace(parkingSpace17);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.0d + "'", double46 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace4 = parkingLot1.getParkingSpace((int) (byte) -1);
        ParkingSystem.ParkingLotIterator parkingLotIterator5 = parkingLot1.getIterator();
        boolean boolean6 = parkingLotIterator5.hasNext();
        boolean boolean7 = parkingLotIterator5.hasNext();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertNotNull(parkingLotIterator5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        client0.assignProxy(parkingSpaceProxy10);
        ParkingSystem.Booking booking12 = client0.getBookingDetails();
        boolean boolean13 = client0.checkOut();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str1, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        boolean boolean5 = parkingSpaceFacade0.checkOut("disabled");
        ParkingSystem.SpaceManager spaceManager6 = parkingSpaceFacade0.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap7 = spaceManager6.getParkingLots();
        spaceManager6.toggleLot("CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap11 = spaceManager6.getParkingLots();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(spaceManager6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        boolean boolean13 = parkingSpaceFacade0.confirmBooking("8bf217fa-1769-4d04-858b-ce78fe94bf0c", "CLT-55105d92-54d6-44d2-965a-736022b7f7cd", "Refunded without deposit ($0.0)", "", (int) (byte) 0, "ua4ppOLtSl", 52, "79e86af2-7061-42df-ba07-6f6ce7f1b89c", "kYN6YZxC3k");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean18 = bookingManager0.confirmBooking("3b453211-7dd1-4452-8741-a206711c1217", "TXCrKOGD", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", 52, "2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (byte) 1, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "86z9Z9e0MN");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap19 = bookingManager0.getActiveBookings();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        java.lang.String str13 = client0.getName();
        ParkingSystem.User user14 = new ParkingSystem.User();
        java.lang.Object obj15 = user14.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = user14.parkingProxy;
        ParkingSystem.User user17 = new ParkingSystem.User();
        java.lang.Object obj18 = user17.user;
        ParkingSystem.Client client19 = ParkingSystem.Client.getInstance();
        java.lang.String str20 = client19.getName();
        client19.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry24 = parkingSpaceProxy23.getRegistry();
        boolean boolean26 = parkingSpaceProxy23.checkIn("");
        client19.assignProxy(parkingSpaceProxy23);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade28 = parkingSpaceProxy23.getFacade();
        user17.assignProxy(parkingSpaceProxy23);
        user14.parkingProxy = parkingSpaceProxy23;
        ParkingSystem.AccountRegistry accountRegistry34 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager35 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry34);
        java.lang.String str36 = superManager35.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry37 = superManager35.registry;
        java.lang.String str38 = superManager35.getManagerId();
        ParkingSystem.Client client39 = ParkingSystem.Client.getInstance();
        java.lang.String str40 = client39.getName();
        client39.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry44 = parkingSpaceProxy43.getRegistry();
        boolean boolean46 = parkingSpaceProxy43.checkIn("");
        client39.assignProxy(parkingSpaceProxy43);
        boolean boolean48 = client39.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = new ParkingSystem.ParkingSpaceProxy();
        client39.assignProxy(parkingSpaceProxy49);
        superManager35.assignProxy(parkingSpaceProxy49);
        user14.assignProxy(parkingSpaceProxy49);
        ParkingSystem.AccountRegistry accountRegistry53 = parkingSpaceProxy49.getRegistry();
        java.lang.String str56 = parkingSpaceProxy49.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj59 = parkingSpaceProxy49.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade60 = parkingSpaceProxy49.getFacade();
        client0.assignProxy(parkingSpaceProxy49);
        parkingSpaceProxy49.toggleSpace("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        ParkingSystem.AccountRegistry accountRegistry66 = parkingSpaceProxy49.getRegistry();
        boolean boolean70 = parkingSpaceProxy49.editBooking("0b35479f-5869-423e-9abc-e4ab9cef903d", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (int) '4');
        parkingSpaceProxy49.displayPendingValidations();
        org.junit.Assert.assertNotNull(client0);
// flaky "9) test2554(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(parkingSpaceProxy16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade28);
        org.junit.Assert.assertNotNull(superManager35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str36, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str38, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(client39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(accountRegistry44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(accountRegistry53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "disabled" + "'", str56, "disabled");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(parkingSpaceFacade60);
        org.junit.Assert.assertNotNull(accountRegistry66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        boolean boolean46 = parkingSpace25.assignBooking(booking44);
        java.lang.String str47 = enabled0.scanSpace(parkingSpace25);
        ParkingSystem.ParkingLot parkingLot49 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking51 = null;
        boolean boolean52 = parkingLot49.assignBooking(0, booking51);
        boolean boolean54 = parkingLot49.isSpaceAvailable((int) '#');
        boolean boolean56 = parkingLot49.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace58 = parkingLot49.getParkingSpace((int) (byte) 10);
        int int59 = parkingSpace58.getSpaceId();
        ParkingSystem.Booking booking60 = parkingSpace58.getCurrentBooking();
        java.lang.String str61 = parkingSpace58.scanSpace();
        int int62 = parkingSpace58.getSpaceId();
        ParkingSystem.Booking booking63 = parkingSpace58.getCurrentBooking();
        java.lang.String str64 = enabled0.scanSpace(parkingSpace58);
        java.lang.String str65 = parkingSpace58.scanSpace();
        boolean boolean66 = parkingSpace58.isAvailable();
        java.lang.String str67 = parkingSpace58.scanSpace();
        java.lang.String str68 = parkingSpace58.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "disabled" + "'", str47, "disabled");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(parkingSpace58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
        org.junit.Assert.assertNull(booking60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "empty" + "'", str61, "empty");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNull(booking63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "empty" + "'", str64, "empty");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "empty" + "'", str65, "empty");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "empty" + "'", str67, "empty");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "empty" + "'", str68, "empty");
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        ParkingSystem.Client client6 = ParkingSystem.Client.getInstance();
        java.lang.String str7 = client6.getName();
        client6.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str16 = client6.getUsername();
        java.lang.String str17 = client6.getPassword();
        java.lang.String str18 = client6.getClientType();
        boolean boolean19 = client6.getIsValidated();
        boolean boolean27 = client6.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str28 = client6.getName();
        cSVManager0.saveClient(client6);
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        java.lang.String str35 = superManager34.getManagerId();
        java.lang.String str36 = superManager34.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry37 = superManager34.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry44 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager45 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry44);
        boolean boolean47 = accountRegistry44.requiresValidation("disabled");
        int int48 = accountRegistry44.getManagersSize();
        ParkingSystem.SuperManager superManager49 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry44);
        ParkingSystem.AccountRegistry accountRegistry50 = superManager49.getRegistry();
        superManager34.registry = accountRegistry50;
        ParkingSystem.AccountRegistry accountRegistry55 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager56 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry55);
        boolean boolean58 = accountRegistry55.requiresValidation("disabled");
        int int59 = accountRegistry55.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy61 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj64 = parkingSpaceProxy61.login("empty", "Jane");
        parkingSpaceProxy61.validateClient("Jane");
        parkingSpaceProxy61.toggleSpace("", "staff", false);
        boolean boolean72 = parkingSpaceProxy61.cancelBooking("Jane");
        accountRegistry55.assignProxyToClient("pass", parkingSpaceProxy61);
        boolean boolean79 = parkingSpaceProxy61.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean85 = parkingSpaceProxy61.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        java.lang.String str88 = parkingSpaceProxy61.scanSpace("13b04414-31a5-407f-8ea3-fba4613c73d1", "Jane");
        superManager34.assignProxy(parkingSpaceProxy61);
        superManager34.validateClient("Paid $ 100.0 with Mobile Pay");
        cSVManager0.saveManager((ParkingSystem.Manager) superManager34);
        java.lang.String str93 = superManager34.getName();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str35, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str36, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertNotNull(superManager45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(superManager49);
        org.junit.Assert.assertNotNull(accountRegistry50);
        org.junit.Assert.assertNotNull(superManager56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "disabled" + "'", str88, "disabled");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "5XQfkf24zK" + "'", str93, "5XQfkf24zK");
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        accountRegistry1.assignProxyToManager("pass", parkingSpaceProxy3);
        boolean boolean15 = parkingSpaceProxy3.checkIn("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        parkingSpaceProxy3.autoGenerateManager();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = parkingSpaceProxy0.getFacade();
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("CLT-631eb509-a6c4-407c-b16d-582a6faabddb", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", true);
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(parkingSpaceFacade3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        client0.setClientInfo("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "CLT-578de262-c6ef-49e3-b501-8fdbcb54d0f4", "Refunded without deposit ($-96.0)", "", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb", true);
        org.junit.Assert.assertNotNull(client0);
// flaky "10) test2560(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "7) test2560(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "jane" + "'", str10, "jane");
// flaky "3) test2560(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "empty" + "'", str11, "empty");
// flaky "2) test2560(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "empty" + "'", str12, "empty");
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy0.toggleLot("hi!", false);
        parkingSpaceProxy0.addParkingLot("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        boolean boolean22 = parkingSpaceProxy0.confirmBooking("Refunded without deposit ($-68.0)", "", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c", "86z9Z9e0MN", (int) ' ', "Refunded without deposit ($1.0)", 4, "0b35479f-5869-423e-9abc-e4ab9cef903d", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) ' ');
        parkingLot1.setEnabled(false);
        boolean boolean13 = parkingLot1.isEnabled();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean35 = parkingSpaceProxy14.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry12.assignProxyToManager("empty", parkingSpaceProxy14);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade39 = parkingSpaceProxy38.getFacade();
        accountRegistry12.assignProxyToManager("", parkingSpaceProxy38);
        boolean boolean42 = parkingSpaceProxy38.checkIn("Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.Booking booking10 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int11 = booking10.getDuration();
        java.lang.String str12 = booking10.getClientId();
        booking10.setCheckedIn(true);
        boolean boolean15 = parkingLot1.assignBooking((int) (short) 100, booking10);
        parkingLot1.removeBooking(1);
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking34 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean35 = parkingLot20.assignBooking((int) (short) -1, booking34);
        java.lang.String str36 = booking34.getLotId();
        boolean boolean37 = booking34.isCheckedIn();
        booking34.setDuration((int) (byte) 10);
        boolean boolean40 = parkingLot1.assignBooking(1, booking34);
        ParkingSystem.ParkingLotIterator parkingLotIterator41 = parkingLot1.getIterator();
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "staff" + "'", str12, "staff");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "jane" + "'", str36, "jane");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator41);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = user13.parkingProxy;
        ParkingSystem.User user16 = new ParkingSystem.User();
        java.lang.Object obj17 = user16.user;
        ParkingSystem.Client client18 = ParkingSystem.Client.getInstance();
        java.lang.String str19 = client18.getName();
        client18.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy22.getRegistry();
        boolean boolean25 = parkingSpaceProxy22.checkIn("");
        client18.assignProxy(parkingSpaceProxy22);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade27 = parkingSpaceProxy22.getFacade();
        user16.assignProxy(parkingSpaceProxy22);
        user13.parkingProxy = parkingSpaceProxy22;
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        java.lang.String str35 = superManager34.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry36 = superManager34.registry;
        java.lang.String str37 = superManager34.getManagerId();
        ParkingSystem.Client client38 = ParkingSystem.Client.getInstance();
        java.lang.String str39 = client38.getName();
        client38.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry43 = parkingSpaceProxy42.getRegistry();
        boolean boolean45 = parkingSpaceProxy42.checkIn("");
        client38.assignProxy(parkingSpaceProxy42);
        boolean boolean47 = client38.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        client38.assignProxy(parkingSpaceProxy48);
        superManager34.assignProxy(parkingSpaceProxy48);
        user13.assignProxy(parkingSpaceProxy48);
        ParkingSystem.AccountRegistry accountRegistry52 = parkingSpaceProxy48.getRegistry();
        java.lang.String str55 = parkingSpaceProxy48.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        boolean boolean58 = parkingSpaceProxy48.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (byte) 1);
        superManager11.assignProxy(parkingSpaceProxy48);
        java.lang.String str60 = superManager11.getPassword();
        ParkingSystem.Manager manager61 = superManager11.autoGenerateManager();
        ParkingSystem.Manager manager62 = superManager11.autoGenerateManager();
        superManager11.validateClient("WxoDOyjI");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(parkingSpaceProxy15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(client18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "empty" + "'", str19, "empty");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade27);
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str35, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(accountRegistry36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str37, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(client38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "empty" + "'", str39, "empty");
        org.junit.Assert.assertNotNull(accountRegistry43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(accountRegistry52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "86z9Z9e0MN" + "'", str60, "86z9Z9e0MN");
        org.junit.Assert.assertNotNull(manager61);
        org.junit.Assert.assertNotNull(manager62);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        java.lang.String str1 = mobilePay0.getPaymentMessage();
        boolean boolean6 = mobilePay0.processPayment("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", (double) 10, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "02659ad3-0b5c-4c48-a915-a466f2b50775");
        boolean boolean11 = mobilePay0.processPayment("09622cbf-e665-45db-b1ad-365065947a20", (double) 3, "CLT-f02c481e-1504-4abf-b598-76152da8586a", "CLT-390234b0-d56e-4275-bd7b-122280609c69");
        java.lang.String str12 = mobilePay0.getPaymentMessage();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 3.0 with Mobile Pay" + "'", str12, "Paid $ 3.0 with Mobile Pay");
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        boolean boolean25 = accountRegistry4.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        boolean boolean30 = parkingSpaceProxy27.checkIn("");
        parkingSpaceProxy27.toggleLot("", true);
        accountRegistry4.assignProxyToManager("", parkingSpaceProxy27);
        accountRegistry4.validateClient("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking40 = parkingSpaceProxy38.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade41 = parkingSpaceProxy38.getFacade();
        boolean boolean43 = parkingSpaceProxy38.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean47 = parkingSpaceProxy38.editBooking("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "Card number should be 16 digits", (int) (short) 10);
        accountRegistry4.assignProxyToManager("staff", parkingSpaceProxy38);
        boolean boolean54 = accountRegistry4.registerClient("CLT-035180a0-4707-410d-a011-2a4f0f46838b", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "Refunded total cost of $100.0", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(booking40);
        org.junit.Assert.assertNotNull(parkingSpaceFacade41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry23 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager24 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry23);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = null;
        accountRegistry23.assignProxyToManager("disabled", parkingSpaceProxy26);
        boolean boolean29 = accountRegistry23.requiresValidation("disabled");
        int int30 = accountRegistry23.getManagersSize();
        superManager19.registry = accountRegistry23;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = null;
        superManager19.assignProxy(parkingSpaceProxy32);
        ParkingSystem.AccountRegistry accountRegistry34 = superManager19.getRegistry();
        ParkingSystem.Manager manager35 = superManager19.autoGenerateManager();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(superManager24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(accountRegistry34);
        org.junit.Assert.assertNotNull(manager35);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        java.lang.String str14 = client0.getName();
        boolean boolean16 = client0.extendBooking((int) '4');
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-035180a0-4707-410d-a011-2a4f0f46838b" + "'", str1, "CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        double double6 = bookingManager0.getDeposit("Jane");
        ParkingSystem.AccountRegistry accountRegistry7 = bookingManager0.getAccountRegistry();
        java.lang.Object obj10 = accountRegistry7.login("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "Paid $ 0.0 with Mobile Pay");
        java.util.List<ParkingSystem.Client> clientList11 = accountRegistry7.displayPendingValidations();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 15.0d + "'", double6 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(clientList11);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        java.lang.String str6 = spaceManager0.scanSpace("jane", "");
        spaceManager0.toggleLot("Jane", true);
        spaceManager0.addParkingLot("Paid $ -1.0 with Mobile Pay");
        java.lang.String str14 = spaceManager0.scanSpace("e8686ac8-1df7-4a9b-b299-8fbcdd585528", "CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        java.lang.String str16 = parkingSpaceProxy1.scanSpace("jane", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        boolean boolean18 = parkingSpaceProxy1.checkIn("09622cbf-e665-45db-b1ad-365065947a20");
        ParkingSystem.Booking booking20 = parkingSpaceProxy1.getBookingDetails("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(booking20);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", true);
        boolean boolean12 = parkingSpaceFacade0.editBooking("Paid $ 15.0 with Mobile Pay", "pass", (int) (byte) -1);
        ParkingSystem.Booking booking14 = parkingSpaceFacade0.getBookingDetails("pass");
        ParkingSystem.CheckInManager checkInManager15 = parkingSpaceFacade0.getCheckInManager();
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertNotNull(checkInManager15);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 0.0d, "disabled", "");
        java.lang.String str19 = debitOrCredit6.getPaymentMessage();
        boolean boolean24 = debitOrCredit6.processPayment("4a1f2343-8b2e-4dea-ba69-efd105414390", (double) ' ', "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c");
        boolean boolean29 = debitOrCredit6.processPayment("FNuxCiXmkP", 495.0d, "Refunded total cost of $0.0", "aa9c00f6-ec11-46c5-a72b-a7f620703e51");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Card number should be 16 digits" + "'", str19, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = parkingSpaceProxy0.getFacade();
        ParkingSystem.Booking booking3 = parkingSpaceFacade1.getBookingDetails("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade1.getBookingManager();
        ParkingSystem.Booking booking6 = parkingSpaceFacade1.getBookingDetails("empty");
        org.junit.Assert.assertNotNull(parkingSpaceFacade1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertNull(booking6);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy16 = null;
        paymentManager0.setStrategy(strategy16);
        paymentManager0.refundMessage = "Jane";
        java.lang.String str20 = paymentManager0.paymentMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str20, "Paid $ 100.0 with Mobile Pay");
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        java.lang.String str5 = parkingSpaceFacade0.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager6 = parkingSpaceFacade0.getCheckInManager();
        java.lang.String str9 = parkingSpaceFacade0.scanSpace("CLT-92729d37-9255-42b4-9361-c1978aadacb0", "h40rNQ7kR1");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertNotNull(checkInManager6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.toggleSpace("Refunded without deposit ($0.0)", "disabled", false);
        spaceManager0.addParkingLot("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        boolean boolean46 = parkingSpace25.assignBooking(booking44);
        ParkingSystem.SpaceManager spaceManager47 = new ParkingSystem.SpaceManager();
        boolean boolean50 = spaceManager47.isSpaceAvailable("hi!", (int) '#');
        spaceManager47.toggleLot("disabled", false);
        ParkingSystem.Booking booking63 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean64 = spaceManager47.assignBooking("empty", (int) (short) 0, booking63);
        boolean boolean65 = booking63.isCheckedIn();
        java.lang.String str66 = booking63.getClientId();
        boolean boolean67 = parkingSpace25.assignBooking(booking63);
        boolean boolean68 = booking63.isCheckedIn();
        int int69 = booking63.getSpaceId();
        boolean boolean70 = spaceManager0.assignBooking("0b35479f-5869-423e-9abc-e4ab9cef903d", 3, booking63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "staff" + "'", str66, "staff");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        java.lang.String str2 = client0.getPassword();
        client0.setClientInfo("13b04414-31a5-407f-8ea3-fba4613c73d1", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "09622cbf-e665-45db-b1ad-365065947a20", "Card number should be 16 digits", "Paid $ -1.0 with Mobile Pay", "Paid $ 15.0 with Mobile Pay", false);
        client0.setValidated(true);
        org.junit.Assert.assertNotNull(client0);
// flaky "11) test2579(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded deposit of $0.0" + "'", str1, "Refunded deposit of $0.0");
// flaky "8) test2579(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CLT-55105d92-54d6-44d2-965a-736022b7f7cd" + "'", str2, "CLT-55105d92-54d6-44d2-965a-736022b7f7cd");
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        boolean boolean5 = checkInManager1.checkOut("2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean7 = checkInManager1.checkOut("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        parkingSpaceFacade0.toggleLot("Paid $ -1.0 with Mobile Pay", false);
        parkingSpaceFacade0.toggleLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", true);
        parkingSpaceFacade0.toggleLot("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", true);
        ParkingSystem.Booking booking14 = parkingSpaceFacade0.getBookingDetails("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        ParkingSystem.SpaceManager spaceManager15 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertNotNull(spaceManager15);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        java.lang.String str5 = parkingSpaceFacade0.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        boolean boolean9 = parkingSpaceFacade0.editBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "hi!", 0);
        parkingSpaceFacade0.addParkingLot("");
        parkingSpaceFacade0.toggleLot("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade6 = parkingSpaceProxy0.getFacade();
        boolean boolean8 = parkingSpaceFacade6.checkOut("25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager0.loadParkingLots(strMap6);
        ParkingSystem.Client client8 = ParkingSystem.Client.getInstance();
        java.lang.String str9 = client8.getClientType();
        cSVManager0.saveClient(client8);
        boolean boolean11 = client8.checkOut();
        java.lang.String str12 = client8.getName();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client8);
// flaky "12) test2584(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str9, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
// flaky "9) test2584(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "jane" + "'", str12, "jane");
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        ParkingSystem.CSVManager cSVManager24 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray25 = cSVManager24.loadSuperManager();
        java.lang.String[] strArray26 = cSVManager24.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade27 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager28 = parkingSpaceFacade27.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap29 = spaceManager28.getParkingLots();
        cSVManager24.saveParkingLots(strMap29);
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        spaceManager31.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap52 = spaceManager31.getParkingLots();
        cSVManager24.loadParkingLots(strMap52);
        java.lang.String[] strArray54 = cSVManager24.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade55 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager56 = parkingSpaceFacade55.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap57 = spaceManager56.getParkingLots();
        cSVManager24.saveParkingLots(strMap57);
        ParkingSystem.BookingManager bookingManager59 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager60 = new ParkingSystem.CheckInManager(bookingManager59);
        ParkingSystem.SpaceManager spaceManager61 = bookingManager59.getSpaceManager();
        double double64 = bookingManager59.calculateCost("", (int) (byte) 10);
        ParkingSystem.SpaceManager spaceManager65 = bookingManager59.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap66 = spaceManager65.getParkingLots();
        cSVManager24.saveParkingLots(strMap66);
        cSVManager0.saveParkingLots(strMap66);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList69 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "13) test2585(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "10) test2585(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
// flaky "4) test2585(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "jane" + "'", str4, "jane");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky "3) test2585(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "staff" + "'", str13, "staff");
// flaky "2) test2585(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "jane" + "'", str14, "jane");
        org.junit.Assert.assertNotNull(strArray25);
// flaky "2) test2585(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray25, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray26);
// flaky "1) test2585(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray26, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strArray54);
// flaky "1) test2585(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray54, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(spaceManager61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 165.0d + "'", double64 == 165.0d);
        org.junit.Assert.assertNotNull(spaceManager65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry13 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry13);
        boolean boolean16 = accountRegistry13.requiresValidation("disabled");
        int int17 = accountRegistry13.getManagersSize();
        boolean boolean23 = accountRegistry13.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        java.util.List<ParkingSystem.Client> clientList24 = accountRegistry13.displayPendingValidations();
        superManager4.registry = accountRegistry13;
        ParkingSystem.AccountRegistry accountRegistry32 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager33 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry32);
        ParkingSystem.AccountRegistry accountRegistry37 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager38 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry37);
        superManager33.registry = accountRegistry37;
        ParkingSystem.SuperManager superManager40 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry37);
        superManager4.registry = accountRegistry37;
        ParkingSystem.AccountRegistry accountRegistry42 = superManager4.getRegistry();
        ParkingSystem.Client client44 = ParkingSystem.Client.getInstance();
        java.lang.String str45 = client44.getName();
        client44.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str54 = client44.getUsername();
        java.lang.String str55 = client44.getPassword();
        java.lang.String str56 = client44.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy57 = null;
        client44.assignProxy(parkingSpaceProxy57);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy59 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj62 = parkingSpaceProxy59.login("empty", "Jane");
        client44.assignProxy(parkingSpaceProxy59);
        parkingSpaceProxy59.validateClient("13b04414-31a5-407f-8ea3-fba4613c73d1");
        accountRegistry42.assignProxyToClient("0b35479f-5869-423e-9abc-e4ab9cef903d", parkingSpaceProxy59);
        int int67 = accountRegistry42.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str5, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str6, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "86z9Z9e0MN" + "'", str9, "86z9Z9e0MN");
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(clientList24);
        org.junit.Assert.assertNotNull(superManager33);
        org.junit.Assert.assertNotNull(superManager38);
        org.junit.Assert.assertNotNull(superManager40);
        org.junit.Assert.assertNotNull(accountRegistry42);
        org.junit.Assert.assertNotNull(client44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "jane" + "'", str45, "jane");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.checkIn();
        boolean boolean14 = client0.checkIn();
        boolean boolean15 = client0.getIsValidated();
        ParkingSystem.Booking booking16 = client0.getBookingDetails();
        client0.setClientInfo("CLT-f02c481e-1504-4abf-b598-76152da8586a", "Paid $ 100.0 with Mobile Pay", "FNuxCiXmkP", "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "09622cbf-e665-45db-b1ad-365065947a20", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", true);
        java.lang.String str25 = client0.getName();
        java.lang.String str26 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str25, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "CLT-f02c481e-1504-4abf-b598-76152da8586a" + "'", str26, "CLT-f02c481e-1504-4abf-b598-76152da8586a");
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.checkIn();
        client0.setClientInfo("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", true);
        boolean boolean22 = client0.cancelBooking();
        boolean boolean30 = client0.confirmBooking("tbHxuilT", "", (int) 'a', "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", (int) (short) 10, "86z9Z9e0MN", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj34 = parkingSpaceProxy31.login("empty", "Jane");
        boolean boolean36 = parkingSpaceProxy31.checkIn("Paid $ 10.0 with Mobile Pay");
        boolean boolean46 = parkingSpaceProxy31.confirmBooking("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $-1.0", "pass", (int) '4', "Refunded without deposit ($0.0)", (int) (short) 100, "staff", "");
        client0.assignProxy(parkingSpaceProxy31);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str1, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager28 = new ParkingSystem.SpaceManager();
        boolean boolean31 = spaceManager28.isSpaceAvailable("hi!", (int) '#');
        spaceManager28.toggleLot("disabled", false);
        ParkingSystem.Booking booking44 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean45 = spaceManager28.assignBooking("empty", (int) (short) 0, booking44);
        boolean boolean46 = parkingSpace25.assignBooking(booking44);
        java.lang.String str47 = enabled0.scanSpace(parkingSpace25);
        ParkingSystem.Disabled disabled48 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace49 = null;
        java.lang.String str50 = disabled48.scanSpace(parkingSpace49);
        ParkingSystem.ParkingSpace parkingSpace51 = null;
        java.lang.String str52 = disabled48.scanSpace(parkingSpace51);
        ParkingSystem.ParkingLot parkingLot54 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking56 = null;
        boolean boolean57 = parkingLot54.assignBooking(0, booking56);
        boolean boolean59 = parkingLot54.isSpaceAvailable((int) '#');
        boolean boolean61 = parkingLot54.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLot54.getParkingSpace((int) (byte) 10);
        int int64 = parkingSpace63.getSpaceId();
        ParkingSystem.Booking booking65 = parkingSpace63.getCurrentBooking();
        java.lang.String str66 = parkingSpace63.scanSpace();
        ParkingSystem.Enabled enabled67 = new ParkingSystem.Enabled();
        parkingSpace63.setState((ParkingSystem.SpaceState) enabled67);
        java.lang.String str69 = disabled48.scanSpace(parkingSpace63);
        java.lang.String str70 = enabled0.scanSpace(parkingSpace63);
        int int71 = parkingSpace63.getSpaceId();
        ParkingSystem.Booking booking79 = new ParkingSystem.Booking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 10.0 with Mobile Pay", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 1, "2afd610d-a8cb-413a-bbee-7927f86b526c", (-1.0d));
        boolean boolean80 = booking79.isCheckedIn();
        java.lang.String str81 = booking79.getLotId();
        booking79.setStartTime("89de8237-29df-4908-9de4-6dc1ce90de94");
        boolean boolean84 = parkingSpace63.assignBooking(booking79);
        int int85 = booking79.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "disabled" + "'", str47, "disabled");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "disabled" + "'", str52, "disabled");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertNull(booking65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "empty" + "'", str66, "empty");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "disabled" + "'", str69, "disabled");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "empty" + "'", str70, "empty");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str81, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        java.lang.Object obj18 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.Client client20 = ParkingSystem.Client.getInstance();
        java.lang.String str21 = client20.getName();
        client20.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry25 = parkingSpaceProxy24.getRegistry();
        boolean boolean27 = parkingSpaceProxy24.checkIn("");
        client20.assignProxy(parkingSpaceProxy24);
        boolean boolean29 = client20.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        client20.assignProxy(parkingSpaceProxy30);
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy30.getRegistry();
        boolean boolean34 = parkingSpaceProxy30.checkIn("hi!");
        user0.assignProxy(parkingSpaceProxy30);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean38 = parkingSpaceProxy36.cancelBooking("pass");
        user0.parkingProxy = parkingSpaceProxy36;
        java.lang.Object obj40 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + obj18 + "' != '" + true + "'", obj18, true);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNotNull(client20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str21, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + obj40 + "' != '" + true + "'", obj40, true);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.getRegistry();
        ParkingSystem.Manager manager7 = accountRegistry6.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "12fea0ad-7859-47d9-95f1-1985d2c4ed33" + "'", str5, "12fea0ad-7859-47d9-95f1-1985d2c4ed33");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertNotNull(manager7);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.removeBooking("433f3d1f-f758-4ae3-972b-7fb179aedfd7", (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Paid $ 100.0 with Mobile Pay", false);
        boolean boolean21 = parkingSpaceFacade0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "4a1f2343-8b2e-4dea-ba69-efd105414390", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "", (int) (byte) 1, "pass", (int) (byte) 10, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager22 = parkingSpaceFacade0.getBookingManager();
        double double24 = bookingManager22.getDeposit("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        ParkingSystem.BookingManager bookingManager25 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager26 = new ParkingSystem.CheckInManager(bookingManager25);
        ParkingSystem.SpaceManager spaceManager27 = bookingManager25.getSpaceManager();
        double double30 = bookingManager25.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit31 = new ParkingSystem.DebitOrCredit();
        bookingManager25.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean37 = debitOrCredit31.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str38 = debitOrCredit31.getPaymentMessage();
        boolean boolean43 = debitOrCredit31.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean46 = debitOrCredit31.validateCard("Jane", (double) '4');
        java.lang.String str47 = debitOrCredit31.getPaymentMessage();
        bookingManager22.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        double double50 = bookingManager22.getDeposit("I673kmcH");
        boolean boolean52 = bookingManager22.cancelBooking("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bookingManager22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 165.0d + "'", double30 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Card number should be 16 digits" + "'", str38, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Card number should be 16 digits" + "'", str47, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 15.0d + "'", double50 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        boolean boolean11 = parkingSpaceProxy0.cancelBooking("Jane");
        parkingSpaceProxy0.addParkingLot("Refunded without deposit ($0.0)");
        boolean boolean15 = parkingSpaceProxy0.checkOut("CLT-578de262-c6ef-49e3-b501-8fdbcb54d0f4");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Disabled disabled13 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace14 = null;
        java.lang.String str15 = disabled13.scanSpace(parkingSpace14);
        ParkingSystem.ParkingSpace parkingSpace16 = null;
        java.lang.String str17 = disabled13.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) disabled13);
        boolean boolean19 = parkingSpace10.isAvailable();
        parkingSpace10.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj17 = user0.user;
        ParkingSystem.User user18 = new ParkingSystem.User();
        java.lang.Object obj19 = user18.user;
        ParkingSystem.Client client20 = ParkingSystem.Client.getInstance();
        java.lang.String str21 = client20.getName();
        client20.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry25 = parkingSpaceProxy24.getRegistry();
        boolean boolean27 = parkingSpaceProxy24.checkIn("");
        client20.assignProxy(parkingSpaceProxy24);
        boolean boolean29 = client20.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        client20.assignProxy(parkingSpaceProxy30);
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy30.getRegistry();
        boolean boolean34 = parkingSpaceProxy30.checkIn("hi!");
        user18.parkingProxy = parkingSpaceProxy30;
        user18.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = user18.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        user18.assignProxy(parkingSpaceProxy43);
        user0.user = user18;
        user0.register("ST001", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d", "CLT-b6a8264c-f386-4429-b59c-b7f465002e13", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "qPYDfDnbtD");
        ParkingSystem.User user52 = new ParkingSystem.User();
        java.lang.Object obj53 = user52.user;
        ParkingSystem.Client client54 = ParkingSystem.Client.getInstance();
        java.lang.String str55 = client54.getName();
        client54.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy58 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry59 = parkingSpaceProxy58.getRegistry();
        boolean boolean61 = parkingSpaceProxy58.checkIn("");
        client54.assignProxy(parkingSpaceProxy58);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade63 = parkingSpaceProxy58.getFacade();
        user52.assignProxy(parkingSpaceProxy58);
        java.lang.String str67 = parkingSpaceProxy58.scanSpace("disabled", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        parkingSpaceProxy58.toggleLot("empty", true);
        boolean boolean73 = parkingSpaceProxy58.extendBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", 0);
        boolean boolean75 = parkingSpaceProxy58.cancelBooking("Paid $ 10.0 with Mobile Pay");
        user0.parkingProxy = parkingSpaceProxy58;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str6, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(client20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str21, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy42);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(client54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ST001" + "'", str55, "ST001");
        org.junit.Assert.assertNotNull(accountRegistry59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "disabled" + "'", str67, "disabled");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        ParkingSystem.BookingManager bookingManager8 = parkingSpaceFacade0.getBookingManager();
        boolean boolean10 = parkingSpaceFacade0.checkIn("Refunded without deposit ($0.0)");
        ParkingSystem.Booking booking12 = parkingSpaceFacade0.getBookingDetails("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(bookingManager8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(booking12);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Disabled disabled13 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace14 = null;
        java.lang.String str15 = disabled13.scanSpace(parkingSpace14);
        ParkingSystem.ParkingSpace parkingSpace16 = null;
        java.lang.String str17 = disabled13.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) disabled13);
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        boolean boolean27 = parkingLot20.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot20.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking30 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        parkingSpace29.removeBooking();
        java.lang.String str33 = disabled13.scanSpace(parkingSpace29);
        int int34 = parkingSpace29.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "disabled" + "'", str33, "disabled");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean29 = paymentManager0.refundTotalCost((double) 0L);
        paymentManager0.refundMessage = "empty";
        paymentManager0.refundMessage = "86z9Z9e0MN";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        boolean boolean9 = parkingSpaceProxy0.editBooking("83a51dc6-0c8f-4f21-ae40-68699828f95d", "empty", (int) (byte) 0);
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy0.getRegistry();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(accountRegistry10);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking15 = parkingSpace10.getCurrentBooking();
        int int16 = parkingSpace10.getSpaceId();
        parkingSpace10.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean19 = bookingManager0.cancelBooking("Refunded total cost of $1.0");
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        double double22 = bookingManager0.getHourlyRate("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        boolean boolean27 = bookingManager0.extendBooking("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", 52, "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.addParkingLot("jane");
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        spaceManager0.removeBooking("jane", (int) (byte) 100);
        spaceManager0.loadParkingLots();
        spaceManager0.toggleLot("Paid $ 10.0 with Mobile Pay", false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        superManager4.setManagerInfo("Paid $ 100.0 with Mobile Pay", "disabled", "staff");
        ParkingSystem.AccountRegistry accountRegistry16 = superManager4.getRegistry();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(manager11);
        org.junit.Assert.assertNotNull(accountRegistry16);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        ParkingSystem.User user2 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        boolean boolean14 = parkingSpaceProxy3.cancelBooking("");
        user2.assignProxy(parkingSpaceProxy3);
        client0.assignProxy(parkingSpaceProxy3);
        boolean boolean24 = client0.confirmBooking("Refunded without deposit ($0.0)", "Paid $ 10.0 with Mobile Pay", 1, "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) '4', "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        boolean boolean26 = client0.extendBooking((int) (byte) 10);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d" + "'", str1, "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("Jane");
        boolean boolean34 = parkingSpaceProxy21.checkOut("empty");
        boolean boolean44 = parkingSpaceProxy21.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        boolean boolean50 = parkingSpaceProxy21.register("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "02659ad3-0b5c-4c48-a915-a466f2b50775", "Paid $ 100.0 with Mobile Pay");
        user0.assignProxy(parkingSpaceProxy21);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade52 = parkingSpaceProxy21.getFacade();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade52);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getUsername();
        boolean boolean23 = client0.confirmBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b", "Jane", 0, "disabled", (int) (byte) 0, "4a1f2343-8b2e-4dea-ba69-efd105414390", "hi!");
        java.lang.String str24 = client0.getPassword();
        ParkingSystem.Booking booking25 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841" + "'", str1, "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841" + "'", str11, "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841" + "'", str12, "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str14, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "staff" + "'", str15, "staff");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str24, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNull(booking25);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.toggleSpace("empty", "Paid $ 10.0 with Mobile Pay", false);
        boolean boolean37 = parkingSpaceProxy15.register("3b453211-7dd1-4452-8741-a206711c1217", "", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "", "h40rNQ7kR1");
        java.lang.String str40 = parkingSpaceProxy15.scanSpace("ua4ppOLtSl", "aa9c00f6-ec11-46c5-a72b-a7f620703e51");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "disabled" + "'", str40, "disabled");
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        ParkingSystem.DebitOrCredit debitOrCredit14 = new ParkingSystem.DebitOrCredit();
        boolean boolean19 = debitOrCredit14.processPayment("Paid $ 100.0 with Mobile Pay", (double) 0, "Paid $ 0.0 with Mobile Pay", "jane");
        boolean boolean24 = debitOrCredit14.processPayment("13b04414-31a5-407f-8ea3-fba4613c73d1", (double) (-1), "CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit14);
        boolean boolean30 = debitOrCredit14.processPayment("hi!", 0.0d, "", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("Refunded without deposit ($-42.0)");
        boolean boolean2 = parkingLot1.isEnabled();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        double double18 = bookingManager0.getDeposit("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap20 = bookingManager0.getActiveBookings();
        boolean boolean30 = bookingManager0.confirmBooking("Paid $ 1470.0 with Mobile Pay", "62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54", "", "Refunded total cost of $0.0", 0, "89de8237-29df-4908-9de4-6dc1ce90de94", (int) (byte) 1, "Paid $ 15.0 with Mobile Pay", "89de8237-29df-4908-9de4-6dc1ce90de94");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 15.0d + "'", double18 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.Manager manager5 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        boolean boolean12 = accountRegistry6.registerClient("", "H33Itw4InT", "", "2d0fc45e-f79a-4bfb-ba07-3322876cac6b", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(manager5);
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator18 = parkingLot17.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator19 = parkingLot17.getIterator();
        user0.user = parkingLot17;
        ParkingSystem.User user21 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj25 = parkingSpaceProxy22.login("empty", "Jane");
        parkingSpaceProxy22.validateClient("Jane");
        parkingSpaceProxy22.toggleSpace("", "staff", false);
        boolean boolean33 = parkingSpaceProxy22.cancelBooking("");
        user21.assignProxy(parkingSpaceProxy22);
        user0.user = parkingSpaceProxy22;
        ParkingSystem.User user36 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy37 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj40 = parkingSpaceProxy37.login("empty", "Jane");
        parkingSpaceProxy37.validateClient("Jane");
        parkingSpaceProxy37.toggleSpace("", "staff", false);
        boolean boolean48 = parkingSpaceProxy37.cancelBooking("");
        user36.assignProxy(parkingSpaceProxy37);
        parkingSpaceProxy37.displayPendingValidations();
        user0.parkingProxy = parkingSpaceProxy37;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy52 = user0.parkingProxy;
        user0.register("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "CLT-390234b0-d56e-4275-bd7b-122280609c69", "CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f", "pass");
        ParkingSystem.AccountRegistry accountRegistry62 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager63 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry62);
        boolean boolean65 = accountRegistry62.requiresValidation("disabled");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy67 = null;
        accountRegistry62.assignProxyToClient("", parkingSpaceProxy67);
        java.util.List<ParkingSystem.Client> clientList69 = accountRegistry62.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy71 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry72 = parkingSpaceProxy71.getRegistry();
        java.lang.String str75 = parkingSpaceProxy71.scanSpace("empty", "hi!");
        boolean boolean85 = parkingSpaceProxy71.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean89 = parkingSpaceProxy71.editBooking("pass", "2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (byte) 100);
        accountRegistry62.assignProxyToManager("", parkingSpaceProxy71);
        user0.parkingProxy = parkingSpaceProxy71;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator18);
        org.junit.Assert.assertNotNull(parkingLotIterator19);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy52);
        org.junit.Assert.assertNotNull(superManager63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(clientList69);
        org.junit.Assert.assertNotNull(accountRegistry72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "disabled" + "'", str75, "disabled");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) (short) 10);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        boolean boolean40 = parkingSpaceFacade33.extendBooking("jane", (int) ' ');
        ParkingSystem.SpaceManager spaceManager41 = parkingSpaceFacade33.getSpaceManager();
        boolean boolean51 = parkingSpaceFacade33.confirmBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) '#', "Paid $ -1.0 with Mobile Pay", (int) (short) -1, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean53 = parkingSpaceFacade33.checkOut("Paid $ 10.0 with Mobile Pay");
        boolean boolean63 = parkingSpaceFacade33.confirmBooking("K6PkM9rcCx", "", "K6PkM9rcCx", "staff", (int) (short) 10, "", (int) '#', "Refunded without deposit ($-96.0)", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        ParkingSystem.SpaceManager spaceManager64 = parkingSpaceFacade33.getSpaceManager();
        boolean boolean66 = parkingSpaceFacade33.checkIn("Refunded total cost of $100.0");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(spaceManager64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager21 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager22 = bookingManager0.getSpaceManager();
        double double24 = bookingManager0.getDeposit("CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        java.lang.String str21 = superManager19.getPassword();
        ParkingSystem.Manager manager22 = superManager19.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry26 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry26);
        boolean boolean29 = accountRegistry26.requiresValidation("disabled");
        int int30 = accountRegistry26.getManagersSize();
        boolean boolean36 = accountRegistry26.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        int int37 = accountRegistry26.getManagersSize();
        ParkingSystem.Manager manager38 = accountRegistry26.autoGenerateManager();
        superManager19.registry = accountRegistry26;
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
        org.junit.Assert.assertNotNull(manager22);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(manager38);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLot1.isEnabled();
        parkingLot1.setEnabled(false);
        boolean boolean12 = parkingLot1.isSpaceAvailable((int) '#');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.SpaceManager spaceManager6 = bookingManager0.getSpaceManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager0);
        double double9 = bookingManager0.getDeposit("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        ParkingSystem.CheckInManager checkInManager10 = new ParkingSystem.CheckInManager(bookingManager0);
        double double13 = bookingManager0.calculateCost("CLT-4aab5c22-53d4-41cb-8ccf-dd435bb7f17b", (int) ' ');
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertNotNull(spaceManager6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 15.0d + "'", double9 == 15.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 495.0d + "'", double13 == 495.0d);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (short) 10);
        parkingLot1.removeBooking(0);
        ParkingSystem.ParkingLotIterator parkingLotIterator12 = parkingLot1.getIterator();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator12);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        boolean boolean6 = paymentManager0.refundDeposit((double) (short) 0);
        boolean boolean8 = paymentManager0.refundTotalCost(0.0d);
        boolean boolean10 = paymentManager0.refundDeposit((double) 100.0f);
        java.lang.String str11 = paymentManager0.paymentMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        boolean boolean40 = parkingSpaceFacade33.extendBooking("jane", (int) ' ');
        ParkingSystem.SpaceManager spaceManager41 = parkingSpaceFacade33.getSpaceManager();
        boolean boolean51 = parkingSpaceFacade33.confirmBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) '#', "Paid $ -1.0 with Mobile Pay", (int) (short) -1, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean53 = parkingSpaceFacade33.checkOut("Paid $ 10.0 with Mobile Pay");
        boolean boolean63 = parkingSpaceFacade33.confirmBooking("K6PkM9rcCx", "", "K6PkM9rcCx", "staff", (int) (short) 10, "", (int) '#', "Refunded without deposit ($-96.0)", "CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        ParkingSystem.Booking booking65 = parkingSpaceFacade33.getBookingDetails("Paid $ 15.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(booking65);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap5 = accountRegistry3.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        java.lang.String str11 = parkingSpaceProxy7.scanSpace("empty", "hi!");
        boolean boolean21 = parkingSpaceProxy7.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy7.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean31 = parkingSpaceProxy7.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry3.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy7);
        ParkingSystem.User user34 = new ParkingSystem.User();
        java.lang.Object obj35 = user34.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = user34.parkingProxy;
        ParkingSystem.User user37 = new ParkingSystem.User();
        java.lang.Object obj38 = user37.user;
        ParkingSystem.Client client39 = ParkingSystem.Client.getInstance();
        java.lang.String str40 = client39.getName();
        client39.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry44 = parkingSpaceProxy43.getRegistry();
        boolean boolean46 = parkingSpaceProxy43.checkIn("");
        client39.assignProxy(parkingSpaceProxy43);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade48 = parkingSpaceProxy43.getFacade();
        user37.assignProxy(parkingSpaceProxy43);
        user34.parkingProxy = parkingSpaceProxy43;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade51 = parkingSpaceProxy43.getFacade();
        boolean boolean55 = parkingSpaceProxy43.editBooking("empty", "Refunded without deposit ($0.0)", 100);
        parkingSpaceProxy43.autoGenerateManager();
        accountRegistry3.assignProxyToClient("qPYDfDnbtD", parkingSpaceProxy43);
        ParkingSystem.Booking booking59 = parkingSpaceProxy43.getBookingDetails("Refunded total cost of $1.0");
        java.lang.Object obj62 = parkingSpaceProxy43.login("fhd49ADb", "3b453211-7dd1-4452-8741-a206711c1217");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(parkingSpaceProxy36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(client39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "jane" + "'", str40, "jane");
        org.junit.Assert.assertNotNull(accountRegistry44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade48);
        org.junit.Assert.assertNotNull(parkingSpaceFacade51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(booking59);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        parkingSpaceFacade17.toggleSpace("pass", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean25 = parkingSpaceFacade17.editBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 100);
        ParkingSystem.Booking booking27 = parkingSpaceFacade17.getBookingDetails("disabled");
        boolean boolean29 = parkingSpaceFacade17.checkIn("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean33 = parkingSpaceFacade17.editBooking("Refunded total cost of $0.0", "Paid $ 0.0 with Mobile Pay", 100);
        ParkingSystem.Booking booking35 = parkingSpaceFacade17.getBookingDetails("3b453211-7dd1-4452-8741-a206711c1217");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "jane" + "'", str6, "jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(booking35);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.ParkingLot parkingLot4 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot4.assignBooking(0, booking6);
        boolean boolean9 = parkingLot4.isSpaceAvailable((int) '#');
        boolean boolean11 = parkingLot4.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot4.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking14 = parkingSpace13.getCurrentBooking();
        ParkingSystem.Disabled disabled15 = new ParkingSystem.Disabled();
        parkingSpace13.setState((ParkingSystem.SpaceState) disabled15);
        java.lang.String str17 = disabled0.scanSpace(parkingSpace13);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking29 = parkingSpace28.getCurrentBooking();
        java.lang.String str30 = disabled0.scanSpace(parkingSpace28);
        boolean boolean31 = parkingSpace28.isAvailable();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(parkingSpace13);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertNull(booking29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "disabled" + "'", str30, "disabled");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        java.lang.String str19 = debitOrCredit17.getPaymentMessage();
        java.lang.String str20 = debitOrCredit17.getPaymentMessage();
        boolean boolean23 = debitOrCredit17.validateCard("CLT-035180a0-4707-410d-a011-2a4f0f46838b", (double) (short) 100);
        boolean boolean26 = debitOrCredit17.validateCard("Refunded without deposit ($-68.0)", (double) 0);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.SpaceManager spaceManager6 = bookingManager0.getSpaceManager();
        boolean boolean11 = bookingManager0.extendBooking("CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", (int) (short) 0, "CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.CheckInManager checkInManager12 = new ParkingSystem.CheckInManager(bookingManager0);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertNotNull(spaceManager6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager5.getSpaceManager();
        boolean boolean19 = bookingManager5.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double21 = bookingManager5.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit22 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit22);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit22);
        java.lang.String str25 = debitOrCredit22.getPaymentMessage();
        boolean boolean30 = debitOrCredit22.processPayment("pass", (double) (-1.0f), "qPYDfDnbtD", "0b35479f-5869-423e-9abc-e4ab9cef903d");
        boolean boolean35 = debitOrCredit22.processPayment("qPYDfDnbtD", (double) 0, "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", "e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        ParkingSystem.PaymentManager paymentManager14 = new ParkingSystem.PaymentManager();
        paymentManager14.refundMessage = "";
        boolean boolean18 = paymentManager14.refundTotalCost((double) (byte) 1);
        paymentManager14.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean23 = paymentManager14.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str24 = paymentManager14.paymentMessage;
        boolean boolean29 = paymentManager14.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy30 = null;
        paymentManager14.setStrategy(strategy30);
        java.lang.String str32 = paymentManager14.refundMessage;
        ParkingSystem.MobilePay mobilePay33 = new ParkingSystem.MobilePay();
        boolean boolean38 = mobilePay33.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str39 = mobilePay33.getPaymentMessage();
        java.lang.String str40 = mobilePay33.getPaymentMessage();
        boolean boolean45 = mobilePay33.processPayment("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", 1.0d, "disabled", "Refunded without deposit ($0.0)");
        paymentManager14.setStrategy((ParkingSystem.Strategy) mobilePay33);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay33);
        boolean boolean49 = paymentManager0.refundDeposit((double) 32);
        paymentManager0.paymentMessage = "Card number should be 16 digits";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str24, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str32, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str39, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str40, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap8 = accountRegistry6.getManagers();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry6);
        int int10 = accountRegistry6.getManagersSize();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap11 = accountRegistry6.getManagers();
        java.util.List<ParkingSystem.Client> clientList12 = accountRegistry6.displayPendingValidations();
        java.util.List<ParkingSystem.Client> clientList13 = accountRegistry6.displayPendingValidations();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(clientList12);
        org.junit.Assert.assertNotNull(clientList13);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.registry;
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry10.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str5, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str6, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "staff" + "'", str9, "staff");
        org.junit.Assert.assertNotNull(accountRegistry10);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace4 = parkingLot1.getParkingSpace((int) (byte) -1);
        ParkingSystem.Booking booking5 = parkingSpace4.getCurrentBooking();
        ParkingSystem.ParkingLot parkingLot7 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking9 = null;
        boolean boolean10 = parkingLot7.assignBooking(0, booking9);
        boolean boolean12 = parkingLot7.isSpaceAvailable((int) '#');
        boolean boolean14 = parkingLot7.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace16 = parkingLot7.getParkingSpace((int) ' ');
        boolean boolean17 = parkingLot7.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace19 = parkingLot7.getParkingSpace((int) 'a');
        ParkingSystem.ParkingLot parkingLot21 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking23 = null;
        boolean boolean24 = parkingLot21.assignBooking(0, booking23);
        boolean boolean26 = parkingLot21.isSpaceAvailable((int) '#');
        boolean boolean28 = parkingLot21.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace30 = parkingLot21.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking31 = parkingSpace30.getCurrentBooking();
        ParkingSystem.Disabled disabled32 = new ParkingSystem.Disabled();
        parkingSpace30.setState((ParkingSystem.SpaceState) disabled32);
        parkingSpace19.setState((ParkingSystem.SpaceState) disabled32);
        parkingSpace4.setState((ParkingSystem.SpaceState) disabled32);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertNotNull(parkingSpace4);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(parkingSpace16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(parkingSpace19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(parkingSpace30);
        org.junit.Assert.assertNull(booking31);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager21 = bookingManager0.getSpaceManager();
        boolean boolean31 = bookingManager0.confirmBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", "3b453211-7dd1-4452-8741-a206711c1217", "jane", "", (int) (byte) 1, "Refunded without deposit ($-42.0)", (int) (short) 1, "", "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        boolean boolean36 = bookingManager0.extendBooking("Refunded without deposit ($-15.0)", (int) (short) 10, "CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getPassword();
        boolean boolean17 = client0.extendBooking((int) (short) 10);
        boolean boolean18 = client0.checkOut();
        boolean boolean19 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
// flaky "14) test2635(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        paymentManager0.paymentMessage = "";
        paymentManager0.paymentMessage = "";
        ParkingSystem.BookingManager bookingManager7 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager7);
        ParkingSystem.SpaceManager spaceManager9 = bookingManager7.getSpaceManager();
        double double12 = bookingManager7.calculateCost("", (int) (byte) 10);
        ParkingSystem.MobilePay mobilePay13 = new ParkingSystem.MobilePay();
        boolean boolean18 = mobilePay13.processPayment("hi!", (-1.0d), "", "");
        boolean boolean23 = mobilePay13.processPayment("hi!", (double) 100, "jane", "disabled");
        bookingManager7.setPaymentStrategy((ParkingSystem.Strategy) mobilePay13);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay13);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 165.0d + "'", double12 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = parkingSpaceFacade0.scanSpace("jane", "Refunded without deposit ($0.0)");
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("Jane", "");
        ParkingSystem.SpaceManager spaceManager11 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean15 = parkingSpaceFacade0.editBooking("Refunded total cost of $-1.0", "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(spaceManager11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        parkingSpaceFacade0.toggleSpace("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "", false);
        ParkingSystem.CheckInManager checkInManager11 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean13 = checkInManager11.checkIn("25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(checkInManager11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("Refunded without deposit ($0.0)");
        double double7 = bookingManager0.getDeposit("ST001");
        double double9 = bookingManager0.getDeposit("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.Booking booking11 = bookingManager0.getBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 15.0d + "'", double9 == 15.0d);
        org.junit.Assert.assertNull(booking11);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        boolean boolean11 = client0.checkOut();
        java.lang.String str12 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = null;
        accountRegistry20.assignProxyToManager("jane", parkingSpaceProxy22);
        ParkingSystem.Manager manager24 = accountRegistry20.autoGenerateManager();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(manager24);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        double double21 = bookingManager18.calculateCost("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) (byte) 10);
        ParkingSystem.Booking booking23 = bookingManager18.getBooking("");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 165.0d + "'", double21 == 165.0d);
        org.junit.Assert.assertNull(booking23);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.toggleLot("pass", true);
        spaceManager0.toggleLot("Paid $ -1.0 with Mobile Pay", false);
        spaceManager0.addParkingLot("Paid $ 1470.0 with Mobile Pay");
        ParkingSystem.ParkingLot parkingLot23 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking25 = null;
        boolean boolean26 = parkingLot23.assignBooking(0, booking25);
        boolean boolean28 = parkingLot23.isSpaceAvailable((int) '#');
        boolean boolean30 = parkingLot23.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace32 = parkingLot23.getParkingSpace((int) (byte) 10);
        int int33 = parkingSpace32.getSpaceId();
        ParkingSystem.Booking booking34 = parkingSpace32.getCurrentBooking();
        java.lang.String str35 = parkingSpace32.scanSpace();
        int int36 = parkingSpace32.getSpaceId();
        ParkingSystem.SpaceManager spaceManager37 = new ParkingSystem.SpaceManager();
        boolean boolean40 = spaceManager37.isSpaceAvailable("hi!", (int) '#');
        spaceManager37.toggleLot("disabled", false);
        ParkingSystem.Booking booking53 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean54 = spaceManager37.assignBooking("empty", (int) (short) 0, booking53);
        java.lang.String str55 = booking53.getClientId();
        boolean boolean56 = parkingSpace32.assignBooking(booking53);
        int int57 = booking53.getDuration();
        boolean boolean58 = booking53.isCheckedIn();
        int int59 = booking53.getDuration();
        boolean boolean60 = spaceManager0.assignBooking("", 1, booking53);
        boolean boolean63 = spaceManager0.isSpaceAvailable("", (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(parkingSpace32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNull(booking34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "empty" + "'", str35, "empty");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "staff" + "'", str55, "staff");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 32 + "'", int57 == 32);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 32 + "'", int59 == 32);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLotIterator parkingLotIterator8 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator8.next();
        boolean boolean10 = parkingLotIterator8.hasNext();
        boolean boolean11 = parkingLotIterator8.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            parkingLotIterator8.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator8);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade19 = parkingSpaceProxy0.getFacade();
        parkingSpaceProxy0.displayPendingValidations();
        parkingSpaceProxy0.autoGenerateManager();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade19);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.displayPendingValidations();
        parkingSpaceProxy1.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy1.getFacade();
        boolean boolean21 = parkingSpaceFacade17.editBooking("CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", 100);
        ParkingSystem.CheckInManager checkInManager22 = parkingSpaceFacade17.getCheckInManager();
        ParkingSystem.BookingManager bookingManager23 = parkingSpaceFacade17.getBookingManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap24 = bookingManager23.getActiveBookings();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(checkInManager22);
        org.junit.Assert.assertNotNull(bookingManager23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap20 = bookingManager0.getActiveBookings();
        double double22 = bookingManager0.getDeposit("CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getPassword();
        boolean boolean16 = client0.cancelBooking();
        boolean boolean24 = client0.confirmBooking("Card number should be 16 digits", "Refunded without deposit ($-96.0)", (int) ' ', "", 10, "ST001", "Refunded total cost of $1.0");
        boolean boolean26 = client0.extendBooking(2);
        ParkingSystem.Booking booking27 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(booking27);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        ParkingSystem.AccountRegistry accountRegistry6 = null;
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj17 = parkingSpaceProxy14.login("empty", "Jane");
        parkingSpaceProxy14.validateClient("Jane");
        parkingSpaceProxy14.toggleSpace("", "staff", false);
        accountRegistry12.assignProxyToManager("pass", parkingSpaceProxy14);
        ParkingSystem.Client client26 = accountRegistry12.getClient("");
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry12);
        superManager7.registry = accountRegistry12;
        ParkingSystem.AccountRegistry accountRegistry29 = superManager7.getRegistry();
        ParkingSystem.Manager manager30 = accountRegistry29.autoGenerateManager();
        ParkingSystem.SuperManager superManager31 = ParkingSystem.SuperManager.createFromCSV("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", accountRegistry29);
// flaky "15) test2649(RegressionTest5)":         superManager31.validateClient("433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertNotNull(manager30);
        org.junit.Assert.assertNotNull(superManager31);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        parkingLot1.setEnabled(true);
        ParkingSystem.Booking booking12 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double13 = booking12.getTotalCost();
        java.lang.String str14 = booking12.getLotId();
        int int15 = booking12.getDuration();
        java.lang.String str16 = booking12.getLotId();
        boolean boolean17 = parkingLot1.assignBooking((int) (byte) 10, booking12);
        booking12.setStartTime("Refunded without deposit ($1.0)");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "jane" + "'", str14, "jane");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "jane" + "'", str16, "jane");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        parkingLot1.setEnabled(true);
        ParkingSystem.ParkingSpace parkingSpace5 = parkingLot1.getParkingSpace((int) (byte) -1);
        int int6 = parkingSpace5.getSpaceId();
        org.junit.Assert.assertNotNull(parkingSpace5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.toggleSpace("Refunded without deposit ($0.0)", "disabled", false);
        spaceManager0.removeBooking("qPYDfDnbtD", (int) (byte) 1);
        spaceManager0.removeBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (byte) 100);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap17 = spaceManager0.getParkingLots();
        boolean boolean20 = spaceManager0.isSpaceAvailable("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", 100);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        boolean boolean40 = parkingSpaceFacade33.extendBooking("jane", (int) ' ');
        ParkingSystem.SpaceManager spaceManager41 = parkingSpaceFacade33.getSpaceManager();
        boolean boolean51 = parkingSpaceFacade33.confirmBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) '#', "Paid $ -1.0 with Mobile Pay", (int) (short) -1, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean53 = parkingSpaceFacade33.checkOut("Paid $ 10.0 with Mobile Pay");
        boolean boolean63 = parkingSpaceFacade33.confirmBooking("TXCrKOGD", "qMzKSKOI", "jane", "Paid $ 1.0 with Mobile Pay", (int) (short) 100, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 0, "Paid $ -1.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean66 = parkingSpaceFacade33.extendBooking("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8", (int) ' ');
        ParkingSystem.CheckInManager checkInManager67 = parkingSpaceFacade33.getCheckInManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(checkInManager67);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        java.lang.String str19 = superManager18.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry20 = superManager18.registry;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager18);
        ParkingSystem.Manager manager22 = superManager18.autoGenerateManager();
        ParkingSystem.Client client23 = ParkingSystem.Client.getInstance();
        java.lang.String str24 = client23.getUsername();
        ParkingSystem.User user25 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj29 = parkingSpaceProxy26.login("empty", "Jane");
        parkingSpaceProxy26.validateClient("Jane");
        parkingSpaceProxy26.toggleSpace("", "staff", false);
        boolean boolean37 = parkingSpaceProxy26.cancelBooking("");
        user25.assignProxy(parkingSpaceProxy26);
        client23.assignProxy(parkingSpaceProxy26);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy40 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry41 = parkingSpaceProxy40.getRegistry();
        boolean boolean43 = parkingSpaceProxy40.checkIn("");
        client23.assignProxy(parkingSpaceProxy40);
        parkingSpaceProxy40.validateClient("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        parkingSpaceProxy40.toggleLot("empty", true);
        java.lang.Object obj52 = parkingSpaceProxy40.login("3b453211-7dd1-4452-8741-a206711c1217", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        manager22.assignProxy(parkingSpaceProxy40);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str19, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(manager22);
        org.junit.Assert.assertNotNull(client23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(accountRegistry41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj33 = parkingSpaceProxy30.login("empty", "Jane");
        parkingSpaceProxy30.validateClient("Jane");
        parkingSpaceProxy30.toggleSpace("", "staff", false);
        accountRegistry28.assignProxyToManager("pass", parkingSpaceProxy30);
        boolean boolean46 = parkingSpaceProxy30.register("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled", "Refunded total cost of $1.0", "", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy30;
        java.lang.Object obj48 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking51 = parkingSpaceProxy49.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry52 = parkingSpaceProxy49.getRegistry();
        parkingSpaceProxy49.displayPendingValidations();
        user0.parkingProxy = parkingSpaceProxy49;
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(booking51);
        org.junit.Assert.assertNotNull(accountRegistry52);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        parkingLot1.removeBooking(10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(32);
        ParkingSystem.ParkingLotIterator parkingLotIterator12 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLotIterator12.next();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNotNull(parkingLotIterator12);
        org.junit.Assert.assertNotNull(parkingSpace13);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace1 = null;
        java.lang.String str2 = disabled0.scanSpace(parkingSpace1);
        ParkingSystem.Enabled enabled3 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot5 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking7 = null;
        boolean boolean8 = parkingLot5.assignBooking(0, booking7);
        boolean boolean10 = parkingLot5.isSpaceAvailable((int) '#');
        boolean boolean12 = parkingLot5.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace14 = parkingLot5.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking15 = parkingSpace14.getCurrentBooking();
        parkingSpace14.removeBooking();
        java.lang.String str17 = enabled3.scanSpace(parkingSpace14);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking21 = null;
        boolean boolean22 = parkingLot19.assignBooking(0, booking21);
        boolean boolean24 = parkingLot19.isSpaceAvailable((int) '#');
        boolean boolean26 = parkingLot19.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace28 = parkingLot19.getParkingSpace((int) (byte) 10);
        int int29 = parkingSpace28.getSpaceId();
        ParkingSystem.Booking booking30 = parkingSpace28.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager31 = new ParkingSystem.SpaceManager();
        boolean boolean34 = spaceManager31.isSpaceAvailable("hi!", (int) '#');
        spaceManager31.toggleLot("disabled", false);
        ParkingSystem.Booking booking47 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean48 = spaceManager31.assignBooking("empty", (int) (short) 0, booking47);
        boolean boolean49 = parkingSpace28.assignBooking(booking47);
        java.lang.String str50 = enabled3.scanSpace(parkingSpace28);
        java.lang.String str51 = disabled0.scanSpace(parkingSpace28);
        ParkingSystem.ParkingLot parkingLot53 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking55 = null;
        boolean boolean56 = parkingLot53.assignBooking(0, booking55);
        boolean boolean58 = parkingLot53.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator59 = parkingLot53.getIterator();
        parkingLot53.removeBooking(0);
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLot53.getParkingSpace(0);
        java.lang.String str64 = disabled0.scanSpace(parkingSpace63);
        ParkingSystem.ParkingLot parkingLot66 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking68 = null;
        boolean boolean69 = parkingLot66.assignBooking(0, booking68);
        boolean boolean71 = parkingLot66.isSpaceAvailable((int) '#');
        boolean boolean73 = parkingLot66.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator74 = parkingLot66.getIterator();
        boolean boolean75 = parkingLot66.isEnabled();
        boolean boolean77 = parkingLot66.isSpaceAvailable((int) (short) -1);
        ParkingSystem.ParkingSpace parkingSpace79 = parkingLot66.getParkingSpace(32);
        java.lang.String str80 = disabled0.scanSpace(parkingSpace79);
        ParkingSystem.ParkingSpace parkingSpace82 = new ParkingSystem.ParkingSpace((-1));
        java.lang.String str83 = disabled0.scanSpace(parkingSpace82);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "disabled" + "'", str2, "disabled");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpace14);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpace28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "disabled" + "'", str50, "disabled");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator59);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "disabled" + "'", str64, "disabled");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(parkingSpace79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "disabled" + "'", str80, "disabled");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "disabled" + "'", str83, "disabled");
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        checkInManager1.refundMessage = "staff";
        boolean boolean7 = checkInManager1.checkOut("89de8237-29df-4908-9de4-6dc1ce90de94");
        checkInManager1.refundMessage = "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc";
        java.lang.String str10 = checkInManager1.refundMessage;
        checkInManager1.refundMessage = "CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc" + "'", str10, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setClientInfo("pass", "Paid $ 10.0 with Mobile Pay", "pass", "Jane", "2afd610d-a8cb-413a-bbee-7927f86b526c", "hi!", false);
        boolean boolean20 = client0.checkIn();
        java.lang.String str21 = client0.getName();
        ParkingSystem.Booking booking22 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str1, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str21, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNull(booking22);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager6.getSpaceManager();
        double double11 = bookingManager6.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit12 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        boolean boolean18 = debitOrCredit12.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        double double21 = bookingManager0.getHourlyRate("");
        ParkingSystem.CheckInManager checkInManager22 = new ParkingSystem.CheckInManager(bookingManager0);
        double double24 = bookingManager0.getDeposit("Refunded total cost of $100.0");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap25 = bookingManager0.getActiveBookings();
        ParkingSystem.Booking booking27 = bookingManager0.getBooking("13b04414-31a5-407f-8ea3-fba4613c73d1");
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager0);
        java.lang.String str29 = checkInManager28.refundMessage;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 165.0d + "'", double11 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getPassword();
        boolean boolean17 = client0.extendBooking((int) (short) 10);
        java.lang.String str18 = client0.getClientType();
        ParkingSystem.Booking booking19 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str1, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertNull(booking19);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy16 = null;
        paymentManager0.setStrategy(strategy16);
        java.lang.String str18 = paymentManager0.refundMessage;
        boolean boolean20 = paymentManager0.refundDeposit((double) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str18, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingSpace parkingSpace8 = parkingLot1.getParkingSpace((int) ' ');
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        // The following exception was thrown during execution in test generation
        try {
            parkingLotIterator9.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingSpace8);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", true);
        boolean boolean12 = parkingSpaceFacade0.editBooking("Paid $ 15.0 with Mobile Pay", "pass", (int) (byte) -1);
        boolean boolean14 = parkingSpaceFacade0.cancelBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry3 = parkingSpaceProxy0.getRegistry();
        parkingSpaceProxy0.autoGenerateManager();
        parkingSpaceProxy0.toggleSpace("staff", "Jane", false);
        parkingSpaceProxy0.displayPendingValidations();
        boolean boolean11 = parkingSpaceProxy0.checkIn("Refunded without deposit ($-42.0)");
        parkingSpaceProxy0.displayPendingValidations();
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy0.getRegistry();
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(accountRegistry3);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(accountRegistry13);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        double double5 = bookingManager3.getHourlyRate("jane");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        bookingManager3.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        ParkingSystem.Booking booking9 = bookingManager3.getBooking("Paid $ 100.0 with Mobile Pay");
        boolean boolean13 = bookingManager3.editBooking("5XQfkf24zK", "CLT-55105d92-54d6-44d2-965a-736022b7f7cd", (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNull(booking9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = parkingSpaceFacade0.scanSpace("jane", "Refunded without deposit ($0.0)");
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("Jane", "");
        ParkingSystem.Booking booking12 = parkingSpaceFacade0.getBookingDetails("4a1f2343-8b2e-4dea-ba69-efd105414390");
        parkingSpaceFacade0.addParkingLot("Refunded total cost of $1.0");
        ParkingSystem.CheckInManager checkInManager15 = parkingSpaceFacade0.getCheckInManager();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertNotNull(checkInManager15);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        java.lang.String str5 = paymentManager0.refundMessage;
        boolean boolean7 = paymentManager0.refundDeposit((double) ' ');
        java.lang.String str8 = paymentManager0.paymentMessage;
        paymentManager0.refundMessage = "Refunded total cost of $-1.0";
        boolean boolean12 = paymentManager0.refundDeposit((double) (byte) -1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str5, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.cancelBooking("Refunded without deposit ($0.0)");
        boolean boolean8 = parkingSpaceFacade0.cancelBooking("8ca2ec61-774c-409d-89d5-5b9171b40497");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        java.lang.String str19 = debitOrCredit17.getPaymentMessage();
        java.lang.String str20 = debitOrCredit17.getPaymentMessage();
        java.lang.String str21 = debitOrCredit17.getPaymentMessage();
        boolean boolean24 = debitOrCredit17.validateCard("8bf217fa-1769-4d04-858b-ce78fe94bf0c", 0.0d);
        boolean boolean27 = debitOrCredit17.validateCard("9701df9a-2178-4ad5-8076-46ff5f05b3e8", (double) 10);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking15 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean16 = parkingLot1.assignBooking((int) (short) -1, booking15);
        java.lang.String str17 = booking15.getLotId();
        java.lang.String str18 = booking15.getLicensePlate();
        int int19 = booking15.getDuration();
        boolean boolean20 = booking15.isCheckedIn();
        booking15.setDuration((int) (byte) 100);
        java.lang.String str23 = booking15.getClientId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "jane" + "'", str17, "jane");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "staff" + "'", str23, "staff");
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy6.getFacade();
        user0.assignProxy(parkingSpaceProxy6);
        java.lang.Object obj13 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.displayPendingValidations();
        parkingSpaceProxy1.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        boolean boolean26 = parkingSpaceProxy1.confirmBooking("CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f", "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3", "CLT-4aab5c22-53d4-41cb-8ccf-dd435bb7f17b", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", 3, "Paid $ 15.0 with Mobile Pay", (int) '4', "8bf217fa-1769-4d04-858b-ce78fe94bf0c", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        spaceManager8.removeBooking("jane", (int) '#');
        ParkingSystem.ParkingLot parkingLot15 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking17 = null;
        boolean boolean18 = parkingLot15.assignBooking(0, booking17);
        boolean boolean20 = parkingLot15.isSpaceAvailable((int) '#');
        boolean boolean22 = parkingLot15.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLot15.getParkingSpace((int) (byte) 10);
        int int25 = parkingSpace24.getSpaceId();
        ParkingSystem.Booking booking26 = parkingSpace24.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager27 = new ParkingSystem.SpaceManager();
        boolean boolean30 = spaceManager27.isSpaceAvailable("hi!", (int) '#');
        spaceManager27.toggleLot("disabled", false);
        ParkingSystem.Booking booking43 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean44 = spaceManager27.assignBooking("empty", (int) (short) 0, booking43);
        boolean boolean45 = parkingSpace24.assignBooking(booking43);
        boolean boolean46 = spaceManager8.assignBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (short) 100, booking43);
        booking43.setStartTime("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        int int49 = booking43.getSpaceId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNull(booking26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean18 = bookingManager0.cancelBooking("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        ParkingSystem.DebitOrCredit debitOrCredit21 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit21);
        ParkingSystem.BookingManager bookingManager23 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager24 = new ParkingSystem.CheckInManager(bookingManager23);
        ParkingSystem.SpaceManager spaceManager25 = bookingManager23.getSpaceManager();
        double double28 = bookingManager23.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit29 = new ParkingSystem.DebitOrCredit();
        bookingManager23.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit29);
        boolean boolean35 = debitOrCredit29.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str36 = debitOrCredit29.getPaymentMessage();
        boolean boolean41 = debitOrCredit29.processPayment("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 0.0d, "disabled", "");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit29);
        boolean boolean47 = debitOrCredit29.processPayment("Paid $ 0.0 with Mobile Pay", (double) 1, "CLT-55105d92-54d6-44d2-965a-736022b7f7cd", "TXCrKOGD");
        boolean boolean52 = debitOrCredit29.processPayment("", (double) (byte) -1, "", "e8686ac8-1df7-4a9b-b299-8fbcdd585528");
        java.lang.String str53 = debitOrCredit29.getPaymentMessage();
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertNotNull(spaceManager25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 165.0d + "'", double28 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Card number should be 16 digits" + "'", str36, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Card number should be 16 digits" + "'", str53, "Card number should be 16 digits");
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager3 = parkingSpaceFacade1.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager3.getParkingLots();
        cSVManager0.loadParkingLots(strMap4);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        cSVManager0.updateClientValidation("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        ParkingSystem.Client client10 = ParkingSystem.Client.getInstance();
        java.lang.String str11 = client10.getName();
        client10.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str20 = client10.getUsername();
        java.lang.String str21 = client10.getPassword();
        java.lang.String str22 = client10.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = null;
        client10.assignProxy(parkingSpaceProxy23);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy25 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj28 = parkingSpaceProxy25.login("empty", "Jane");
        client10.assignProxy(parkingSpaceProxy25);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking32 = parkingSpaceProxy30.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry33 = parkingSpaceProxy30.getRegistry();
        parkingSpaceProxy30.autoGenerateManager();
        client10.assignProxy(parkingSpaceProxy30);
        cSVManager0.saveClient(client10);
        java.lang.String str37 = client10.getUsername();
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "16) test2676(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "disabled" + "'", str21, "disabled");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(booking32);
        org.junit.Assert.assertNotNull(accountRegistry33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        ParkingSystem.User user18 = new ParkingSystem.User();
        java.lang.Object obj19 = user18.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = user18.parkingProxy;
        ParkingSystem.User user21 = new ParkingSystem.User();
        java.lang.Object obj22 = user21.user;
        ParkingSystem.Client client23 = ParkingSystem.Client.getInstance();
        java.lang.String str24 = client23.getName();
        client23.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry28 = parkingSpaceProxy27.getRegistry();
        boolean boolean30 = parkingSpaceProxy27.checkIn("");
        client23.assignProxy(parkingSpaceProxy27);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade32 = parkingSpaceProxy27.getFacade();
        user21.assignProxy(parkingSpaceProxy27);
        user18.parkingProxy = parkingSpaceProxy27;
        ParkingSystem.AccountRegistry accountRegistry38 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager39 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry38);
        boolean boolean41 = accountRegistry38.requiresValidation("disabled");
        int int42 = accountRegistry38.getManagersSize();
        boolean boolean48 = accountRegistry38.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy50 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj53 = parkingSpaceProxy50.login("empty", "Jane");
        parkingSpaceProxy50.validateClient("Jane");
        parkingSpaceProxy50.toggleSpace("", "staff", false);
        boolean boolean61 = parkingSpaceProxy50.cancelBooking("Jane");
        accountRegistry38.assignProxyToClient("pass", parkingSpaceProxy50);
        parkingSpaceProxy50.autoGenerateManager();
        parkingSpaceProxy50.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        user18.assignProxy(parkingSpaceProxy50);
        user0.assignProxy(parkingSpaceProxy50);
        boolean boolean72 = parkingSpaceProxy50.extendBooking("Refunded without deposit ($-96.0)", (int) (byte) 100);
        parkingSpaceProxy50.displayPendingValidations();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(parkingSpaceProxy20);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(client23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade32);
        org.junit.Assert.assertNotNull(superManager39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        int int26 = parkingSpace25.getSpaceId();
        ParkingSystem.Booking booking27 = parkingSpace25.getCurrentBooking();
        java.lang.String str28 = parkingSpace25.scanSpace();
        int int29 = parkingSpace25.getSpaceId();
        ParkingSystem.SpaceManager spaceManager30 = new ParkingSystem.SpaceManager();
        boolean boolean33 = spaceManager30.isSpaceAvailable("hi!", (int) '#');
        spaceManager30.toggleLot("disabled", false);
        ParkingSystem.Booking booking46 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean47 = spaceManager30.assignBooking("empty", (int) (short) 0, booking46);
        java.lang.String str48 = booking46.getClientId();
        boolean boolean49 = parkingSpace25.assignBooking(booking46);
        int int50 = booking46.getDuration();
        boolean boolean51 = parkingSpace10.assignBooking(booking46);
        booking46.setStartTime("Paid $ 10.0 with Mobile Pay");
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime54 = booking46.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Paid $ 10.0 with Mobile Pay' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "empty" + "'", str28, "empty");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "staff" + "'", str48, "staff");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.Manager manager8 = superManager4.autoGenerateManager();
        java.lang.String str9 = manager8.getName();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str5, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str6, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(manager8);
// flaky "17) test2679(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "5IYmtlKE" + "'", str9, "5IYmtlKE");
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.User user20 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("");
        user20.assignProxy(parkingSpaceProxy21);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy34.getRegistry();
        boolean boolean41 = parkingSpaceProxy34.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean45 = parkingSpaceProxy34.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user20.parkingProxy = parkingSpaceProxy34;
        user0.parkingProxy = parkingSpaceProxy34;
        java.lang.Object obj50 = user0.login("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "qPYDfDnbtD");
        java.lang.Object obj51 = user0.user;
        java.lang.Object obj52 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(parkingSpaceProxy18);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(accountRegistry35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertEquals("'" + obj51 + "' != '" + true + "'", obj51, true);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + true + "'", obj52, true);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.registry;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        superManager4.setManagerInfo("433f3d1f-f758-4ae3-972b-7fb179aedfd7", "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e", "e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        java.lang.String str16 = superManager4.getName();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str5, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str6, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str9, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertNotNull(manager11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e" + "'", str16, "CLT-be0c8baf-d002-4bd3-a0a4-b45542b3f61e");
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        ParkingSystem.AccountRegistry accountRegistry12 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager13 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry12);
        boolean boolean15 = accountRegistry12.requiresValidation("disabled");
        int int16 = accountRegistry12.getManagersSize();
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry12);
        ParkingSystem.AccountRegistry accountRegistry18 = superManager17.getRegistry();
        accountRegistry18.validateClient("pass");
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry18);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = null;
        superManager21.assignProxy(parkingSpaceProxy22);
        ParkingSystem.AccountRegistry accountRegistry24 = superManager21.getRegistry();
        ParkingSystem.Client client26 = accountRegistry24.getClient("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("Refunded without deposit ($-96.0)", "pass", "3b453211-7dd1-4452-8741-a206711c1217", accountRegistry24);
        ParkingSystem.AccountRegistry accountRegistry28 = superManager27.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry29 = superManager27.registry;
        org.junit.Assert.assertNotNull(superManager13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertNotNull(accountRegistry28);
        org.junit.Assert.assertNotNull(accountRegistry29);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        accountRegistry1.assignProxyToManager("pass", parkingSpaceProxy3);
        boolean boolean15 = parkingSpaceProxy3.checkIn("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade16 = parkingSpaceProxy3.getFacade();
        ParkingSystem.Booking booking18 = parkingSpaceFacade16.getBookingDetails("CLT-631eb509-a6c4-407c-b16d-582a6faabddb");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade16);
        org.junit.Assert.assertNull(booking18);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        parkingSpaceFacade0.addParkingLot("Jane");
        ParkingSystem.BookingManager bookingManager6 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.SpaceManager spaceManager7 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertNotNull(bookingManager6);
        org.junit.Assert.assertNotNull(spaceManager7);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean4 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) 10);
        boolean boolean7 = parkingSpaceFacade0.extendBooking("Paid $ 0.0 with Mobile Pay", (int) (byte) 1);
        boolean boolean10 = parkingSpaceFacade0.extendBooking("Refunded without deposit ($-42.0)", (int) (byte) 100);
        boolean boolean20 = parkingSpaceFacade0.confirmBooking("jane", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "fhd49ADb", "disabled", (int) (byte) -1, "09622cbf-e665-45db-b1ad-365065947a20", (int) (byte) 10, "hi!", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        ParkingSystem.BookingManager bookingManager21 = parkingSpaceFacade0.getBookingManager();
        boolean boolean23 = parkingSpaceFacade0.checkIn("13b04414-31a5-407f-8ea3-fba4613c73d1");
        ParkingSystem.SpaceManager spaceManager24 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookingManager21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(spaceManager24);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade0.getBookingManager();
        boolean boolean8 = bookingManager4.editBooking("jane", "", (int) (byte) 10);
        boolean boolean12 = bookingManager4.editBooking("qMzKSKOI", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", (int) (byte) 100);
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace((int) (short) -1);
        ParkingSystem.SpaceManager spaceManager2 = new ParkingSystem.SpaceManager();
        spaceManager2.toggleLot("Jane", false);
        spaceManager2.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager11 = new ParkingSystem.SpaceManager();
        boolean boolean14 = spaceManager11.isSpaceAvailable("hi!", (int) '#');
        spaceManager11.toggleLot("disabled", false);
        ParkingSystem.Booking booking27 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean28 = spaceManager11.assignBooking("empty", (int) (short) 0, booking27);
        boolean boolean29 = spaceManager2.assignBooking("hi!", 0, booking27);
        double double30 = booking27.getTotalCost();
        booking27.setDuration((-1));
        boolean boolean33 = booking27.isCheckedIn();
        int int34 = booking27.getDuration();
        boolean boolean35 = parkingSpace1.assignBooking(booking27);
        int int36 = parkingSpace1.getSpaceId();
        parkingSpace1.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        ParkingSystem.MobilePay mobilePay4 = new ParkingSystem.MobilePay();
        boolean boolean9 = mobilePay4.processPayment("hi!", (-1.0d), "", "");
        boolean boolean14 = mobilePay4.processPayment("staff", (double) (-1L), "disabled", "pass");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay4);
        boolean boolean17 = paymentManager0.refundTotalCost((double) 'a');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.User user2 = new ParkingSystem.User();
        java.lang.Object obj3 = user2.user;
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry9 = parkingSpaceProxy8.getRegistry();
        boolean boolean11 = parkingSpaceProxy8.checkIn("");
        client4.assignProxy(parkingSpaceProxy8);
        boolean boolean13 = client4.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        client4.assignProxy(parkingSpaceProxy14);
        ParkingSystem.AccountRegistry accountRegistry16 = parkingSpaceProxy14.getRegistry();
        boolean boolean18 = parkingSpaceProxy14.checkIn("hi!");
        user2.parkingProxy = parkingSpaceProxy14;
        user2.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = user2.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        user2.assignProxy(parkingSpaceProxy27);
        boolean boolean38 = parkingSpaceProxy27.confirmBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "09622cbf-e665-45db-b1ad-365065947a20", "Paid $ 15.0 with Mobile Pay", (int) (byte) -1, "Refunded without deposit ($0.0)", 0, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        user0.assignProxy(parkingSpaceProxy27);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy40 = user0.parkingProxy;
        user0.register("86z9Z9e0MN", "CLT-0018b5f2-4f8d-4ac6-8c8d-394f6b7b51a1", "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "Paid $ 100.0 with Mobile Pay", "TXCrKOGD");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "empty" + "'", str5, "empty");
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(accountRegistry16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy26);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy40);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        java.util.List<java.lang.String[]> strArrayList8 = cSVManager0.readCSV("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Client client9 = ParkingSystem.Client.getInstance();
        java.lang.String str10 = client9.getName();
        client9.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str19 = client9.getUsername();
        java.lang.String str20 = client9.getPassword();
        java.lang.String str21 = client9.getUsername();
        cSVManager0.saveClient(client9);
        boolean boolean23 = client9.cancelBooking();
        java.lang.String str24 = client9.getExtraId();
        java.lang.String str25 = client9.getName();
        ParkingSystem.AccountRegistry accountRegistry29 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager30 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry29);
        boolean boolean32 = accountRegistry29.requiresValidation("disabled");
        int int33 = accountRegistry29.getManagersSize();
        boolean boolean39 = accountRegistry29.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy41 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj44 = parkingSpaceProxy41.login("empty", "Jane");
        parkingSpaceProxy41.validateClient("Jane");
        parkingSpaceProxy41.toggleSpace("", "staff", false);
        boolean boolean52 = parkingSpaceProxy41.cancelBooking("Jane");
        accountRegistry29.assignProxyToClient("pass", parkingSpaceProxy41);
        parkingSpaceProxy41.toggleSpace("empty", "Paid $ 10.0 with Mobile Pay", false);
        client9.assignProxy(parkingSpaceProxy41);
        java.lang.Object obj61 = parkingSpaceProxy41.login("lL3e2yIMXI", "CLT-b6a8264c-f386-4429-b59c-b7f465002e13");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList8);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "86z9Z9e0MN" + "'", str10, "86z9Z9e0MN");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(superManager30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        boolean boolean17 = parkingLot10.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace19 = parkingLot10.getParkingSpace((int) (byte) 10);
        int int20 = parkingSpace19.getSpaceId();
        ParkingSystem.Booking booking21 = parkingSpace19.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager22 = new ParkingSystem.SpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("hi!", (int) '#');
        spaceManager22.toggleLot("disabled", false);
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = spaceManager22.assignBooking("empty", (int) (short) 0, booking38);
        boolean boolean40 = parkingSpace19.assignBooking(booking38);
        ParkingSystem.SpaceManager spaceManager41 = new ParkingSystem.SpaceManager();
        boolean boolean44 = spaceManager41.isSpaceAvailable("hi!", (int) '#');
        spaceManager41.toggleLot("disabled", false);
        ParkingSystem.Booking booking57 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean58 = spaceManager41.assignBooking("empty", (int) (short) 0, booking57);
        boolean boolean59 = booking57.isCheckedIn();
        java.lang.String str60 = booking57.getClientId();
        boolean boolean61 = parkingSpace19.assignBooking(booking57);
        boolean boolean62 = parkingLot1.assignBooking(1, booking57);
        int int63 = booking57.getDuration();
        int int64 = booking57.getDuration();
        java.lang.String str65 = booking57.getLotId();
        double double66 = booking57.getTotalCost();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(parkingSpace19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNull(booking21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "staff" + "'", str60, "staff");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 32 + "'", int64 == 32);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "jane" + "'", str65, "jane");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1.0d + "'", double66 == 1.0d);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry5 = superManager4.getRegistry();
        java.util.List<ParkingSystem.Client> clientList6 = accountRegistry5.displayPendingValidations();
        java.util.List<ParkingSystem.Client> clientList7 = accountRegistry5.displayPendingValidations();
        ParkingSystem.Manager manager8 = accountRegistry5.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertNotNull(clientList6);
        org.junit.Assert.assertNotNull(clientList7);
        org.junit.Assert.assertNotNull(manager8);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("");
        parkingLot1.setEnabled(true);
        ParkingSystem.ParkingSpace parkingSpace5 = parkingLot1.getParkingSpace((int) (byte) -1);
        ParkingSystem.ParkingLotIterator parkingLotIterator6 = parkingLot1.getIterator();
        org.junit.Assert.assertNotNull(parkingSpace5);
        org.junit.Assert.assertNotNull(parkingLotIterator6);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        checkInManager1.refundMessage = "staff";
        boolean boolean7 = checkInManager1.checkIn("jane");
        boolean boolean9 = checkInManager1.checkIn("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        java.lang.String str10 = checkInManager1.refundMessage;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "staff" + "'", str10, "staff");
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean21 = client0.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str22 = client0.getName();
        boolean boolean24 = client0.extendBooking((int) ' ');
        boolean boolean25 = client0.getIsValidated();
        boolean boolean26 = client0.checkOut();
        boolean boolean27 = client0.checkOut();
        boolean boolean30 = client0.editBooking("2195f5f7-08e1-4b73-b5b8-a479a5b3e3c8", (int) (byte) 0);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager0.loadParkingLots(strMap6);
        ParkingSystem.Client client8 = ParkingSystem.Client.getInstance();
        java.lang.String str9 = client8.getClientType();
        cSVManager0.saveClient(client8);
        boolean boolean11 = client8.checkOut();
        boolean boolean12 = client8.cancelBooking();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean21 = client0.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str22 = client0.getName();
        boolean boolean24 = client0.extendBooking((int) ' ');
        boolean boolean25 = client0.getIsValidated();
        boolean boolean26 = client0.checkOut();
        java.lang.String str27 = client0.getClientType();
        client0.setClientInfo("CLT-2d7011d7-cb71-4953-84cc-0d7adf2da0d4", "Paid $ 0.0 with Mobile Pay", "CLT-390234b0-d56e-4275-bd7b-122280609c69", "62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-390234b0-d56e-4275-bd7b-122280609c69", true);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "disabled" + "'", str27, "disabled");
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        parkingSpaceProxy0.addParkingLot("empty");
        parkingSpaceProxy0.toggleLot("83a51dc6-0c8f-4f21-ae40-68699828f95d", true);
        boolean boolean12 = parkingSpaceProxy0.extendBooking("5XQfkf24zK", (int) '#');
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        java.lang.String str7 = spaceManager4.scanSpace("hi!", "Jane");
        spaceManager4.toggleSpace("CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", "CLT-55105d92-54d6-44d2-965a-736022b7f7cd", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.Booking booking13 = parkingSpaceFacade9.getBookingDetails("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean16 = parkingSpaceFacade9.extendBooking("ST001", 2);
        ParkingSystem.CheckInManager checkInManager17 = parkingSpaceFacade9.getCheckInManager();
        boolean boolean20 = parkingSpaceFacade9.extendBooking("CLT-578de262-c6ef-49e3-b501-8fdbcb54d0f4", 4);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str1, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(checkInManager17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        boolean boolean2 = parkingSpaceProxy0.cancelBooking("pass");
        parkingSpaceProxy0.addParkingLot("pass");
        boolean boolean6 = parkingSpaceProxy0.checkIn("Paid $ 100.0 with Mobile Pay");
        boolean boolean12 = parkingSpaceProxy0.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Refunded without deposit ($-42.0)", "Paid $ 0.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled");
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy0.getRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap14 = accountRegistry13.getManagers();
        java.util.List<ParkingSystem.Client> clientList15 = accountRegistry13.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        parkingSpaceProxy17.toggleLot("", true);
        parkingSpaceProxy17.autoGenerateManager();
        boolean boolean27 = parkingSpaceProxy17.extendBooking("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8", (-1));
        accountRegistry13.assignProxyToClient("lL3e2yIMXI", parkingSpaceProxy17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(clientList15);
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.paymentMessage = "pass";
        java.lang.String str6 = paymentManager0.paymentMessage;
        java.lang.String str7 = paymentManager0.paymentMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pass" + "'", str6, "pass");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pass" + "'", str7, "pass");
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean18 = parkingSpaceProxy0.editBooking("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", (int) (byte) 1);
        parkingSpaceProxy0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", false);
        ParkingSystem.AccountRegistry accountRegistry22 = parkingSpaceProxy0.getRegistry();
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry22.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(accountRegistry22);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        boolean boolean23 = bookingManager18.extendBooking("Paid $ 0.0 with Mobile Pay", (int) 'a', "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        double double25 = bookingManager18.getHourlyRate("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        double double28 = bookingManager18.calculateCost("CLT-55105d92-54d6-44d2-965a-736022b7f7cd", (int) (short) 100);
        ParkingSystem.AccountRegistry accountRegistry29 = bookingManager18.getAccountRegistry();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
// flaky "18) test2704(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Jane" + "'", str6, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 15.0d + "'", double25 == 15.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1515.0d + "'", double28 == 1515.0d);
        org.junit.Assert.assertNotNull(accountRegistry29);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        boolean boolean11 = client0.extendBooking(100);
        client0.setValidated(true);
        boolean boolean16 = client0.editBooking("86z9Z9e0MN", 100);
        boolean boolean17 = client0.checkIn();
        org.junit.Assert.assertNotNull(client0);
// flaky "19) test2705(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        parkingLot1.removeBooking(10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(32);
        boolean boolean12 = parkingSpace11.isAvailable();
        int int13 = parkingSpace11.getSpaceId();
        java.lang.Class<?> wildcardClass14 = parkingSpace11.getClass();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean14 = paymentManager0.processPayment("hi!", (double) 0.0f, "empty", "Paid $ 10.0 with Mobile Pay");
        paymentManager0.paymentMessage = "tbHxuilT";
        paymentManager0.refundMessage = "CLT-b6a8264c-f386-4429-b59c-b7f465002e13";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded total cost of $1.0" + "'", str7, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade5 = parkingSpaceProxy0.getFacade();
        parkingSpaceProxy0.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        parkingSpaceProxy0.autoGenerateManager();
        boolean boolean18 = parkingSpaceProxy0.confirmBooking("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c", "CLT-22138484-eb59-490e-9c41-9fd9c319dcda", "Paid $ 100.0 with Mobile Pay", "", 10, "Paid $ 15.0 with Mobile Pay", 52, "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertNotNull(parkingSpaceFacade5);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        boolean boolean18 = client0.confirmBooking("Refunded total cost of $1.0", "Refunded total cost of $100.0", (int) (short) -1, "TXCrKOGD", (-1), "CLT-f02c481e-1504-4abf-b598-76152da8586a", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        java.lang.String str19 = client0.getClientId();
        org.junit.Assert.assertNotNull(client0);
// flaky "20) test2709(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky "11) test2709(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ST001" + "'", str10, "ST001");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
// flaky "5) test2709(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841" + "'", str19, "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        parkingSpaceFacade0.addParkingLot("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        ParkingSystem.SpaceManager spaceManager13 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(spaceManager13);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        boolean boolean8 = parkingSpaceFacade0.editBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ -1.0 with Mobile Pay", 1);
        boolean boolean10 = parkingSpaceFacade0.checkOut("Paid $ -1.0 with Mobile Pay");
        parkingSpaceFacade0.toggleLot("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", false);
        boolean boolean16 = parkingSpaceFacade0.extendBooking("CLT-4aab5c22-53d4-41cb-8ccf-dd435bb7f17b", (int) (byte) 1);
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        boolean boolean15 = parkingSpaceFacade0.cancelBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean17 = parkingSpaceFacade0.checkOut("Refunded without deposit ($-15.0)");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry3 = parkingSpaceProxy0.getRegistry();
        parkingSpaceProxy0.autoGenerateManager();
        parkingSpaceProxy0.toggleSpace("staff", "Jane", false);
        boolean boolean18 = parkingSpaceProxy0.confirmBooking("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "Refunded without deposit ($-42.0)", "89de8237-29df-4908-9de4-6dc1ce90de94", (int) (short) 10, "", (int) (short) -1, "Refunded total cost of $-1.0", "Paid $ 100.0 with Mobile Pay");
        boolean boolean20 = parkingSpaceProxy0.cancelBooking("CLT-5e15ad0b-2221-4ef9-a477-c00f6c4e54d8");
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(accountRegistry3);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        ParkingSystem.Client client24 = ParkingSystem.Client.getInstance();
        java.lang.String str25 = client24.getName();
        client24.setValidated(true);
        ParkingSystem.Booking booking28 = client24.getBookingDetails();
        java.lang.String str29 = client24.getUsername();
        java.lang.String str30 = client24.getUsername();
        ParkingSystem.Booking booking31 = client24.getBookingDetails();
        cSVManager0.saveClient(client24);
        client24.setValidated(true);
        org.junit.Assert.assertNotNull(strArray1);
// flaky "21) test2714(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "12) test2714(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
// flaky "6) test2714(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Jane" + "'", str4, "Jane");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
// flaky "4) test2714(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ST001" + "'", str13, "ST001");
// flaky "3) test2714(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Jane" + "'", str14, "Jane");
        org.junit.Assert.assertNotNull(client24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "empty" + "'", str25, "empty");
        org.junit.Assert.assertNull(booking28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Jane" + "'", str29, "Jane");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Jane" + "'", str30, "Jane");
        org.junit.Assert.assertNull(booking31);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.ParkingLot parkingLot11 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking13 = null;
        boolean boolean14 = parkingLot11.assignBooking(0, booking13);
        boolean boolean16 = parkingLot11.isSpaceAvailable((int) '#');
        boolean boolean18 = parkingLot11.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace20 = parkingLot11.getParkingSpace((int) (byte) 10);
        int int21 = parkingSpace20.getSpaceId();
        ParkingSystem.Booking booking22 = parkingSpace20.getCurrentBooking();
        java.lang.String str23 = parkingSpace20.scanSpace();
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        parkingSpace20.setState((ParkingSystem.SpaceState) enabled24);
        parkingSpace9.setState((ParkingSystem.SpaceState) enabled24);
        boolean boolean27 = parkingSpace9.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parkingSpace20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "empty" + "'", str23, "empty");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager19 = bookingManager0.getSpaceManager();
        spaceManager19.addParkingLot("Jane");
        boolean boolean24 = spaceManager19.isSpaceAvailable("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", (int) (short) 10);
        ParkingSystem.ParkingLot parkingLot28 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking30 = null;
        boolean boolean31 = parkingLot28.assignBooking(0, booking30);
        boolean boolean33 = parkingLot28.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator34 = parkingLot28.getIterator();
        boolean boolean35 = parkingLotIterator34.hasNext();
        ParkingSystem.ParkingSpace parkingSpace36 = parkingLotIterator34.next();
        ParkingSystem.SpaceManager spaceManager37 = new ParkingSystem.SpaceManager();
        boolean boolean40 = spaceManager37.isSpaceAvailable("hi!", (int) '#');
        spaceManager37.toggleLot("disabled", false);
        ParkingSystem.Booking booking53 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean54 = spaceManager37.assignBooking("empty", (int) (short) 0, booking53);
        ParkingSystem.SpaceManager spaceManager57 = new ParkingSystem.SpaceManager();
        boolean boolean60 = spaceManager57.isSpaceAvailable("hi!", (int) '#');
        spaceManager57.toggleLot("disabled", false);
        ParkingSystem.Booking booking73 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean74 = spaceManager57.assignBooking("empty", (int) (short) 0, booking73);
        boolean boolean75 = spaceManager37.assignBooking("disabled", (int) (byte) 0, booking73);
        boolean boolean76 = parkingSpace36.assignBooking(booking73);
        java.lang.String str77 = booking73.getClientId();
        java.lang.String str78 = booking73.getLotId();
        booking73.setStartTime("disabled");
        int int81 = booking73.getSpaceId();
        boolean boolean82 = spaceManager19.assignBooking("empty", (int) (byte) -1, booking73);
        spaceManager19.addParkingLot("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(spaceManager19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(parkingSpace36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "staff" + "'", str77, "staff");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "jane" + "'", str78, "jane");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean3 = parkingLot1.isSpaceAvailable((int) (byte) 1);
        ParkingSystem.ParkingLotIterator parkingLotIterator4 = parkingLot1.getIterator();
        boolean boolean5 = parkingLotIterator4.hasNext();
        ParkingSystem.ParkingSpace parkingSpace6 = parkingLotIterator4.next();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(parkingSpace6);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        java.lang.Object obj16 = user0.login("Refunded total cost of $1.0", "Jane");
        java.lang.Object obj19 = user0.login("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        ParkingSystem.Booking booking27 = new ParkingSystem.Booking("Jane", "Refunded without deposit ($-42.0)", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (short) 10, "Paid $ -1.0 with Mobile Pay", (double) (short) 10);
        boolean boolean28 = booking27.isCheckedIn();
        booking27.setCheckedIn(false);
        user0.user = false;
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager1 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("");
        boolean boolean5 = parkingSpaceFacade0.cancelBooking("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        boolean boolean7 = parkingSpaceFacade0.cancelBooking("");
        boolean boolean9 = parkingSpaceFacade0.cancelBooking("5XQfkf24zK");
        org.junit.Assert.assertNotNull(bookingManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        boolean boolean11 = paymentManager0.refundDeposit(0.0d);
        boolean boolean13 = paymentManager0.refundDeposit(0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        parkingSpace10.removeBooking();
        ParkingSystem.Booking booking13 = parkingSpace10.getCurrentBooking();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot16 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking18 = null;
        boolean boolean19 = parkingLot16.assignBooking(0, booking18);
        boolean boolean21 = parkingLot16.isSpaceAvailable((int) '#');
        boolean boolean23 = parkingLot16.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace25 = parkingLot16.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking26 = parkingSpace25.getCurrentBooking();
        parkingSpace25.removeBooking();
        java.lang.String str28 = enabled14.scanSpace(parkingSpace25);
        ParkingSystem.ParkingLot parkingLot30 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking32 = null;
        boolean boolean33 = parkingLot30.assignBooking(0, booking32);
        boolean boolean35 = parkingLot30.isSpaceAvailable((int) '#');
        boolean boolean37 = parkingLot30.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace39 = parkingLot30.getParkingSpace((int) (byte) 10);
        int int40 = parkingSpace39.getSpaceId();
        ParkingSystem.Booking booking41 = parkingSpace39.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager42 = new ParkingSystem.SpaceManager();
        boolean boolean45 = spaceManager42.isSpaceAvailable("hi!", (int) '#');
        spaceManager42.toggleLot("disabled", false);
        ParkingSystem.Booking booking58 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean59 = spaceManager42.assignBooking("empty", (int) (short) 0, booking58);
        boolean boolean60 = parkingSpace39.assignBooking(booking58);
        java.lang.String str61 = enabled14.scanSpace(parkingSpace39);
        ParkingSystem.ParkingLot parkingLot63 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking65 = null;
        boolean boolean66 = parkingLot63.assignBooking(0, booking65);
        boolean boolean68 = parkingLot63.isSpaceAvailable((int) '#');
        boolean boolean70 = parkingLot63.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace72 = parkingLot63.getParkingSpace((int) (byte) 10);
        int int73 = parkingSpace72.getSpaceId();
        ParkingSystem.Booking booking74 = parkingSpace72.getCurrentBooking();
        java.lang.String str75 = parkingSpace72.scanSpace();
        int int76 = parkingSpace72.getSpaceId();
        ParkingSystem.Booking booking77 = parkingSpace72.getCurrentBooking();
        java.lang.String str78 = enabled14.scanSpace(parkingSpace72);
        ParkingSystem.SpaceState spaceState79 = parkingSpace72.getState();
        parkingSpace10.setState(spaceState79);
        ParkingSystem.ParkingSpace parkingSpace82 = new ParkingSystem.ParkingSpace((-1));
        java.lang.String str83 = spaceState79.scanSpace(parkingSpace82);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace25);
        org.junit.Assert.assertNull(booking26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "empty" + "'", str28, "empty");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(parkingSpace39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNull(booking41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "disabled" + "'", str61, "disabled");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(parkingSpace72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
        org.junit.Assert.assertNull(booking74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "empty" + "'", str75, "empty");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 10 + "'", int76 == 10);
        org.junit.Assert.assertNull(booking77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "empty" + "'", str78, "empty");
        org.junit.Assert.assertNotNull(spaceState79);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "empty" + "'", str83, "empty");
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry7 = superManager4.getRegistry();
        int int8 = accountRegistry7.getManagersSize();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str5, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "433f3d1f-f758-4ae3-972b-7fb179aedfd7" + "'", str6, "433f3d1f-f758-4ae3-972b-7fb179aedfd7");
        org.junit.Assert.assertNotNull(accountRegistry7);
// flaky "22) test2722(RegressionTest5)":         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean7 = parkingLot1.isEnabled();
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (byte) 100);
        ParkingSystem.ParkingLotIterator parkingLotIterator10 = parkingLot1.getIterator();
        ParkingSystem.Booking booking19 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int20 = booking19.getDuration();
        java.lang.String str21 = booking19.getClientId();
        booking19.setStartTime("hi!");
        boolean boolean24 = booking19.isCheckedIn();
        java.lang.String str25 = booking19.getLotId();
        boolean boolean26 = parkingLot1.assignBooking((int) '#', booking19);
        ParkingSystem.ParkingLotIterator parkingLotIterator27 = parkingLot1.getIterator();
        ParkingSystem.ParkingLot parkingLot30 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking32 = null;
        boolean boolean33 = parkingLot30.assignBooking(0, booking32);
        boolean boolean35 = parkingLot30.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator36 = parkingLot30.getIterator();
        boolean boolean37 = parkingLotIterator36.hasNext();
        ParkingSystem.ParkingSpace parkingSpace38 = parkingLotIterator36.next();
        ParkingSystem.SpaceManager spaceManager39 = new ParkingSystem.SpaceManager();
        boolean boolean42 = spaceManager39.isSpaceAvailable("hi!", (int) '#');
        spaceManager39.toggleLot("disabled", false);
        ParkingSystem.Booking booking55 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean56 = spaceManager39.assignBooking("empty", (int) (short) 0, booking55);
        ParkingSystem.SpaceManager spaceManager59 = new ParkingSystem.SpaceManager();
        boolean boolean62 = spaceManager59.isSpaceAvailable("hi!", (int) '#');
        spaceManager59.toggleLot("disabled", false);
        ParkingSystem.Booking booking75 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean76 = spaceManager59.assignBooking("empty", (int) (short) 0, booking75);
        boolean boolean77 = spaceManager39.assignBooking("disabled", (int) (byte) 0, booking75);
        boolean boolean78 = parkingSpace38.assignBooking(booking75);
        int int79 = booking75.getSpaceId();
        boolean boolean80 = booking75.isCheckedIn();
        java.lang.String str81 = booking75.getLotId();
        boolean boolean82 = parkingLot1.assignBooking((int) (byte) -1, booking75);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator10);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "staff" + "'", str21, "staff");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "jane" + "'", str25, "jane");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(parkingSpace38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "jane" + "'", str81, "jane");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        parkingSpaceFacade0.addParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.CheckInManager checkInManager4 = parkingSpaceFacade0.getCheckInManager();
        checkInManager4.refundMessage = "Refunded total cost of $10.0";
        checkInManager4.refundMessage = "Paid $ -1.0 with Mobile Pay";
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(checkInManager4);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.BookingManager bookingManager19 = parkingSpaceFacade17.getBookingManager();
        boolean boolean21 = parkingSpaceFacade17.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.Booking booking23 = parkingSpaceFacade17.getBookingDetails("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        boolean boolean25 = parkingSpaceFacade17.checkIn("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        boolean boolean27 = parkingSpaceFacade17.checkIn("CLT-32d5cdc9-3c20-4f30-9d68-0be20fdf349c");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "empty" + "'", str6, "empty");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(bookingManager19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(booking23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("86z9Z9e0MN", (double) (byte) 1, "staff", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        boolean boolean15 = paymentManager0.refundDeposit(0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        ParkingSystem.AccountRegistry accountRegistry6 = null;
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj17 = parkingSpaceProxy14.login("empty", "Jane");
        parkingSpaceProxy14.validateClient("Jane");
        parkingSpaceProxy14.toggleSpace("", "staff", false);
        accountRegistry12.assignProxyToManager("pass", parkingSpaceProxy14);
        ParkingSystem.Client client26 = accountRegistry12.getClient("");
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry12);
        superManager7.registry = accountRegistry12;
        ParkingSystem.AccountRegistry accountRegistry29 = superManager7.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry34 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager35 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry34);
        superManager35.setManagerInfo("Paid $ 0.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay", "Refunded total cost of $1.0");
        ParkingSystem.User user40 = new ParkingSystem.User();
        java.lang.Object obj41 = user40.user;
        ParkingSystem.Client client42 = ParkingSystem.Client.getInstance();
        java.lang.String str43 = client42.getName();
        client42.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy46 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry47 = parkingSpaceProxy46.getRegistry();
        boolean boolean49 = parkingSpaceProxy46.checkIn("");
        client42.assignProxy(parkingSpaceProxy46);
        boolean boolean51 = client42.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy52 = new ParkingSystem.ParkingSpaceProxy();
        client42.assignProxy(parkingSpaceProxy52);
        ParkingSystem.AccountRegistry accountRegistry54 = parkingSpaceProxy52.getRegistry();
        boolean boolean56 = parkingSpaceProxy52.checkIn("hi!");
        user40.parkingProxy = parkingSpaceProxy52;
        superManager35.assignProxy(parkingSpaceProxy52);
        accountRegistry29.assignProxyToManager("jane", parkingSpaceProxy52);
        ParkingSystem.SuperManager superManager60 = ParkingSystem.SuperManager.createFromCSV("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "", "13b04414-31a5-407f-8ea3-fba4613c73d1", accountRegistry29);
        ParkingSystem.Manager manager61 = superManager60.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(client26);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertNotNull(superManager35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(client42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "empty" + "'", str43, "empty");
        org.junit.Assert.assertNotNull(accountRegistry47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(accountRegistry54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(superManager60);
        org.junit.Assert.assertNotNull(manager61);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking34 = parkingSpaceProxy32.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy32.getRegistry();
        parkingSpaceProxy32.autoGenerateManager();
        parkingSpaceProxy32.toggleSpace("staff", "Jane", false);
        parkingSpaceProxy32.displayPendingValidations();
        accountRegistry24.assignProxyToManager("8812812f-8c58-440e-9188-ca0b1f996ced", parkingSpaceProxy32);
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str5, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str20, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNull(booking34);
        org.junit.Assert.assertNotNull(accountRegistry35);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager6.getSpaceManager();
        double double11 = bookingManager6.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit12 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        boolean boolean18 = debitOrCredit12.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        ParkingSystem.MobilePay mobilePay20 = new ParkingSystem.MobilePay();
        boolean boolean25 = mobilePay20.processPayment("hi!", (-1.0d), "", "");
        boolean boolean30 = mobilePay20.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean35 = mobilePay20.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay20);
        ParkingSystem.Booking booking38 = bookingManager0.getBooking("qPYDfDnbtD");
        ParkingSystem.Booking booking40 = bookingManager0.getBooking("qMzKSKOI");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 165.0d + "'", double11 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(booking38);
        org.junit.Assert.assertNull(booking40);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("4a1f2343-8b2e-4dea-ba69-efd105414390");
        ParkingSystem.Booking booking4 = parkingSpaceFacade0.getBookingDetails("62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(booking4);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean4 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) 10);
        boolean boolean7 = parkingSpaceFacade0.extendBooking("Paid $ 0.0 with Mobile Pay", (int) (byte) 1);
        boolean boolean10 = parkingSpaceFacade0.extendBooking("Refunded without deposit ($-42.0)", (int) (byte) 100);
        boolean boolean20 = parkingSpaceFacade0.confirmBooking("jane", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "fhd49ADb", "disabled", (int) (byte) -1, "09622cbf-e665-45db-b1ad-365065947a20", (int) (byte) 10, "hi!", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        ParkingSystem.BookingManager bookingManager21 = parkingSpaceFacade0.getBookingManager();
        java.lang.Class<?> wildcardClass22 = parkingSpaceFacade0.getClass();
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(bookingManager21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double18 = bookingManager0.calculateCost("Paid $ 10.0 with Mobile Pay", (int) (byte) 1);
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        boolean boolean22 = accountRegistry20.requiresValidation("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 30.0d + "'", double18 == 30.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        ParkingSystem.ParkingSpace parkingSpace1 = new ParkingSystem.ParkingSpace(100);
        java.lang.String str2 = parkingSpace1.scanSpace();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "empty" + "'", str2, "empty");
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        java.lang.String str4 = parkingSpaceProxy0.scanSpace("empty", "hi!");
        boolean boolean14 = parkingSpaceProxy0.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy0.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean24 = parkingSpaceProxy0.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        boolean boolean28 = parkingSpaceProxy0.editBooking("disabled", "Card number should be 16 digits", (int) (byte) -1);
        java.lang.Object obj31 = parkingSpaceProxy0.login("Paid $ 0.0 with Mobile Pay", "jane");
        java.lang.Object obj34 = parkingSpaceProxy0.login("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy0.getRegistry();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "disabled" + "'", str4, "disabled");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(accountRegistry35);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        // The following exception was thrown during execution in test generation
        try {
            ParkingSystem.ParkingSpace parkingSpace3 = parkingLotIterator2.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(parkingLotIterator2);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.ParkingLot parkingLot11 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking13 = null;
        boolean boolean14 = parkingLot11.assignBooking(0, booking13);
        boolean boolean16 = parkingLot11.isSpaceAvailable((int) '#');
        boolean boolean18 = parkingLot11.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace20 = parkingLot11.getParkingSpace((int) (byte) 10);
        int int21 = parkingSpace20.getSpaceId();
        ParkingSystem.Booking booking22 = parkingSpace20.getCurrentBooking();
        java.lang.String str23 = parkingSpace20.scanSpace();
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        parkingSpace20.setState((ParkingSystem.SpaceState) enabled24);
        parkingSpace9.setState((ParkingSystem.SpaceState) enabled24);
        ParkingSystem.Disabled disabled27 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace28 = null;
        java.lang.String str29 = disabled27.scanSpace(parkingSpace28);
        ParkingSystem.ParkingSpace parkingSpace30 = null;
        java.lang.String str31 = disabled27.scanSpace(parkingSpace30);
        ParkingSystem.ParkingLot parkingLot33 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking35 = null;
        boolean boolean36 = parkingLot33.assignBooking(0, booking35);
        boolean boolean38 = parkingLot33.isSpaceAvailable((int) '#');
        boolean boolean40 = parkingLot33.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace42 = parkingLot33.getParkingSpace((int) (byte) 10);
        int int43 = parkingSpace42.getSpaceId();
        ParkingSystem.Booking booking44 = parkingSpace42.getCurrentBooking();
        java.lang.String str45 = parkingSpace42.scanSpace();
        ParkingSystem.Enabled enabled46 = new ParkingSystem.Enabled();
        parkingSpace42.setState((ParkingSystem.SpaceState) enabled46);
        java.lang.String str48 = disabled27.scanSpace(parkingSpace42);
        parkingSpace9.setState((ParkingSystem.SpaceState) disabled27);
        ParkingSystem.Disabled disabled50 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingLot parkingLot52 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking54 = null;
        boolean boolean55 = parkingLot52.assignBooking(0, booking54);
        boolean boolean57 = parkingLot52.isSpaceAvailable((int) '#');
        boolean boolean59 = parkingLot52.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace61 = parkingLot52.getParkingSpace((int) (byte) 10);
        int int62 = parkingSpace61.getSpaceId();
        ParkingSystem.Booking booking63 = parkingSpace61.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager64 = new ParkingSystem.SpaceManager();
        boolean boolean67 = spaceManager64.isSpaceAvailable("hi!", (int) '#');
        spaceManager64.toggleLot("disabled", false);
        ParkingSystem.Booking booking80 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean81 = spaceManager64.assignBooking("empty", (int) (short) 0, booking80);
        boolean boolean82 = parkingSpace61.assignBooking(booking80);
        java.lang.String str83 = disabled50.scanSpace(parkingSpace61);
        java.lang.String str84 = disabled27.scanSpace(parkingSpace61);
        parkingSpace61.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parkingSpace20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "empty" + "'", str23, "empty");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "disabled" + "'", str31, "disabled");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(parkingSpace42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNull(booking44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "empty" + "'", str45, "empty");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "disabled" + "'", str48, "disabled");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(parkingSpace61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 10 + "'", int62 == 10);
        org.junit.Assert.assertNull(booking63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "disabled" + "'", str83, "disabled");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "disabled" + "'", str84, "disabled");
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        boolean boolean25 = accountRegistry4.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        accountRegistry4.validateClient("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = null;
        accountRegistry4.assignProxyToClient("433f3d1f-f758-4ae3-972b-7fb179aedfd7", parkingSpaceProxy29);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap31 = accountRegistry4.getManagers();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy6.getFacade();
        user0.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        user0.parkingProxy = parkingSpaceProxy13;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = user0.login("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.login(String, String)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        boolean boolean20 = bookingManager18.cancelBooking("disabled");
        ParkingSystem.CheckInManager checkInManager21 = new ParkingSystem.CheckInManager(bookingManager18);
        ParkingSystem.SpaceManager spaceManager22 = bookingManager18.getSpaceManager();
        spaceManager22.addParkingLot("Paid $ 15.0 with Mobile Pay");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(spaceManager22);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        ParkingSystem.User user31 = new ParkingSystem.User();
        java.lang.Object obj32 = user31.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj36 = parkingSpaceProxy33.login("empty", "Jane");
        parkingSpaceProxy33.validateClient("Jane");
        java.lang.String str41 = parkingSpaceProxy33.scanSpace("", "");
        parkingSpaceProxy33.toggleSpace("", "disabled", true);
        user31.parkingProxy = parkingSpaceProxy33;
        ParkingSystem.ParkingLot parkingLot48 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator49 = parkingLot48.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator50 = parkingLot48.getIterator();
        user31.user = parkingLot48;
        ParkingSystem.User user52 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy53 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj56 = parkingSpaceProxy53.login("empty", "Jane");
        parkingSpaceProxy53.validateClient("Jane");
        parkingSpaceProxy53.toggleSpace("", "staff", false);
        boolean boolean64 = parkingSpaceProxy53.cancelBooking("");
        user52.assignProxy(parkingSpaceProxy53);
        user31.user = parkingSpaceProxy53;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy67 = user31.parkingProxy;
        parkingSpaceProxy67.addParkingLot("pass");
        accountRegistry15.assignProxyToManager("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", parkingSpaceProxy67);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade71 = parkingSpaceProxy67.getFacade();
        boolean boolean73 = parkingSpaceFacade71.cancelBooking("0K5j4sX8PY");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str5, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator49);
        org.junit.Assert.assertNotNull(parkingLotIterator50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy67);
        org.junit.Assert.assertNotNull(parkingSpaceFacade71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager4 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.cancelBooking("Refunded without deposit ($0.0)");
        boolean boolean8 = parkingSpaceFacade0.checkOut("qPYDfDnbtD");
        boolean boolean18 = parkingSpaceFacade0.confirmBooking("Refunded total cost of $1.0", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "", "disabled", 0, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) 0, "13b04414-31a5-407f-8ea3-fba4613c73d1", "5IYmtlKE");
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(bookingManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        java.util.List<ParkingSystem.Client> clientList31 = accountRegistry24.displayPendingValidations();
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap32 = accountRegistry24.getManagers();
        ParkingSystem.Client client34 = ParkingSystem.Client.getInstance();
        java.lang.String str35 = client34.getName();
        client34.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str44 = client34.getUsername();
        java.lang.String str45 = client34.getPassword();
        java.lang.String str46 = client34.getClientType();
        java.lang.String str47 = client34.getName();
        ParkingSystem.User user48 = new ParkingSystem.User();
        java.lang.Object obj49 = user48.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy50 = user48.parkingProxy;
        ParkingSystem.User user51 = new ParkingSystem.User();
        java.lang.Object obj52 = user51.user;
        ParkingSystem.Client client53 = ParkingSystem.Client.getInstance();
        java.lang.String str54 = client53.getName();
        client53.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy57 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry58 = parkingSpaceProxy57.getRegistry();
        boolean boolean60 = parkingSpaceProxy57.checkIn("");
        client53.assignProxy(parkingSpaceProxy57);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade62 = parkingSpaceProxy57.getFacade();
        user51.assignProxy(parkingSpaceProxy57);
        user48.parkingProxy = parkingSpaceProxy57;
        ParkingSystem.AccountRegistry accountRegistry68 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager69 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry68);
        java.lang.String str70 = superManager69.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry71 = superManager69.registry;
        java.lang.String str72 = superManager69.getManagerId();
        ParkingSystem.Client client73 = ParkingSystem.Client.getInstance();
        java.lang.String str74 = client73.getName();
        client73.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy77 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry78 = parkingSpaceProxy77.getRegistry();
        boolean boolean80 = parkingSpaceProxy77.checkIn("");
        client73.assignProxy(parkingSpaceProxy77);
        boolean boolean82 = client73.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy83 = new ParkingSystem.ParkingSpaceProxy();
        client73.assignProxy(parkingSpaceProxy83);
        superManager69.assignProxy(parkingSpaceProxy83);
        user48.assignProxy(parkingSpaceProxy83);
        ParkingSystem.AccountRegistry accountRegistry87 = parkingSpaceProxy83.getRegistry();
        java.lang.String str90 = parkingSpaceProxy83.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj93 = parkingSpaceProxy83.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade94 = parkingSpaceProxy83.getFacade();
        client34.assignProxy(parkingSpaceProxy83);
        java.lang.Object obj98 = parkingSpaceProxy83.login("Paid $ -1.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        accountRegistry24.assignProxyToManager("staff", parkingSpaceProxy83);
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str5, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str20, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(clientList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(client34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "empty" + "'", str35, "empty");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "disabled" + "'", str45, "disabled");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(parkingSpaceProxy50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(client53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(accountRegistry58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade62);
        org.junit.Assert.assertNotNull(superManager69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str70, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(accountRegistry71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str72, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(client73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(accountRegistry78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(accountRegistry87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "disabled" + "'", str90, "disabled");
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(parkingSpaceFacade94);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        java.lang.String str7 = paymentManager0.refundMessage;
        boolean boolean9 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean11 = paymentManager0.refundTotalCost(0.0d);
        boolean boolean13 = paymentManager0.refundTotalCost((double) (byte) 1);
        java.lang.String str14 = paymentManager0.paymentMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Refunded total cost of $1.0" + "'", str7, "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str14, "Paid $ 100.0 with Mobile Pay");
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        java.lang.String str5 = paymentManager0.refundMessage;
        boolean boolean7 = paymentManager0.refundDeposit((double) ' ');
        paymentManager0.refundMessage = "8812812f-8c58-440e-9188-ca0b1f996ced";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str5, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager2 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean5 = spaceManager2.isSpaceAvailable("hi!", (int) (short) -1);
        spaceManager2.toggleLot("CLT-f02c481e-1504-4abf-b598-76152da8586a", false);
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay11 = new ParkingSystem.MobilePay();
        boolean boolean16 = mobilePay11.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str17 = mobilePay11.getPaymentMessage();
        java.lang.String str18 = mobilePay11.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay11);
        boolean boolean21 = paymentManager0.refundTotalCost((double) (byte) 10);
        boolean boolean26 = paymentManager0.processPayment("I673kmcH", 30.0d, "09622cbf-e665-45db-b1ad-365065947a20", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str17, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.removeBooking("hi!", (int) (byte) 0);
        java.lang.String str6 = spaceManager0.scanSpace("hi!", "disabled");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap7 = spaceManager0.getParkingLots();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean21 = client0.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str22 = client0.getName();
        boolean boolean24 = client0.extendBooking((int) ' ');
        boolean boolean25 = client0.checkIn();
        java.lang.String str26 = client0.getClientType();
        boolean boolean27 = client0.getIsValidated();
        boolean boolean30 = client0.editBooking("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", (int) ' ');
        client0.setClientInfo("Refunded total cost of $-1.0", "TXCrKOGD", "89de8237-29df-4908-9de4-6dc1ce90de94", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", "09622cbf-e665-45db-b1ad-365065947a20", "4a1f2343-8b2e-4dea-ba69-efd105414390", true);
        java.lang.String str39 = client0.getUsername();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "89de8237-29df-4908-9de4-6dc1ce90de94" + "'", str39, "89de8237-29df-4908-9de4-6dc1ce90de94");
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        java.lang.String str21 = superManager19.getManagerId();
        java.lang.String str22 = superManager19.getPassword();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager19.getRegistry();
        superManager19.setManagerInfo("", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", "Refunded without deposit ($0.0)");
        ParkingSystem.AccountRegistry accountRegistry28 = superManager19.getRegistry();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str21, "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Refunded total cost of $1.0" + "'", str22, "Refunded total cost of $1.0");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertNotNull(accountRegistry28);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("848f508e-e1d2-4f02-9fc9-e95eee425d36", "12fea0ad-7859-47d9-95f1-1985d2c4ed33", "13b04414-31a5-407f-8ea3-fba4613c73d1", accountRegistry3);
        org.junit.Assert.assertNotNull(superManager4);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        ParkingSystem.Booking booking3 = client0.getBookingDetails();
        java.lang.String str4 = client0.getExtraId();
        boolean boolean5 = client0.cancelBooking();
        java.lang.String str6 = client0.getName();
        boolean boolean7 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "09622cbf-e665-45db-b1ad-365065947a20" + "'", str1, "09622cbf-e665-45db-b1ad-365065947a20");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "25527a32-01ef-45ba-816a-1d0a2fc2a52d" + "'", str2, "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4a1f2343-8b2e-4dea-ba69-efd105414390" + "'", str4, "4a1f2343-8b2e-4dea-ba69-efd105414390");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TXCrKOGD" + "'", str6, "TXCrKOGD");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        java.lang.Object obj22 = user0.login("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "Refunded without deposit ($-96.0)");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = user0.parkingProxy;
        java.lang.Object obj24 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TXCrKOGD" + "'", str6, "TXCrKOGD");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(parkingSpaceProxy23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy0.toggleLot("hi!", false);
        parkingSpaceProxy0.addParkingLot("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        boolean boolean16 = parkingSpaceProxy0.editBooking("9fJ5pCUl", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) (short) -1);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        parkingLot1.removeBooking(10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace((int) (short) 10);
        ParkingSystem.Booking booking20 = new ParkingSystem.Booking("25527a32-01ef-45ba-816a-1d0a2fc2a52d", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", (int) ' ', "Refunded total cost of $-1.0", (int) 'a', "staff", (double) (byte) 10);
        java.lang.String str21 = booking20.getLotId();
        double double22 = booking20.getTotalCost();
        double double23 = booking20.getTotalCost();
        boolean boolean24 = parkingLot1.assignBooking((int) (short) 1, booking20);
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c" + "'", str21, "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        boolean boolean18 = client0.confirmBooking("Refunded total cost of $1.0", "Refunded total cost of $100.0", (int) (short) -1, "TXCrKOGD", (-1), "CLT-f02c481e-1504-4abf-b598-76152da8586a", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        ParkingSystem.User user19 = new ParkingSystem.User();
        java.lang.Object obj20 = user19.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = user19.parkingProxy;
        ParkingSystem.User user22 = new ParkingSystem.User();
        java.lang.Object obj23 = user22.user;
        ParkingSystem.Client client24 = ParkingSystem.Client.getInstance();
        java.lang.String str25 = client24.getName();
        client24.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy28 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry29 = parkingSpaceProxy28.getRegistry();
        boolean boolean31 = parkingSpaceProxy28.checkIn("");
        client24.assignProxy(parkingSpaceProxy28);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy28.getFacade();
        user22.assignProxy(parkingSpaceProxy28);
        user19.parkingProxy = parkingSpaceProxy28;
        ParkingSystem.AccountRegistry accountRegistry39 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager40 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry39);
        java.lang.String str41 = superManager40.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry42 = superManager40.registry;
        java.lang.String str43 = superManager40.getManagerId();
        ParkingSystem.Client client44 = ParkingSystem.Client.getInstance();
        java.lang.String str45 = client44.getName();
        client44.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry49 = parkingSpaceProxy48.getRegistry();
        boolean boolean51 = parkingSpaceProxy48.checkIn("");
        client44.assignProxy(parkingSpaceProxy48);
        boolean boolean53 = client44.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy54 = new ParkingSystem.ParkingSpaceProxy();
        client44.assignProxy(parkingSpaceProxy54);
        superManager40.assignProxy(parkingSpaceProxy54);
        user19.assignProxy(parkingSpaceProxy54);
        ParkingSystem.AccountRegistry accountRegistry58 = parkingSpaceProxy54.getRegistry();
        java.lang.String str61 = parkingSpaceProxy54.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        ParkingSystem.AccountRegistry accountRegistry62 = parkingSpaceProxy54.getRegistry();
        client0.assignProxy(parkingSpaceProxy54);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "jane" + "'", str10, "jane");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(parkingSpaceProxy21);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(client24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "empty" + "'", str25, "empty");
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertNotNull(superManager40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(accountRegistry42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(client44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "empty" + "'", str45, "empty");
        org.junit.Assert.assertNotNull(accountRegistry49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(accountRegistry58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "disabled" + "'", str61, "disabled");
        org.junit.Assert.assertNotNull(accountRegistry62);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        java.lang.String str13 = client0.getName();
        ParkingSystem.User user14 = new ParkingSystem.User();
        java.lang.Object obj15 = user14.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = user14.parkingProxy;
        ParkingSystem.User user17 = new ParkingSystem.User();
        java.lang.Object obj18 = user17.user;
        ParkingSystem.Client client19 = ParkingSystem.Client.getInstance();
        java.lang.String str20 = client19.getName();
        client19.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry24 = parkingSpaceProxy23.getRegistry();
        boolean boolean26 = parkingSpaceProxy23.checkIn("");
        client19.assignProxy(parkingSpaceProxy23);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade28 = parkingSpaceProxy23.getFacade();
        user17.assignProxy(parkingSpaceProxy23);
        user14.parkingProxy = parkingSpaceProxy23;
        ParkingSystem.AccountRegistry accountRegistry34 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager35 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry34);
        java.lang.String str36 = superManager35.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry37 = superManager35.registry;
        java.lang.String str38 = superManager35.getManagerId();
        ParkingSystem.Client client39 = ParkingSystem.Client.getInstance();
        java.lang.String str40 = client39.getName();
        client39.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry44 = parkingSpaceProxy43.getRegistry();
        boolean boolean46 = parkingSpaceProxy43.checkIn("");
        client39.assignProxy(parkingSpaceProxy43);
        boolean boolean48 = client39.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = new ParkingSystem.ParkingSpaceProxy();
        client39.assignProxy(parkingSpaceProxy49);
        superManager35.assignProxy(parkingSpaceProxy49);
        user14.assignProxy(parkingSpaceProxy49);
        ParkingSystem.AccountRegistry accountRegistry53 = parkingSpaceProxy49.getRegistry();
        java.lang.String str56 = parkingSpaceProxy49.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        java.lang.Object obj59 = parkingSpaceProxy49.login("jane", "Refunded without deposit ($0.0)");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade60 = parkingSpaceProxy49.getFacade();
        client0.assignProxy(parkingSpaceProxy49);
        parkingSpaceProxy49.toggleSpace("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        ParkingSystem.AccountRegistry accountRegistry66 = parkingSpaceProxy49.getRegistry();
        ParkingSystem.Client client68 = accountRegistry66.getClient("CLT-4fb51645-0cbc-48a2-9b9c-17fc2991039d");
        ParkingSystem.Client client70 = accountRegistry66.getClient("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        int int71 = accountRegistry66.getManagersSize();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(parkingSpaceProxy16);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(client19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade28);
        org.junit.Assert.assertNotNull(superManager35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(client39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(accountRegistry44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(accountRegistry53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "disabled" + "'", str56, "disabled");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(parkingSpaceFacade60);
        org.junit.Assert.assertNotNull(accountRegistry66);
        org.junit.Assert.assertNull(client68);
        org.junit.Assert.assertNull(client70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        boolean boolean9 = client0.confirmBooking("", "pass", (int) (byte) 0, "Paid $ 10.0 with Mobile Pay", (int) (byte) 0, "", "Jane");
        java.lang.String str10 = client0.getUsername();
        boolean boolean12 = client0.extendBooking((-1));
        client0.setClientInfo("2afd610d-a8cb-413a-bbee-7927f86b526c", "Refunded total cost of $100.0", "Refunded deposit of $0.0", "CLT-55105d92-54d6-44d2-965a-736022b7f7cd", "SRiN5ev00N", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c", false);
        java.lang.String str21 = client0.getExtraId();
        boolean boolean22 = client0.checkOut();
        java.lang.String str23 = client0.getExtraId();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "disabled" + "'", str1, "disabled");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "4c45f11e-b09a-4d81-adf1-86cfd519dc3c" + "'", str21, "4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4c45f11e-b09a-4d81-adf1-86cfd519dc3c" + "'", str23, "4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        java.lang.String[] strArray7 = cSVManager0.loadSuperManager();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList8 = cSVManager0.loadManagers();
// flaky "23) test2758(RegressionTest5)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray1);
// flaky "13) test2758(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "7) test2758(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strArray7);
// flaky "5) test2758(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray7, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        parkingSpaceFacade0.addParkingLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceFacade0.toggleSpace("Paid $ 0.0 with Mobile Pay", "hi!", false);
        ParkingSystem.BookingManager bookingManager8 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNotNull(bookingManager8);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        boolean boolean3 = parkingLot1.isSpaceAvailable((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.Client client7 = ParkingSystem.Client.getInstance();
        java.lang.String str8 = client7.getName();
        client7.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        boolean boolean14 = parkingSpaceProxy11.checkIn("");
        client7.assignProxy(parkingSpaceProxy11);
        boolean boolean16 = client7.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        client7.assignProxy(parkingSpaceProxy17);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        client7.assignProxy(parkingSpaceProxy19);
        cSVManager0.saveClient(client7);
        ParkingSystem.CSVManager cSVManager22 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray23 = cSVManager22.loadSuperManager();
        java.lang.String[] strArray24 = cSVManager22.loadSuperManager();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        java.lang.String str35 = client25.getExtraId();
        java.lang.String str36 = client25.getName();
        client25.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager22.saveClient(client25);
        ParkingSystem.AccountRegistry accountRegistry49 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager50 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry49);
        java.lang.String str51 = superManager50.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry55 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager56 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry55);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy58 = null;
        accountRegistry55.assignProxyToManager("disabled", parkingSpaceProxy58);
        superManager50.registry = accountRegistry55;
        cSVManager22.saveManager((ParkingSystem.Manager) superManager50);
        cSVManager0.saveManager((ParkingSystem.Manager) superManager50);
        ParkingSystem.AccountRegistry accountRegistry69 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager70 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry69);
        boolean boolean72 = accountRegistry69.requiresValidation("disabled");
        int int73 = accountRegistry69.getManagersSize();
        ParkingSystem.SuperManager superManager74 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry69);
        ParkingSystem.AccountRegistry accountRegistry75 = superManager74.getRegistry();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager74);
        java.lang.String[] strArray77 = cSVManager0.loadSuperManager();
        org.junit.Assert.assertNotNull(strArray1);
// flaky "24) test2761(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "14) test2761(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(client7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Refunded total cost of $100.0" + "'", str8, "Refunded total cost of $100.0");
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray23);
// flaky "8) test2761(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray23, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray24);
// flaky "6) test2761(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray24, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Refunded total cost of $100.0" + "'", str26, "Refunded total cost of $100.0");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4c45f11e-b09a-4d81-adf1-86cfd519dc3c" + "'", str35, "4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Refunded total cost of $100.0" + "'", str36, "Refunded total cost of $100.0");
        org.junit.Assert.assertNotNull(superManager50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(superManager56);
        org.junit.Assert.assertNotNull(superManager70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(superManager74);
        org.junit.Assert.assertNotNull(accountRegistry75);
        org.junit.Assert.assertNotNull(strArray77);
// flaky "4) test2761(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray77, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.ParkingLot parkingLot12 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = parkingLot12.assignBooking(0, booking14);
        boolean boolean17 = parkingLot12.isSpaceAvailable((int) '#');
        boolean boolean19 = parkingLot12.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace21 = parkingLot12.getParkingSpace((int) (byte) 10);
        int int22 = parkingSpace21.getSpaceId();
        ParkingSystem.Booking booking23 = parkingSpace21.getCurrentBooking();
        java.lang.String str24 = parkingSpace21.scanSpace();
        ParkingSystem.Enabled enabled25 = new ParkingSystem.Enabled();
        parkingSpace21.setState((ParkingSystem.SpaceState) enabled25);
        ParkingSystem.Disabled disabled27 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace28 = null;
        java.lang.String str29 = disabled27.scanSpace(parkingSpace28);
        ParkingSystem.Enabled enabled30 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot32 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking34 = null;
        boolean boolean35 = parkingLot32.assignBooking(0, booking34);
        boolean boolean37 = parkingLot32.isSpaceAvailable((int) '#');
        boolean boolean39 = parkingLot32.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace41 = parkingLot32.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking42 = parkingSpace41.getCurrentBooking();
        parkingSpace41.removeBooking();
        java.lang.String str44 = enabled30.scanSpace(parkingSpace41);
        ParkingSystem.ParkingLot parkingLot46 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking48 = null;
        boolean boolean49 = parkingLot46.assignBooking(0, booking48);
        boolean boolean51 = parkingLot46.isSpaceAvailable((int) '#');
        boolean boolean53 = parkingLot46.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace55 = parkingLot46.getParkingSpace((int) (byte) 10);
        int int56 = parkingSpace55.getSpaceId();
        ParkingSystem.Booking booking57 = parkingSpace55.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        boolean boolean76 = parkingSpace55.assignBooking(booking74);
        java.lang.String str77 = enabled30.scanSpace(parkingSpace55);
        java.lang.String str78 = disabled27.scanSpace(parkingSpace55);
        java.lang.String str79 = enabled25.scanSpace(parkingSpace55);
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled25);
        ParkingSystem.SpaceState spaceState81 = parkingSpace10.getState();
        ParkingSystem.SpaceState spaceState82 = parkingSpace10.getState();
        parkingSpace10.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(parkingSpace21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNull(booking23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "empty" + "'", str24, "empty");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(parkingSpace41);
        org.junit.Assert.assertNull(booking42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "empty" + "'", str44, "empty");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(parkingSpace55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(booking57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "disabled" + "'", str77, "disabled");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "disabled" + "'", str78, "disabled");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "disabled" + "'", str79, "disabled");
        org.junit.Assert.assertNotNull(spaceState81);
        org.junit.Assert.assertNotNull(spaceState82);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = null;
        accountRegistry6.assignProxyToClient("", parkingSpaceProxy11);
        java.util.List<ParkingSystem.Client> clientList13 = accountRegistry6.displayPendingValidations();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "", accountRegistry6);
        java.lang.String str15 = superManager14.getName();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(clientList13);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52" + "'", str15, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        parkingSpaceProxy2.autoGenerateManager();
        boolean boolean26 = parkingSpaceProxy2.confirmBooking("Refunded without deposit ($-42.0)", "disabled", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", (int) (short) 1, "empty", (int) (short) 1, "Card number should be 16 digits", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        parkingSpaceProxy2.toggleLot("Refunded total cost of $100.0", true);
        parkingSpaceProxy2.toggleSpace("CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", "9fJ5pCUl", false);
        boolean boolean43 = parkingSpaceProxy2.confirmBooking("CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "CLT-45a3d895-9bc3-45d3-9068-d4559eae3183", "Jane", "", (int) (short) 1, "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", 32, "Refunded total cost of $100.0", "Jane");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade44 = parkingSpaceProxy2.getFacade();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade44);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj5 = parkingSpaceProxy2.login("empty", "Jane");
        parkingSpaceProxy2.validateClient("Jane");
        java.lang.String str10 = parkingSpaceProxy2.scanSpace("", "");
        parkingSpaceProxy2.toggleSpace("", "disabled", true);
        user0.parkingProxy = parkingSpaceProxy2;
        parkingSpaceProxy2.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry17 = parkingSpaceProxy2.getRegistry();
        parkingSpaceProxy2.toggleSpace("8ca2ec61-774c-409d-89d5-5b9171b40497", "Paid $ 0.0 with Mobile Pay", true);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(accountRegistry17);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean8 = paymentManager0.refundTotalCost((double) (short) 100);
        boolean boolean13 = paymentManager0.processPayment("", (double) 0, "Paid $ 100.0 with Mobile Pay", "Refunded without deposit ($-42.0)");
        ParkingSystem.PaymentManager paymentManager14 = new ParkingSystem.PaymentManager();
        paymentManager14.refundMessage = "";
        boolean boolean18 = paymentManager14.refundTotalCost((double) (byte) 1);
        paymentManager14.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean23 = paymentManager14.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str24 = paymentManager14.paymentMessage;
        boolean boolean29 = paymentManager14.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Strategy strategy30 = null;
        paymentManager14.setStrategy(strategy30);
        java.lang.String str32 = paymentManager14.refundMessage;
        ParkingSystem.MobilePay mobilePay33 = new ParkingSystem.MobilePay();
        boolean boolean38 = mobilePay33.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str39 = mobilePay33.getPaymentMessage();
        java.lang.String str40 = mobilePay33.getPaymentMessage();
        boolean boolean45 = mobilePay33.processPayment("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", 1.0d, "disabled", "Refunded without deposit ($0.0)");
        paymentManager14.setStrategy((ParkingSystem.Strategy) mobilePay33);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay33);
        boolean boolean49 = paymentManager0.refundDeposit((double) 32);
        paymentManager0.refundMessage = "8ca2ec61-774c-409d-89d5-5b9171b40497";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str24, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Refunded without deposit ($-96.0)" + "'", str32, "Refunded without deposit ($-96.0)");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str39, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str40, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        parkingSpaceProxy0.validateClient("Jane");
        java.lang.String str8 = parkingSpaceProxy0.scanSpace("", "");
        parkingSpaceProxy0.toggleSpace("", "disabled", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade13 = parkingSpaceProxy0.getFacade();
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "disabled" + "'", str8, "disabled");
        org.junit.Assert.assertNotNull(parkingSpaceFacade13);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        parkingLot1.removeBooking((int) ' ');
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace(0);
        ParkingSystem.ParkingSpace parkingSpace13 = parkingLot1.getParkingSpace((int) '#');
        parkingSpace13.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNotNull(parkingSpace13);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean4 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) 10);
        parkingSpaceFacade0.toggleLot("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", true);
        boolean boolean9 = parkingSpaceFacade0.cancelBooking("2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean12 = parkingSpaceFacade0.extendBooking("K6PkM9rcCx", (-1));
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager1 = parkingSpaceFacade0.getBookingManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("");
        ParkingSystem.CheckInManager checkInManager4 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager5 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertNotNull(bookingManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(checkInManager4);
        org.junit.Assert.assertNotNull(spaceManager5);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager3 = parkingSpaceFacade1.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager3.getParkingLots();
        cSVManager0.loadParkingLots(strMap4);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        cSVManager0.updateClientValidation("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", true);
        ParkingSystem.Client client10 = ParkingSystem.Client.getInstance();
        java.lang.String str11 = client10.getName();
        client10.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str20 = client10.getUsername();
        java.lang.String str21 = client10.getPassword();
        java.lang.String str22 = client10.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = null;
        client10.assignProxy(parkingSpaceProxy23);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy25 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj28 = parkingSpaceProxy25.login("empty", "Jane");
        client10.assignProxy(parkingSpaceProxy25);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking32 = parkingSpaceProxy30.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry33 = parkingSpaceProxy30.getRegistry();
        parkingSpaceProxy30.autoGenerateManager();
        client10.assignProxy(parkingSpaceProxy30);
        cSVManager0.saveClient(client10);
        ParkingSystem.CSVManager cSVManager37 = new ParkingSystem.CSVManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap38 = null;
        cSVManager37.loadParkingLots(strMap38);
        java.lang.String[] strArray40 = cSVManager37.loadSuperManager();
        ParkingSystem.CSVManager cSVManager41 = new ParkingSystem.CSVManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap42 = null;
        cSVManager41.loadParkingLots(strMap42);
        java.lang.String[] strArray44 = cSVManager41.loadSuperManager();
        ParkingSystem.BookingManager bookingManager45 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager46 = new ParkingSystem.CheckInManager(bookingManager45);
        ParkingSystem.SpaceManager spaceManager47 = bookingManager45.getSpaceManager();
        double double50 = bookingManager45.calculateCost("", (int) (byte) 10);
        ParkingSystem.SpaceManager spaceManager51 = bookingManager45.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap52 = spaceManager51.getParkingLots();
        cSVManager41.saveParkingLots(strMap52);
        cSVManager37.loadParkingLots(strMap52);
        cSVManager0.loadParkingLots(strMap52);
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "25) test2771(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "empty" + "'", str11, "empty");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "disabled" + "'", str21, "disabled");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(booking32);
        org.junit.Assert.assertNotNull(accountRegistry33);
        org.junit.Assert.assertNotNull(strArray40);
// flaky "15) test2771(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray40, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray44);
// flaky "9) test2771(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray44, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager47);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 165.0d + "'", double50 == 165.0d);
        org.junit.Assert.assertNotNull(spaceManager51);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.ParkingLot parkingLot12 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = parkingLot12.assignBooking(0, booking14);
        boolean boolean17 = parkingLot12.isSpaceAvailable((int) '#');
        boolean boolean19 = parkingLot12.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace21 = parkingLot12.getParkingSpace((int) (byte) 10);
        int int22 = parkingSpace21.getSpaceId();
        ParkingSystem.Booking booking23 = parkingSpace21.getCurrentBooking();
        java.lang.String str24 = parkingSpace21.scanSpace();
        ParkingSystem.Enabled enabled25 = new ParkingSystem.Enabled();
        parkingSpace21.setState((ParkingSystem.SpaceState) enabled25);
        ParkingSystem.Disabled disabled27 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace28 = null;
        java.lang.String str29 = disabled27.scanSpace(parkingSpace28);
        ParkingSystem.Enabled enabled30 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot32 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking34 = null;
        boolean boolean35 = parkingLot32.assignBooking(0, booking34);
        boolean boolean37 = parkingLot32.isSpaceAvailable((int) '#');
        boolean boolean39 = parkingLot32.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace41 = parkingLot32.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking42 = parkingSpace41.getCurrentBooking();
        parkingSpace41.removeBooking();
        java.lang.String str44 = enabled30.scanSpace(parkingSpace41);
        ParkingSystem.ParkingLot parkingLot46 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking48 = null;
        boolean boolean49 = parkingLot46.assignBooking(0, booking48);
        boolean boolean51 = parkingLot46.isSpaceAvailable((int) '#');
        boolean boolean53 = parkingLot46.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace55 = parkingLot46.getParkingSpace((int) (byte) 10);
        int int56 = parkingSpace55.getSpaceId();
        ParkingSystem.Booking booking57 = parkingSpace55.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager58 = new ParkingSystem.SpaceManager();
        boolean boolean61 = spaceManager58.isSpaceAvailable("hi!", (int) '#');
        spaceManager58.toggleLot("disabled", false);
        ParkingSystem.Booking booking74 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean75 = spaceManager58.assignBooking("empty", (int) (short) 0, booking74);
        boolean boolean76 = parkingSpace55.assignBooking(booking74);
        java.lang.String str77 = enabled30.scanSpace(parkingSpace55);
        java.lang.String str78 = disabled27.scanSpace(parkingSpace55);
        java.lang.String str79 = enabled25.scanSpace(parkingSpace55);
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled25);
        ParkingSystem.SpaceState spaceState81 = parkingSpace10.getState();
        ParkingSystem.ParkingLot parkingLot83 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking85 = null;
        boolean boolean86 = parkingLot83.assignBooking(0, booking85);
        boolean boolean88 = parkingLot83.isSpaceAvailable((int) '#');
        boolean boolean90 = parkingLot83.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator91 = parkingLot83.getIterator();
        ParkingSystem.ParkingSpace parkingSpace92 = parkingLotIterator91.next();
        parkingSpace92.removeBooking();
        ParkingSystem.Booking booking94 = parkingSpace92.getCurrentBooking();
        java.lang.String str95 = spaceState81.scanSpace(parkingSpace92);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(parkingSpace21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNull(booking23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "empty" + "'", str24, "empty");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "disabled" + "'", str29, "disabled");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(parkingSpace41);
        org.junit.Assert.assertNull(booking42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "empty" + "'", str44, "empty");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(parkingSpace55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNull(booking57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "disabled" + "'", str77, "disabled");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "disabled" + "'", str78, "disabled");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "disabled" + "'", str79, "disabled");
        org.junit.Assert.assertNotNull(spaceState81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator91);
        org.junit.Assert.assertNotNull(parkingSpace92);
        org.junit.Assert.assertNull(booking94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "empty" + "'", str95, "empty");
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        java.lang.Object obj16 = user0.login("Refunded total cost of $1.0", "Jane");
        java.lang.Object obj19 = user0.login("pass", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy23 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry24 = parkingSpaceProxy23.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj29 = parkingSpaceProxy26.login("empty", "Jane");
        parkingSpaceProxy26.validateClient("Jane");
        parkingSpaceProxy26.toggleSpace("", "staff", false);
        accountRegistry24.assignProxyToManager("pass", parkingSpaceProxy26);
        ParkingSystem.Client client38 = accountRegistry24.getClient("");
        ParkingSystem.SuperManager superManager39 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry24);
        ParkingSystem.AccountRegistry accountRegistry43 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager44 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry43);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy46 = null;
        accountRegistry43.assignProxyToManager("disabled", parkingSpaceProxy46);
        boolean boolean49 = accountRegistry43.requiresValidation("disabled");
        int int50 = accountRegistry43.getManagersSize();
        superManager39.registry = accountRegistry43;
        superManager39.displayPendingValidations();
        ParkingSystem.User user53 = new ParkingSystem.User();
        java.lang.Object obj54 = user53.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy55 = user53.parkingProxy;
        ParkingSystem.PaymentManager paymentManager56 = new ParkingSystem.PaymentManager();
        java.lang.String str57 = paymentManager56.refundMessage;
        boolean boolean59 = paymentManager56.refundTotalCost((-1.0d));
        paymentManager56.refundMessage = "disabled";
        boolean boolean66 = paymentManager56.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean69 = paymentManager56.refundWithoutDeposit(165.0d, 10.0d);
        user53.user = boolean69;
        java.lang.Object obj71 = user53.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy72 = user53.parkingProxy;
        ParkingSystem.Client client73 = ParkingSystem.Client.getInstance();
        java.lang.String str74 = client73.getName();
        client73.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy77 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry78 = parkingSpaceProxy77.getRegistry();
        boolean boolean80 = parkingSpaceProxy77.checkIn("");
        client73.assignProxy(parkingSpaceProxy77);
        boolean boolean82 = client73.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy83 = new ParkingSystem.ParkingSpaceProxy();
        client73.assignProxy(parkingSpaceProxy83);
        ParkingSystem.AccountRegistry accountRegistry85 = parkingSpaceProxy83.getRegistry();
        boolean boolean87 = parkingSpaceProxy83.checkIn("hi!");
        user53.assignProxy(parkingSpaceProxy83);
        superManager39.assignProxy(parkingSpaceProxy83);
        user0.assignProxy(parkingSpaceProxy83);
        java.lang.Object obj93 = user0.login("62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54", "");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(client38);
        org.junit.Assert.assertNotNull(superManager39);
        org.junit.Assert.assertNotNull(superManager44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(parkingSpaceProxy55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + obj71 + "' != '" + true + "'", obj71, true);
        org.junit.Assert.assertNull(parkingSpaceProxy72);
        org.junit.Assert.assertNotNull(client73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(accountRegistry78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(accountRegistry85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Refunded total cost of $100.0");
        double double17 = bookingManager0.getHourlyRate("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 15.0d + "'", double17 == 15.0d);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean6 = parkingSpaceFacade0.editBooking("Jane", "staff", (int) (short) 100);
        parkingSpaceFacade0.toggleSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", false);
        boolean boolean13 = parkingSpaceFacade0.extendBooking("disabled", (int) '4');
        parkingSpaceFacade0.toggleLot("CLT-035180a0-4707-410d-a011-2a4f0f46838b", true);
        parkingSpaceFacade0.addParkingLot("Refunded without deposit ($-96.0)");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        parkingSpaceProxy1.displayPendingValidations();
        parkingSpaceProxy1.addParkingLot("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy1.getFacade();
        parkingSpaceFacade17.toggleLot("jane", false);
        boolean boolean30 = parkingSpaceFacade17.confirmBooking("Paid $ 0.0 with Mobile Pay", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "XBERLIguFg", "Paid $ -1.0 with Mobile Pay", (-1), "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (short) 10, "4CGFxoSEo5", "Refunded total cost of $10.0");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        ParkingSystem.CSVManager cSVManager5 = new ParkingSystem.CSVManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager5.loadParkingLots(strMap6);
        ParkingSystem.CSVManager cSVManager8 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList10 = cSVManager8.readCSV("");
        java.util.List<java.lang.String[]> strArrayList12 = cSVManager8.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap13 = null;
        cSVManager8.loadParkingLots(strMap13);
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        ParkingSystem.Manager manager20 = superManager19.autoGenerateManager();
        cSVManager8.saveManager((ParkingSystem.Manager) superManager19);
        ParkingSystem.SpaceManager spaceManager22 = new ParkingSystem.SpaceManager();
        boolean boolean25 = spaceManager22.isSpaceAvailable("hi!", (int) '#');
        spaceManager22.toggleLot("disabled", false);
        ParkingSystem.Booking booking38 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean39 = spaceManager22.assignBooking("empty", (int) (short) 0, booking38);
        spaceManager22.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap41 = spaceManager22.getParkingLots();
        cSVManager8.loadParkingLots(strMap41);
        ParkingSystem.SpaceManager spaceManager43 = new ParkingSystem.SpaceManager();
        boolean boolean46 = spaceManager43.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str49 = spaceManager43.scanSpace("disabled", "");
        spaceManager43.addParkingLot("hi!");
        java.lang.String str54 = spaceManager43.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap55 = spaceManager43.getParkingLots();
        cSVManager8.saveParkingLots(strMap55);
        cSVManager5.saveParkingLots(strMap55);
        cSVManager0.loadParkingLots(strMap55);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Client> clientList59 = cSVManager0.loadClients();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList10);
        org.junit.Assert.assertNotNull(strArrayList12);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(manager20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "disabled" + "'", str49, "disabled");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "disabled" + "'", str54, "disabled");
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap7 = accountRegistry6.getManagers();
        ParkingSystem.Client client9 = ParkingSystem.Client.getInstance();
        java.lang.String str10 = client9.getName();
        client9.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str19 = client9.getUsername();
        java.lang.String str20 = client9.getPassword();
        java.lang.String str21 = client9.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = null;
        client9.assignProxy(parkingSpaceProxy22);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj27 = parkingSpaceProxy24.login("empty", "Jane");
        client9.assignProxy(parkingSpaceProxy24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking31 = parkingSpaceProxy29.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy29.getRegistry();
        parkingSpaceProxy29.autoGenerateManager();
        client9.assignProxy(parkingSpaceProxy29);
        boolean boolean38 = parkingSpaceProxy29.editBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded total cost of $100.0", (int) (byte) 0);
        accountRegistry6.assignProxyToManager("Paid $ 100.0 with Mobile Pay", parkingSpaceProxy29);
        accountRegistry6.validateClient("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(client9);
// flaky "26) test2778(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Jane" + "'", str10, "Jane");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        boolean boolean5 = parkingSpaceProxy0.checkOut("CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade6 = parkingSpaceProxy0.getFacade();
        boolean boolean8 = parkingSpaceFacade6.checkIn("CLT-f02c481e-1504-4abf-b598-76152da8586a");
        boolean boolean11 = parkingSpaceFacade6.extendBooking("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", (int) '#');
        ParkingSystem.CheckInManager checkInManager12 = parkingSpaceFacade6.getCheckInManager();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(checkInManager12);
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        parkingSpace10.removeBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        int int14 = parkingSpace10.getSpaceId();
        ParkingSystem.SpaceState spaceState15 = parkingSpace10.getState();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(spaceState15);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("02659ad3-0b5c-4c48-a915-a466f2b50775", "Refunded without deposit ($-42.0)", (int) (short) 1, "13b04414-31a5-407f-8ea3-fba4613c73d1", (int) ' ', "Refunded total cost of $-1.0", (double) 1);
        booking7.setStartTime("5XQfkf24zK");
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceProxy4.autoGenerateManager();
        parkingSpaceProxy4.autoGenerateManager();
        org.junit.Assert.assertNotNull(client0);
// flaky "27) test2782(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TXCrKOGD" + "'", str1, "TXCrKOGD");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry3 = parkingSpaceProxy0.getRegistry();
        java.lang.String str6 = parkingSpaceProxy0.scanSpace("staff", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        ParkingSystem.Booking booking8 = parkingSpaceProxy0.getBookingDetails("ST001");
        boolean boolean10 = parkingSpaceProxy0.cancelBooking("Refunded without deposit ($-15.0)");
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertNotNull(accountRegistry3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.BookingManager bookingManager10 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager11 = new ParkingSystem.CheckInManager(bookingManager10);
        ParkingSystem.AccountRegistry accountRegistry12 = bookingManager10.getAccountRegistry();
        superManager4.registry = accountRegistry12;
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap14 = accountRegistry12.getManagers();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap8 = accountRegistry6.getManagers();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry6);
        java.util.List<ParkingSystem.Client> clientList10 = accountRegistry6.displayPendingValidations();
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        boolean boolean21 = accountRegistry18.requiresValidation("disabled");
        int int22 = accountRegistry18.getManagersSize();
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry18);
        ParkingSystem.AccountRegistry accountRegistry24 = superManager23.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry27 = parkingSpaceProxy26.getRegistry();
        boolean boolean33 = parkingSpaceProxy26.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean37 = parkingSpaceProxy26.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean47 = parkingSpaceProxy26.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "staff", "disabled", (int) (short) 0, "Paid $ 100.0 with Mobile Pay", (int) (short) 10, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Jane");
        accountRegistry24.assignProxyToManager("empty", parkingSpaceProxy26);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy50 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade51 = parkingSpaceProxy50.getFacade();
        accountRegistry24.assignProxyToManager("", parkingSpaceProxy50);
        parkingSpaceProxy50.addParkingLot("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean56 = parkingSpaceProxy50.cancelBooking("Paid $ -1.0 with Mobile Pay");
        accountRegistry6.assignProxyToManager("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", parkingSpaceProxy50);
        boolean boolean59 = parkingSpaceProxy50.checkIn("Jane");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNotNull(clientList10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertNotNull(accountRegistry24);
        org.junit.Assert.assertNotNull(accountRegistry27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        superManager10.registry = accountRegistry14;
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry14);
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "pass", "empty", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry19 = superManager18.registry;
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry19.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry19);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.CheckInManager checkInManager11 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean13 = checkInManager11.checkOut("86z9Z9e0MN");
        checkInManager11.refundMessage = "09622cbf-e665-45db-b1ad-365065947a20";
        checkInManager11.refundMessage = "Refunded deposit of $0.0";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(checkInManager11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        java.lang.String str13 = client0.getName();
        boolean boolean14 = client0.checkIn();
        boolean boolean15 = client0.checkIn();
        org.junit.Assert.assertNotNull(client0);
// flaky "28) test2788(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Jane" + "'", str1, "Jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("staff", false);
        parkingSpaceFacade0.toggleLot("", false);
        ParkingSystem.BookingManager bookingManager11 = parkingSpaceFacade0.getBookingManager();
        double double13 = bookingManager11.getDeposit("CLT-d1718d6a-d18c-4eab-8cd1-c51deadfbd2f");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(bookingManager11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 15.0d + "'", double13 == 15.0d);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry17 = parkingSpaceProxy16.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj22 = parkingSpaceProxy19.login("empty", "Jane");
        parkingSpaceProxy19.validateClient("Jane");
        parkingSpaceProxy19.toggleSpace("", "staff", false);
        accountRegistry17.assignProxyToManager("pass", parkingSpaceProxy19);
        ParkingSystem.Client client31 = accountRegistry17.getClient("");
        ParkingSystem.SuperManager superManager32 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry17);
        boolean boolean38 = accountRegistry17.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy40 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry41 = parkingSpaceProxy40.getRegistry();
        boolean boolean43 = parkingSpaceProxy40.checkIn("");
        parkingSpaceProxy40.toggleLot("", true);
        accountRegistry17.assignProxyToManager("", parkingSpaceProxy40);
        superManager11.registry = accountRegistry17;
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNotNull(accountRegistry17);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(client31);
        org.junit.Assert.assertNotNull(superManager32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(accountRegistry41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        superManager4.validateClient("");
        ParkingSystem.User user18 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj22 = parkingSpaceProxy19.login("empty", "Jane");
        parkingSpaceProxy19.validateClient("Jane");
        parkingSpaceProxy19.toggleSpace("", "staff", false);
        boolean boolean30 = parkingSpaceProxy19.cancelBooking("");
        user18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.Booking booking33 = parkingSpaceProxy19.getBookingDetails("hi!");
        superManager4.assignProxy(parkingSpaceProxy19);
        ParkingSystem.AccountRegistry accountRegistry41 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager42 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry41);
        boolean boolean44 = accountRegistry41.requiresValidation("disabled");
        int int45 = accountRegistry41.getManagersSize();
        ParkingSystem.SuperManager superManager46 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry41);
        ParkingSystem.AccountRegistry accountRegistry47 = superManager46.getRegistry();
        ParkingSystem.User user48 = new ParkingSystem.User();
        java.lang.Object obj49 = user48.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy50 = user48.parkingProxy;
        ParkingSystem.User user51 = new ParkingSystem.User();
        java.lang.Object obj52 = user51.user;
        ParkingSystem.Client client53 = ParkingSystem.Client.getInstance();
        java.lang.String str54 = client53.getName();
        client53.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy57 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry58 = parkingSpaceProxy57.getRegistry();
        boolean boolean60 = parkingSpaceProxy57.checkIn("");
        client53.assignProxy(parkingSpaceProxy57);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade62 = parkingSpaceProxy57.getFacade();
        user51.assignProxy(parkingSpaceProxy57);
        user48.parkingProxy = parkingSpaceProxy57;
        ParkingSystem.AccountRegistry accountRegistry68 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager69 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry68);
        java.lang.String str70 = superManager69.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry71 = superManager69.registry;
        java.lang.String str72 = superManager69.getManagerId();
        ParkingSystem.Client client73 = ParkingSystem.Client.getInstance();
        java.lang.String str74 = client73.getName();
        client73.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy77 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry78 = parkingSpaceProxy77.getRegistry();
        boolean boolean80 = parkingSpaceProxy77.checkIn("");
        client73.assignProxy(parkingSpaceProxy77);
        boolean boolean82 = client73.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy83 = new ParkingSystem.ParkingSpaceProxy();
        client73.assignProxy(parkingSpaceProxy83);
        superManager69.assignProxy(parkingSpaceProxy83);
        user48.assignProxy(parkingSpaceProxy83);
        ParkingSystem.AccountRegistry accountRegistry87 = parkingSpaceProxy83.getRegistry();
        java.lang.String str90 = parkingSpaceProxy83.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        boolean boolean93 = parkingSpaceProxy83.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (byte) 1);
        superManager46.assignProxy(parkingSpaceProxy83);
        superManager4.assignProxy(parkingSpaceProxy83);
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(booking33);
        org.junit.Assert.assertNotNull(superManager42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(superManager46);
        org.junit.Assert.assertNotNull(accountRegistry47);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(parkingSpaceProxy50);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(client53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade62);
        org.junit.Assert.assertNotNull(superManager69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(accountRegistry71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(client73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(accountRegistry87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "disabled" + "'", str90, "disabled");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager6.getSpaceManager();
        double double11 = bookingManager6.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit12 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        boolean boolean18 = debitOrCredit12.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        double double21 = bookingManager0.getHourlyRate("");
        double double23 = bookingManager0.getDeposit("CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 165.0d + "'", double11 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 15.0d + "'", double23 == 15.0d);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.Booking booking4 = client0.getBookingDetails();
        boolean boolean5 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "hi!" + "'", str1, "hi!");
        org.junit.Assert.assertNull(booking4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.Booking booking13 = parkingSpaceFacade9.getBookingDetails("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean16 = parkingSpaceFacade9.extendBooking("ST001", 2);
        ParkingSystem.CheckInManager checkInManager17 = parkingSpaceFacade9.getCheckInManager();
        boolean boolean19 = checkInManager17.checkOut("K6PkM9rcCx");
        boolean boolean21 = checkInManager17.checkIn("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        boolean boolean23 = checkInManager17.checkIn("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "hi!" + "'", str1, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(checkInManager17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("pass");
        ParkingSystem.SpaceManager spaceManager3 = new ParkingSystem.SpaceManager();
        spaceManager3.toggleLot("Jane", false);
        spaceManager3.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager12 = new ParkingSystem.SpaceManager();
        boolean boolean15 = spaceManager12.isSpaceAvailable("hi!", (int) '#');
        spaceManager12.toggleLot("disabled", false);
        ParkingSystem.Booking booking28 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean29 = spaceManager12.assignBooking("empty", (int) (short) 0, booking28);
        boolean boolean30 = spaceManager3.assignBooking("hi!", 0, booking28);
        double double31 = booking28.getTotalCost();
        booking28.setDuration((-1));
        java.lang.String str34 = booking28.getLotId();
        boolean boolean35 = parkingLot1.assignBooking(1, booking28);
        boolean boolean36 = booking28.isCheckedIn();
        boolean boolean37 = booking28.isCheckedIn();
        int int38 = booking28.getDuration();
        booking28.setDuration((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "jane" + "'", str34, "jane");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        java.lang.String str4 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager5 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager6 = new ParkingSystem.CheckInManager(bookingManager5);
        ParkingSystem.Booking booking8 = bookingManager5.getBooking("");
        ParkingSystem.SpaceManager spaceManager9 = bookingManager5.getSpaceManager();
        boolean boolean19 = bookingManager5.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double21 = bookingManager5.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit22 = new ParkingSystem.DebitOrCredit();
        bookingManager5.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit22);
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit22);
        boolean boolean27 = debitOrCredit22.validateCard("06b0adae-5a80-41cd-b7f6-6da51afdd4f5", (double) 10);
        java.lang.String str28 = debitOrCredit22.getPaymentMessage();
        boolean boolean31 = debitOrCredit22.validateCard("848f508e-e1d2-4f02-9fc9-e95eee425d36", (double) 1.0f);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(booking8);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Card number should be 16 digits" + "'", str28, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy18.getRegistry();
        boolean boolean25 = parkingSpaceProxy18.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy18.toggleLot("hi!", false);
        accountRegistry15.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy18);
        java.lang.Object obj32 = parkingSpaceProxy18.login("", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean34 = parkingSpaceProxy18.cancelBooking("Refunded without deposit ($0.0)");
        boolean boolean38 = parkingSpaceProxy18.editBooking("4a1f2343-8b2e-4dea-ba69-efd105414390", "86z9Z9e0MN", (int) (byte) 10);
        boolean boolean42 = parkingSpaceProxy18.editBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (int) (byte) 1);
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("hi!", (-1.0d), "", "");
        boolean boolean10 = mobilePay0.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean15 = mobilePay0.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        java.lang.String str16 = mobilePay0.getPaymentMessage();
        java.lang.String str17 = mobilePay0.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str16, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str17, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        spaceManager0.removeBooking("jane", (int) (byte) 100);
        spaceManager0.loadParkingLots();
        boolean boolean13 = spaceManager0.isSpaceAvailable("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Enabled enabled11 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot13 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator14 = parkingLot13.getIterator();
        ParkingSystem.ParkingSpace parkingSpace16 = parkingLot13.getParkingSpace((int) (byte) -1);
        java.lang.String str17 = enabled11.scanSpace(parkingSpace16);
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled11);
        ParkingSystem.ParkingLot parkingLot20 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot20.assignBooking(0, booking22);
        boolean boolean25 = parkingLot20.isSpaceAvailable((int) '#');
        boolean boolean27 = parkingLot20.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot20.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking30 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        ParkingSystem.Booking booking32 = parkingSpace29.getCurrentBooking();
        parkingSpace29.removeBooking();
        java.lang.String str34 = enabled11.scanSpace(parkingSpace29);
        ParkingSystem.Enabled enabled35 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot37 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking39 = null;
        boolean boolean40 = parkingLot37.assignBooking(0, booking39);
        boolean boolean42 = parkingLot37.isSpaceAvailable((int) '#');
        boolean boolean44 = parkingLot37.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace46 = parkingLot37.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking47 = parkingSpace46.getCurrentBooking();
        parkingSpace46.removeBooking();
        java.lang.String str49 = enabled35.scanSpace(parkingSpace46);
        ParkingSystem.Enabled enabled50 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot52 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking54 = null;
        boolean boolean55 = parkingLot52.assignBooking(0, booking54);
        boolean boolean57 = parkingLot52.isSpaceAvailable((int) '#');
        boolean boolean59 = parkingLot52.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace61 = parkingLot52.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking62 = parkingSpace61.getCurrentBooking();
        parkingSpace61.removeBooking();
        java.lang.String str64 = enabled50.scanSpace(parkingSpace61);
        java.lang.String str65 = enabled35.scanSpace(parkingSpace61);
        java.lang.String str66 = enabled11.scanSpace(parkingSpace61);
        ParkingSystem.ParkingSpace parkingSpace67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = enabled11.scanSpace(parkingSpace67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpace.getCurrentBooking()\" because \"space\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNotNull(parkingLotIterator14);
        org.junit.Assert.assertNotNull(parkingSpace16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertNull(booking32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "empty" + "'", str34, "empty");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(parkingSpace46);
        org.junit.Assert.assertNull(booking47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "empty" + "'", str49, "empty");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(parkingSpace61);
        org.junit.Assert.assertNull(booking62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "empty" + "'", str64, "empty");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "empty" + "'", str65, "empty");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "empty" + "'", str66, "empty");
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        java.lang.String str5 = paymentManager0.refundMessage;
        boolean boolean7 = paymentManager0.refundDeposit((double) ' ');
        java.lang.String str8 = paymentManager0.paymentMessage;
        java.lang.String str9 = paymentManager0.paymentMessage;
        paymentManager0.paymentMessage = "13b04414-31a5-407f-8ea3-fba4613c73d1";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str5, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.Enabled enabled1 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot3 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking5 = null;
        boolean boolean6 = parkingLot3.assignBooking(0, booking5);
        boolean boolean8 = parkingLot3.isSpaceAvailable((int) '#');
        boolean boolean10 = parkingLot3.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot3.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking13 = parkingSpace12.getCurrentBooking();
        parkingSpace12.removeBooking();
        java.lang.String str15 = enabled1.scanSpace(parkingSpace12);
        java.lang.String str16 = parkingSpace12.scanSpace();
        java.lang.String str17 = disabled0.scanSpace(parkingSpace12);
        java.lang.String str18 = parkingSpace12.scanSpace();
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int27 = booking26.getDuration();
        java.lang.String str28 = booking26.getClientId();
        boolean boolean29 = parkingSpace12.assignBooking(booking26);
        java.lang.String str30 = booking26.getClientId();
        int int31 = booking26.getDuration();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "empty" + "'", str15, "empty");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "empty" + "'", str16, "empty");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "empty" + "'", str18, "empty");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "staff" + "'", str28, "staff");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "staff" + "'", str30, "staff");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        boolean boolean9 = accountRegistry6.requiresValidation("disabled");
        int int10 = accountRegistry6.getManagersSize();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry12 = superManager11.getRegistry();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = user13.parkingProxy;
        ParkingSystem.User user16 = new ParkingSystem.User();
        java.lang.Object obj17 = user16.user;
        ParkingSystem.Client client18 = ParkingSystem.Client.getInstance();
        java.lang.String str19 = client18.getName();
        client18.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy22.getRegistry();
        boolean boolean25 = parkingSpaceProxy22.checkIn("");
        client18.assignProxy(parkingSpaceProxy22);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade27 = parkingSpaceProxy22.getFacade();
        user16.assignProxy(parkingSpaceProxy22);
        user13.parkingProxy = parkingSpaceProxy22;
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        java.lang.String str35 = superManager34.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry36 = superManager34.registry;
        java.lang.String str37 = superManager34.getManagerId();
        ParkingSystem.Client client38 = ParkingSystem.Client.getInstance();
        java.lang.String str39 = client38.getName();
        client38.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy42 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry43 = parkingSpaceProxy42.getRegistry();
        boolean boolean45 = parkingSpaceProxy42.checkIn("");
        client38.assignProxy(parkingSpaceProxy42);
        boolean boolean47 = client38.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        client38.assignProxy(parkingSpaceProxy48);
        superManager34.assignProxy(parkingSpaceProxy48);
        user13.assignProxy(parkingSpaceProxy48);
        ParkingSystem.AccountRegistry accountRegistry52 = parkingSpaceProxy48.getRegistry();
        java.lang.String str55 = parkingSpaceProxy48.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        boolean boolean58 = parkingSpaceProxy48.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (byte) 1);
        superManager11.assignProxy(parkingSpaceProxy48);
        boolean boolean61 = parkingSpaceProxy48.checkOut("Refunded total cost of $-1.0");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(parkingSpaceProxy15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(client18);
// flaky "29) test2803(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Refunded total cost of $1.0" + "'", str19, "Refunded total cost of $1.0");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade27);
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(accountRegistry36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(client38);
// flaky "16) test2803(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Refunded total cost of $1.0" + "'", str39, "Refunded total cost of $1.0");
        org.junit.Assert.assertNotNull(accountRegistry43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(accountRegistry52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "disabled" + "'", str55, "disabled");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.CheckInManager checkInManager5 = parkingSpaceFacade0.getCheckInManager();
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(checkInManager5);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        spaceManager8.removeBooking("jane", (int) '#');
        ParkingSystem.ParkingLot parkingLot15 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking17 = null;
        boolean boolean18 = parkingLot15.assignBooking(0, booking17);
        boolean boolean20 = parkingLot15.isSpaceAvailable((int) '#');
        boolean boolean22 = parkingLot15.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace24 = parkingLot15.getParkingSpace((int) (byte) 10);
        int int25 = parkingSpace24.getSpaceId();
        ParkingSystem.Booking booking26 = parkingSpace24.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager27 = new ParkingSystem.SpaceManager();
        boolean boolean30 = spaceManager27.isSpaceAvailable("hi!", (int) '#');
        spaceManager27.toggleLot("disabled", false);
        ParkingSystem.Booking booking43 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean44 = spaceManager27.assignBooking("empty", (int) (short) 0, booking43);
        boolean boolean45 = parkingSpace24.assignBooking(booking43);
        boolean boolean46 = spaceManager8.assignBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (short) 100, booking43);
        booking43.setStartTime("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean49 = booking43.isCheckedIn();
        java.lang.String str50 = booking43.getClientId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(parkingSpace24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertNull(booking26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "staff" + "'", str50, "staff");
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = spaceManager0.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        boolean boolean15 = spaceManager0.isSpaceAvailable("Refunded total cost of $100.0", (int) (byte) 0);
        ParkingSystem.Booking booking25 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int26 = booking25.getDuration();
        java.lang.String str27 = booking25.getClientId();
        booking25.setStartTime("hi!");
        boolean boolean30 = booking25.isCheckedIn();
        java.lang.String str31 = booking25.getLotId();
        int int32 = booking25.getDuration();
        boolean boolean33 = spaceManager0.assignBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", (int) (short) 1, booking25);
        booking25.setDuration((int) '#');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "staff" + "'", str27, "staff");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "jane" + "'", str31, "jane");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        java.lang.String str14 = client0.getUsername();
        java.lang.String str15 = client0.getPassword();
        boolean boolean23 = client0.confirmBooking("CLT-4aab5c22-53d4-41cb-8ccf-dd435bb7f17b", "H33Itw4InT", (int) (short) 1, "8ca2ec61-774c-409d-89d5-5b9171b40497", (int) '#', "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Refunded total cost of $10.0");
        org.junit.Assert.assertNotNull(client0);
// flaky "30) test2807(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff" + "'", str1, "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.Disabled disabled16 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace17 = null;
        java.lang.String str18 = disabled16.scanSpace(parkingSpace17);
        ParkingSystem.Enabled enabled19 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot21 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking23 = null;
        boolean boolean24 = parkingLot21.assignBooking(0, booking23);
        boolean boolean26 = parkingLot21.isSpaceAvailable((int) '#');
        boolean boolean28 = parkingLot21.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace30 = parkingLot21.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking31 = parkingSpace30.getCurrentBooking();
        parkingSpace30.removeBooking();
        java.lang.String str33 = enabled19.scanSpace(parkingSpace30);
        ParkingSystem.ParkingLot parkingLot35 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking37 = null;
        boolean boolean38 = parkingLot35.assignBooking(0, booking37);
        boolean boolean40 = parkingLot35.isSpaceAvailable((int) '#');
        boolean boolean42 = parkingLot35.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace44 = parkingLot35.getParkingSpace((int) (byte) 10);
        int int45 = parkingSpace44.getSpaceId();
        ParkingSystem.Booking booking46 = parkingSpace44.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager47 = new ParkingSystem.SpaceManager();
        boolean boolean50 = spaceManager47.isSpaceAvailable("hi!", (int) '#');
        spaceManager47.toggleLot("disabled", false);
        ParkingSystem.Booking booking63 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean64 = spaceManager47.assignBooking("empty", (int) (short) 0, booking63);
        boolean boolean65 = parkingSpace44.assignBooking(booking63);
        java.lang.String str66 = enabled19.scanSpace(parkingSpace44);
        java.lang.String str67 = disabled16.scanSpace(parkingSpace44);
        java.lang.String str68 = enabled14.scanSpace(parkingSpace44);
        int int69 = parkingSpace44.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(parkingSpace30);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "empty" + "'", str33, "empty");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(parkingSpace44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertNull(booking46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "disabled" + "'", str66, "disabled");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "disabled" + "'", str67, "disabled");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "disabled" + "'", str68, "disabled");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.toggleLot("", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = parkingSpaceProxy0.getFacade();
        boolean boolean13 = parkingSpaceProxy0.register("0b35479f-5869-423e-9abc-e4ab9cef903d", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "CLT-6bf41de3-8b5a-4cee-8fc7-f8abc4e5b750", "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b");
        boolean boolean15 = parkingSpaceProxy0.checkIn("SRiN5ev00N");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager0.loadParkingLots(strMap6);
        ParkingSystem.Client client8 = ParkingSystem.Client.getInstance();
        java.lang.String str9 = client8.getClientType();
        cSVManager0.saveClient(client8);
        java.lang.String str11 = client8.getName();
        java.lang.String str12 = client8.getName();
        java.lang.String str13 = client8.getName();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04" + "'", str9, "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "0b35479f-5869-423e-9abc-e4ab9cef903d" + "'", str11, "0b35479f-5869-423e-9abc-e4ab9cef903d");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "0b35479f-5869-423e-9abc-e4ab9cef903d" + "'", str12, "0b35479f-5869-423e-9abc-e4ab9cef903d");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "0b35479f-5869-423e-9abc-e4ab9cef903d" + "'", str13, "0b35479f-5869-423e-9abc-e4ab9cef903d");
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean19 = bookingManager0.cancelBooking("Refunded total cost of $1.0");
        ParkingSystem.MobilePay mobilePay20 = new ParkingSystem.MobilePay();
        boolean boolean25 = mobilePay20.processPayment("hi!", (-1.0d), "", "");
        boolean boolean30 = mobilePay20.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str31 = mobilePay20.getPaymentMessage();
        boolean boolean36 = mobilePay20.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded total cost of $1.0", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean41 = mobilePay20.processPayment("Paid $ 100.0 with Mobile Pay", 165.0d, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay20);
        double double44 = bookingManager0.getHourlyRate("25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str31, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 15.0d + "'", double44 == 15.0d);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry3);
        superManager4.displayPendingValidations();
        superManager4.validateClient("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5");
        org.junit.Assert.assertNotNull(superManager4);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean29 = paymentManager0.refundDeposit(0.0d);
        boolean boolean34 = paymentManager0.processPayment("8ca2ec61-774c-409d-89d5-5b9171b40497", (double) 1, "", "9fJ5pCUl");
        ParkingSystem.PaymentManager paymentManager35 = new ParkingSystem.PaymentManager();
        ParkingSystem.MobilePay mobilePay36 = new ParkingSystem.MobilePay();
        boolean boolean41 = mobilePay36.processPayment("hi!", (-1.0d), "", "");
        boolean boolean46 = mobilePay36.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str47 = mobilePay36.getPaymentMessage();
        boolean boolean52 = mobilePay36.processPayment("Refunded without deposit ($0.0)", (double) (-1L), "Refunded total cost of $1.0", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        boolean boolean57 = mobilePay36.processPayment("Paid $ 100.0 with Mobile Pay", 165.0d, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        paymentManager35.setStrategy((ParkingSystem.Strategy) mobilePay36);
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay36);
        boolean boolean64 = paymentManager0.processPayment("e8686ac8-1df7-4a9b-b299-8fbcdd585528", (double) (short) 0, "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "Refunded without deposit ($-15.0)");
        java.lang.String str65 = paymentManager0.paymentMessage;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str47, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Paid $ 0.0 with Mobile Pay" + "'", str65, "Paid $ 0.0 with Mobile Pay");
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.BookingManager bookingManager19 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.SpaceManager spaceManager20 = bookingManager19.getSpaceManager();
        double double22 = bookingManager19.getDeposit("02659ad3-0b5c-4c48-a915-a466f2b50775");
        ParkingSystem.MobilePay mobilePay23 = new ParkingSystem.MobilePay();
        boolean boolean28 = mobilePay23.processPayment("hi!", (-1.0d), "", "");
        java.lang.String str29 = mobilePay23.getPaymentMessage();
        bookingManager19.setPaymentStrategy((ParkingSystem.Strategy) mobilePay23);
        ParkingSystem.SpaceManager spaceManager31 = bookingManager19.getSpaceManager();
        ParkingSystem.PaymentManager paymentManager32 = new ParkingSystem.PaymentManager();
        paymentManager32.refundMessage = "";
        boolean boolean36 = paymentManager32.refundTotalCost((double) (byte) 1);
        paymentManager32.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean41 = paymentManager32.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str42 = paymentManager32.paymentMessage;
        boolean boolean47 = paymentManager32.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade48 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.BookingManager bookingManager49 = parkingSpaceFacade48.getBookingManager();
        ParkingSystem.MobilePay mobilePay50 = new ParkingSystem.MobilePay();
        java.lang.String str51 = mobilePay50.getPaymentMessage();
        boolean boolean56 = mobilePay50.processPayment("Jane", 10.0d, "empty", "jane");
        bookingManager49.setPaymentStrategy((ParkingSystem.Strategy) mobilePay50);
        boolean boolean62 = mobilePay50.processPayment("empty", (double) 32, "Refunded total cost of $-1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        paymentManager32.setStrategy((ParkingSystem.Strategy) mobilePay50);
        bookingManager19.setPaymentStrategy((ParkingSystem.Strategy) mobilePay50);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "0b35479f-5869-423e-9abc-e4ab9cef903d" + "'", str6, "0b35479f-5869-423e-9abc-e4ab9cef903d");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(bookingManager19);
        org.junit.Assert.assertNotNull(spaceManager20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Paid $ -1.0 with Mobile Pay" + "'", str29, "Paid $ -1.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(spaceManager31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str42, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bookingManager49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", true);
        ParkingSystem.SpaceManager spaceManager9 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.BookingManager bookingManager10 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertNotNull(bookingManager10);
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        ParkingSystem.Client client6 = ParkingSystem.Client.getInstance();
        java.lang.String str7 = client6.getName();
        client6.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str16 = client6.getUsername();
        java.lang.String str17 = client6.getPassword();
        java.lang.String str18 = client6.getClientType();
        boolean boolean19 = client6.getIsValidated();
        boolean boolean27 = client6.confirmBooking("hi!", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "Paid $ 100.0 with Mobile Pay", (-1), "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "empty");
        java.lang.String str28 = client6.getName();
        cSVManager0.saveClient(client6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<ParkingSystem.Manager> managerList30 = cSVManager0.loadManagers();
// flaky "31) test2816(RegressionTest5)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0b35479f-5869-423e-9abc-e4ab9cef903d" + "'", str7, "0b35479f-5869-423e-9abc-e4ab9cef903d");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "disabled" + "'", str18, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        java.lang.String str9 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry10 = superManager4.registry;
        ParkingSystem.Manager manager11 = superManager4.autoGenerateManager();
        java.lang.String str12 = superManager4.getName();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertNotNull(manager11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52" + "'", str12, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        checkInManager1.refundMessage = "staff";
        boolean boolean7 = checkInManager1.checkIn("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean9 = checkInManager1.checkOut("Card number should be 16 digits");
        checkInManager1.refundMessage = "CLT-30fd593b-dedd-41b3-a919-c48700301f41";
        boolean boolean13 = checkInManager1.checkIn("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        checkInManager1.refundMessage = "qMzKSKOI";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean11 = parkingSpaceProxy0.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        boolean boolean14 = parkingSpaceProxy0.extendBooking("", 0);
        parkingSpaceProxy0.validateClient("Paid $ -1.0 with Mobile Pay");
        boolean boolean18 = parkingSpaceProxy0.checkOut("721fcb72-c57d-4e99-81b7-06e4c7e1ed40");
        parkingSpaceProxy0.autoGenerateManager();
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.validateClient("");
        parkingSpaceProxy0.autoGenerateManager();
        boolean boolean8 = parkingSpaceProxy0.cancelBooking("cf448544-0e6d-4a41-94c2-e67f848ae8df");
        ParkingSystem.Booking booking10 = parkingSpaceProxy0.getBookingDetails("Refunded total cost of $-1.0");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(booking10);
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        double double18 = bookingManager0.getDeposit("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap20 = bookingManager0.getActiveBookings();
        ParkingSystem.AccountRegistry accountRegistry21 = bookingManager0.getAccountRegistry();
        ParkingSystem.Booking booking23 = bookingManager0.getBooking("qPYDfDnbtD");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 15.0d + "'", double18 == 15.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertNull(booking23);
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.cancelBooking();
        ParkingSystem.User user11 = new ParkingSystem.User();
        java.lang.Object obj12 = user11.user;
        ParkingSystem.Client client13 = ParkingSystem.Client.getInstance();
        java.lang.String str14 = client13.getName();
        client13.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry18 = parkingSpaceProxy17.getRegistry();
        boolean boolean20 = parkingSpaceProxy17.checkIn("");
        client13.assignProxy(parkingSpaceProxy17);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade22 = parkingSpaceProxy17.getFacade();
        user11.assignProxy(parkingSpaceProxy17);
        java.lang.String str26 = parkingSpaceProxy17.scanSpace("disabled", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        parkingSpaceProxy17.toggleLot("empty", true);
        client0.assignProxy(parkingSpaceProxy17);
        java.lang.String str31 = client0.getPassword();
        boolean boolean33 = client0.extendBooking(1);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "empty" + "'", str1, "empty");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(client13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(accountRegistry18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "disabled" + "'", str31, "disabled");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        java.lang.String str5 = parkingSpaceFacade0.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager6 = parkingSpaceFacade0.getCheckInManager();
        boolean boolean16 = parkingSpaceFacade0.confirmBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "", "2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 0.0 with Mobile Pay", (int) (short) 100, "9701df9a-2178-4ad5-8076-46ff5f05b3e8", 1, "Paid $ 0.0 with Mobile Pay", "disabled");
        boolean boolean20 = parkingSpaceFacade0.editBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ 10.0 with Mobile Pay", (int) (short) 1);
        parkingSpaceFacade0.toggleLot("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertNotNull(checkInManager6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = parkingSpaceProxy0.getFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        parkingSpaceFacade1.addParkingLot("");
        ParkingSystem.SpaceManager spaceManager5 = parkingSpaceFacade1.getSpaceManager();
        org.junit.Assert.assertNotNull(parkingSpaceFacade1);
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager5);
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager19 = bookingManager0.getSpaceManager();
        double double21 = bookingManager0.getDeposit("7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        boolean boolean26 = bookingManager0.extendBooking("Jane", (int) ' ', "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753", "4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        ParkingSystem.SpaceManager spaceManager27 = bookingManager0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(spaceManager19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 15.0d + "'", double21 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spaceManager27);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        boolean boolean15 = debitOrCredit6.validateCard("CLT-30fd593b-dedd-41b3-a919-c48700301f41", 165.0d);
        java.lang.String str16 = debitOrCredit6.getPaymentMessage();
        java.lang.String str17 = debitOrCredit6.getPaymentMessage();
        java.lang.String str18 = debitOrCredit6.getPaymentMessage();
        java.lang.String str19 = debitOrCredit6.getPaymentMessage();
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Card number should be 16 digits" + "'", str16, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Card number should be 16 digits" + "'", str17, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Card number should be 16 digits" + "'", str18, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Card number should be 16 digits" + "'", str19, "Card number should be 16 digits");
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        boolean boolean8 = parkingSpaceFacade0.editBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Paid $ -1.0 with Mobile Pay", 1);
        boolean boolean10 = parkingSpaceFacade0.checkOut("Paid $ -1.0 with Mobile Pay");
        parkingSpaceFacade0.toggleLot("", false);
        ParkingSystem.Booking booking15 = parkingSpaceFacade0.getBookingDetails("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(booking15);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        java.util.List<java.lang.String[]> strArrayList8 = cSVManager0.readCSV("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy12.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        accountRegistry13.assignProxyToManager("pass", parkingSpaceProxy15);
        ParkingSystem.Client client27 = accountRegistry13.getClient("");
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry13);
        ParkingSystem.AccountRegistry accountRegistry29 = superManager28.registry;
        java.lang.String str30 = superManager28.getManagerId();
        java.lang.String str31 = superManager28.getPassword();
        ParkingSystem.AccountRegistry accountRegistry32 = superManager28.getRegistry();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager28);
        ParkingSystem.AccountRegistry accountRegistry37 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager38 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry37);
        ParkingSystem.AccountRegistry accountRegistry42 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager43 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry42);
        superManager38.registry = accountRegistry42;
        ParkingSystem.Client client46 = accountRegistry42.getClient("empty");
        accountRegistry42.validateClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.Manager manager49 = accountRegistry42.autoGenerateManager();
        cSVManager0.saveManager(manager49);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArrayList8);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(client27);
        org.junit.Assert.assertNotNull(superManager28);
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Refunded without deposit ($0.0)" + "'", str31, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertNotNull(superManager38);
        org.junit.Assert.assertNotNull(superManager43);
        org.junit.Assert.assertNull(client46);
        org.junit.Assert.assertNotNull(manager49);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        parkingSpaceFacade9.toggleLot("ST001", false);
        ParkingSystem.Booking booking14 = parkingSpaceFacade9.getBookingDetails("3b453211-7dd1-4452-8741-a206711c1217");
        ParkingSystem.Booking booking16 = parkingSpaceFacade9.getBookingDetails("ST001");
        boolean boolean19 = parkingSpaceFacade9.extendBooking("Refunded without deposit ($0.0)", (int) '#');
        parkingSpaceFacade9.addParkingLot("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj12 = parkingSpaceProxy9.login("empty", "Jane");
        parkingSpaceProxy9.validateClient("Jane");
        parkingSpaceProxy9.toggleSpace("", "staff", false);
        boolean boolean20 = parkingSpaceProxy9.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy9);
        boolean boolean27 = parkingSpaceProxy9.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean33 = parkingSpaceProxy9.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade34 = parkingSpaceProxy9.getFacade();
        boolean boolean37 = parkingSpaceProxy9.extendBooking("", (int) (short) 1);
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        spaceManager0.removeBooking("jane", (int) (byte) 100);
        spaceManager0.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap11 = spaceManager0.getParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap12 = spaceManager0.getParkingLots();
        spaceManager0.toggleLot("fhd49ADb", true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Card number should be 16 digits");
        java.lang.String[] strArray5 = cSVManager0.loadSuperManager();
        cSVManager0.updateClientValidation("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", false);
        java.lang.String[] strArray9 = cSVManager0.loadSuperManager();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArray5);
// flaky "32) test2832(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray5, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray9);
// flaky "17) test2832(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray9, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        parkingLot1.removeBooking((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.Booking booking13 = parkingSpaceFacade9.getBookingDetails("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean16 = parkingSpaceFacade9.extendBooking("ST001", 2);
        parkingSpaceFacade9.addParkingLot("2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean22 = parkingSpaceFacade9.editBooking("SRiN5ev00N", "CLT-d8bf4c7d-97ae-4388-8e43-8e38dfdc8d7c", 4);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean19 = parkingSpaceFacade17.checkIn("");
        java.lang.String str22 = parkingSpaceFacade17.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager23 = parkingSpaceFacade17.getCheckInManager();
        user0.user = parkingSpaceFacade17;
        boolean boolean34 = parkingSpaceFacade17.confirmBooking("5XQfkf24zK", "2d0fc45e-f79a-4bfb-ba07-3322876cac6b", "Refunded without deposit ($0.0)", "Paid $ -1.0 with Mobile Pay", (int) ' ', "staff", (int) (short) -1, "83a51dc6-0c8f-4f21-ae40-68699828f95d", "CLT-22138484-eb59-490e-9c41-9fd9c319dcda");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str6, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
        org.junit.Assert.assertNotNull(checkInManager23);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        boolean boolean21 = client0.confirmBooking("3b453211-7dd1-4452-8741-a206711c1217", "e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", (int) (short) 10, "848f508e-e1d2-4f02-9fc9-e95eee425d36", 10, "CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "Paid $ 0.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str1, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3" + "'", str10, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str11, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str12, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking11 = parkingSpace10.getCurrentBooking();
        ParkingSystem.ParkingLot parkingLot13 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking15 = null;
        boolean boolean16 = parkingLot13.assignBooking(0, booking15);
        boolean boolean18 = parkingLot13.isSpaceAvailable((int) '#');
        boolean boolean20 = parkingLot13.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace22 = parkingLot13.getParkingSpace((int) (byte) 10);
        ParkingSystem.ParkingLot parkingLot24 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking26 = null;
        boolean boolean27 = parkingLot24.assignBooking(0, booking26);
        boolean boolean29 = parkingLot24.isSpaceAvailable((int) '#');
        boolean boolean31 = parkingLot24.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace33 = parkingLot24.getParkingSpace((int) (byte) 10);
        int int34 = parkingSpace33.getSpaceId();
        ParkingSystem.Booking booking35 = parkingSpace33.getCurrentBooking();
        java.lang.String str36 = parkingSpace33.scanSpace();
        ParkingSystem.Enabled enabled37 = new ParkingSystem.Enabled();
        parkingSpace33.setState((ParkingSystem.SpaceState) enabled37);
        ParkingSystem.Disabled disabled39 = new ParkingSystem.Disabled();
        ParkingSystem.ParkingSpace parkingSpace40 = null;
        java.lang.String str41 = disabled39.scanSpace(parkingSpace40);
        ParkingSystem.Enabled enabled42 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot44 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking46 = null;
        boolean boolean47 = parkingLot44.assignBooking(0, booking46);
        boolean boolean49 = parkingLot44.isSpaceAvailable((int) '#');
        boolean boolean51 = parkingLot44.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace53 = parkingLot44.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking54 = parkingSpace53.getCurrentBooking();
        parkingSpace53.removeBooking();
        java.lang.String str56 = enabled42.scanSpace(parkingSpace53);
        ParkingSystem.ParkingLot parkingLot58 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking60 = null;
        boolean boolean61 = parkingLot58.assignBooking(0, booking60);
        boolean boolean63 = parkingLot58.isSpaceAvailable((int) '#');
        boolean boolean65 = parkingLot58.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace67 = parkingLot58.getParkingSpace((int) (byte) 10);
        int int68 = parkingSpace67.getSpaceId();
        ParkingSystem.Booking booking69 = parkingSpace67.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager70 = new ParkingSystem.SpaceManager();
        boolean boolean73 = spaceManager70.isSpaceAvailable("hi!", (int) '#');
        spaceManager70.toggleLot("disabled", false);
        ParkingSystem.Booking booking86 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean87 = spaceManager70.assignBooking("empty", (int) (short) 0, booking86);
        boolean boolean88 = parkingSpace67.assignBooking(booking86);
        java.lang.String str89 = enabled42.scanSpace(parkingSpace67);
        java.lang.String str90 = disabled39.scanSpace(parkingSpace67);
        java.lang.String str91 = enabled37.scanSpace(parkingSpace67);
        parkingSpace22.setState((ParkingSystem.SpaceState) enabled37);
        ParkingSystem.SpaceState spaceState93 = parkingSpace22.getState();
        parkingSpace10.setState(spaceState93);
        boolean boolean95 = parkingSpace10.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(parkingSpace22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(parkingSpace33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNull(booking35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "empty" + "'", str36, "empty");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(parkingSpace53);
        org.junit.Assert.assertNull(booking54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "empty" + "'", str56, "empty");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(parkingSpace67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertNull(booking69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "disabled" + "'", str89, "disabled");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "disabled" + "'", str90, "disabled");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "disabled" + "'", str91, "disabled");
        org.junit.Assert.assertNotNull(spaceState93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("hi!", false);
        parkingSpaceFacade0.toggleSpace("", "Paid $ -1.0 with Mobile Pay", true);
        ParkingSystem.BookingManager bookingManager9 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertNotNull(bookingManager9);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean21 = parkingSpaceProxy14.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean25 = parkingSpaceProxy14.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user0.parkingProxy = parkingSpaceProxy14;
        java.lang.Object obj27 = user0.user;
        java.lang.Object obj30 = user0.login("Card number should be 16 digits", "Card number should be 16 digits");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy31 = user0.parkingProxy;
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(parkingSpaceProxy31);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean7 = parkingSpaceProxy0.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean10 = parkingSpaceProxy0.extendBooking("pass", (int) (byte) 10);
        java.lang.Object obj13 = parkingSpaceProxy0.login("kYN6YZxC3k", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap3 = bookingManager0.getActiveBookings();
        double double6 = bookingManager0.calculateCost("CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (short) 0);
        double double8 = bookingManager0.getDeposit("83a51dc6-0c8f-4f21-ae40-68699828f95d");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 15.0d + "'", double6 == 15.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 15.0d + "'", double8 == 15.0d);
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean7 = bookingManager0.editBooking("Jane", "empty", 10);
        boolean boolean17 = bookingManager0.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        boolean boolean19 = bookingManager0.cancelBooking("Paid $ 1470.0 with Mobile Pay");
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        boolean boolean12 = accountRegistry9.requiresValidation("disabled");
        int int13 = accountRegistry9.getManagersSize();
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("disabled", "", "jane", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        accountRegistry15.validateClient("pass");
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Refunded total cost of $1.0", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", accountRegistry15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = null;
        superManager18.assignProxy(parkingSpaceProxy19);
        ParkingSystem.AccountRegistry accountRegistry21 = superManager18.getRegistry();
        int int22 = accountRegistry21.getManagersSize();
        ParkingSystem.Client client24 = accountRegistry21.getClient("CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj29 = parkingSpaceProxy26.login("empty", "Jane");
        parkingSpaceProxy26.validateClient("Jane");
        parkingSpaceProxy26.toggleSpace("", "staff", false);
        boolean boolean37 = parkingSpaceProxy26.cancelBooking("");
        parkingSpaceProxy26.toggleLot("Paid $ 10.0 with Mobile Pay", true);
        boolean boolean43 = parkingSpaceProxy26.extendBooking("Paid $ 100.0 with Mobile Pay", 1);
        accountRegistry21.assignProxyToManager("FNuxCiXmkP", parkingSpaceProxy26);
        boolean boolean48 = parkingSpaceProxy26.editBooking("0K5j4sX8PY", "CLT-ee40679d-6eaa-440b-8126-6ccceac50ddc", (int) (short) 10);
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(accountRegistry21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(client24);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        ParkingSystem.CSVManager cSVManager18 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList20 = cSVManager18.readCSV("");
        user0.user = strArrayList20;
        ParkingSystem.Client client22 = ParkingSystem.Client.getInstance();
        java.lang.String str23 = client22.getName();
        client22.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str32 = client22.getUsername();
        java.lang.String str33 = client22.getPassword();
        java.lang.String str34 = client22.getUsername();
        boolean boolean35 = client22.checkIn();
        client22.setClientInfo("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", true);
        boolean boolean46 = client22.editBooking("Card number should be 16 digits", (int) 'a');
        java.lang.String str47 = client22.getUsername();
        ParkingSystem.Booking booking48 = client22.getBookingDetails();
        user0.user = client22;
        java.lang.String str50 = client22.getUsername();
        boolean boolean53 = client22.editBooking("hi!", (int) (byte) 10);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArrayList20);
        org.junit.Assert.assertNotNull(client22);
// flaky "33) test2844(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "jane" + "'", str23, "jane");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "disabled" + "'", str33, "disabled");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7" + "'", str47, "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertNull(booking48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7" + "'", str50, "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.Client client3 = ParkingSystem.Client.getInstance();
        java.lang.String str4 = client3.getName();
        client3.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        boolean boolean10 = parkingSpaceProxy7.checkIn("");
        client3.assignProxy(parkingSpaceProxy7);
        boolean boolean12 = client3.cancelBooking();
        java.lang.String str13 = client3.getExtraId();
        java.lang.String str14 = client3.getName();
        client3.setClientInfo("pass", "empty", "Jane", "pass", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", false);
        cSVManager0.saveClient(client3);
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        java.lang.String str29 = superManager28.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = null;
        accountRegistry33.assignProxyToManager("disabled", parkingSpaceProxy36);
        superManager28.registry = accountRegistry33;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager28);
        ParkingSystem.AccountRegistry accountRegistry43 = null;
        ParkingSystem.SuperManager superManager44 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry43);
        java.lang.String str45 = superManager44.getName();
        ParkingSystem.AccountRegistry accountRegistry46 = superManager44.registry;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager44);
        java.util.List<java.lang.String[]> strArrayList49 = cSVManager0.readCSV("Refunded deposit of $1.0");
        org.junit.Assert.assertNotNull(strArray1);
// flaky "34) test2845(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "18) test2845(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(client3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str4, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str13, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str14, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertNotNull(superManager28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertNotNull(superManager44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52" + "'", str45, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        org.junit.Assert.assertNotNull(accountRegistry46);
        org.junit.Assert.assertNotNull(strArrayList49);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj6 = parkingSpaceProxy3.login("empty", "Jane");
        parkingSpaceProxy3.validateClient("Jane");
        parkingSpaceProxy3.toggleSpace("", "staff", false);
        accountRegistry1.assignProxyToManager("pass", parkingSpaceProxy3);
        boolean boolean15 = parkingSpaceProxy3.checkIn("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade16 = parkingSpaceProxy3.getFacade();
        boolean boolean22 = parkingSpaceProxy3.register("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "89de8237-29df-4908-9de4-6dc1ce90de94", "hi!", "Refunded total cost of $-1.0", "");
        parkingSpaceProxy3.toggleSpace("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", true);
        java.lang.Object obj29 = parkingSpaceProxy3.login("CLT-035180a0-4707-410d-a011-2a4f0f46838b", "Jane");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj29);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str23 = parkingSpaceFacade20.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager24 = parkingSpaceFacade20.getSpaceManager();
        spaceManager24.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap27 = spaceManager24.getParkingLots();
        user0.user = spaceManager24;
        java.lang.Object obj29 = null;
        user0.user = obj29;
        ParkingSystem.User user31 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy32 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj35 = parkingSpaceProxy32.login("empty", "Jane");
        parkingSpaceProxy32.validateClient("Jane");
        parkingSpaceProxy32.toggleSpace("", "staff", false);
        boolean boolean43 = parkingSpaceProxy32.cancelBooking("");
        user31.assignProxy(parkingSpaceProxy32);
        parkingSpaceProxy32.addParkingLot("staff");
        boolean boolean49 = parkingSpaceProxy32.extendBooking("Refunded total cost of $-1.0", (int) '#');
        boolean boolean51 = parkingSpaceProxy32.checkIn("Refunded total cost of $100.0");
        user0.user = parkingSpaceProxy32;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff" + "'", str6, "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(spaceManager24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        boolean boolean19 = parkingSpaceFacade17.checkOut("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.Booking booking21 = parkingSpaceFacade17.getBookingDetails("TXCrKOGD");
        boolean boolean31 = parkingSpaceFacade17.confirmBooking("CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "hi!", "721fcb72-c57d-4e99-81b7-06e4c7e1ed40", "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3", (int) (byte) 10, "CLT-55105d92-54d6-44d2-965a-736022b7f7cd", (int) (byte) 10, "aswfJGJtdF", "Refunded without deposit ($-15.0)");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff" + "'", str6, "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(booking21);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        java.lang.String str5 = paymentManager0.refundMessage;
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str12 = mobilePay6.getPaymentMessage();
        boolean boolean17 = mobilePay6.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str18 = mobilePay6.getPaymentMessage();
        java.lang.String str19 = mobilePay6.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay6);
        ParkingSystem.BookingManager bookingManager21 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager22 = new ParkingSystem.CheckInManager(bookingManager21);
        ParkingSystem.SpaceManager spaceManager23 = bookingManager21.getSpaceManager();
        double double26 = bookingManager21.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit27 = new ParkingSystem.DebitOrCredit();
        bookingManager21.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit27);
        boolean boolean33 = debitOrCredit27.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        boolean boolean38 = debitOrCredit27.processPayment("Jane", (double) 10.0f, "Card number should be 16 digits", "Jane");
        boolean boolean43 = debitOrCredit27.processPayment("TXCrKOGD", 495.0d, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "H33Itw4InT");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit27);
        boolean boolean49 = debitOrCredit27.processPayment("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (double) (-1), "lL3e2yIMXI", "848f508e-e1d2-4f02-9fc9-e95eee425d36");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str5, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str19, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(spaceManager23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 165.0d + "'", double26 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        parkingSpace11.removeBooking();
        ParkingSystem.Booking booking16 = parkingSpace11.getCurrentBooking();
        java.lang.String str17 = parkingSpace11.scanSpace();
        java.lang.String str18 = parkingSpace11.scanSpace();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "empty" + "'", str17, "empty");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "empty" + "'", str18, "empty");
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry15 = superManager4.getRegistry();
        ParkingSystem.Manager manager16 = accountRegistry15.autoGenerateManager();
        boolean boolean18 = accountRegistry15.requiresValidation("2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.Client client20 = accountRegistry15.getClient("89de8237-29df-4908-9de4-6dc1ce90de94");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertNotNull(manager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(client20);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        double double5 = bookingManager0.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean21 = mobilePay6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        ParkingSystem.Booking booking24 = bookingManager0.getBooking("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.Booking booking26 = bookingManager0.getBooking("pass");
        ParkingSystem.CheckInManager checkInManager27 = new ParkingSystem.CheckInManager(bookingManager0);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(booking24);
        org.junit.Assert.assertNull(booking26);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        boolean boolean3 = parkingLot1.isSpaceAvailable(35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        boolean boolean3 = parkingLot1.isSpaceAvailable((int) (short) 0);
        boolean boolean5 = parkingLot1.isSpaceAvailable(0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        spaceManager1.loadParkingLots();
        org.junit.Assert.assertNotNull(spaceManager1);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", (int) '#', "CLT-035180a0-4707-410d-a011-2a4f0f46838b", 52, "ST001", (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime8 = booking7.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'CLT-035180a0-4707-410d-a011-2a4f0f46838b' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        java.lang.String str8 = debitOrCredit6.getPaymentMessage();
        java.lang.String str9 = debitOrCredit6.getPaymentMessage();
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        ParkingSystem.User user13 = new ParkingSystem.User();
        java.lang.Object obj14 = user13.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        java.lang.String str23 = parkingSpaceProxy15.scanSpace("", "");
        parkingSpaceProxy15.toggleSpace("", "disabled", true);
        user13.parkingProxy = parkingSpaceProxy15;
        ParkingSystem.ParkingLot parkingLot30 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator31 = parkingLot30.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator32 = parkingLot30.getIterator();
        user13.user = parkingLot30;
        ParkingSystem.User user34 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj38 = parkingSpaceProxy35.login("empty", "Jane");
        parkingSpaceProxy35.validateClient("Jane");
        parkingSpaceProxy35.toggleSpace("", "staff", false);
        boolean boolean46 = parkingSpaceProxy35.cancelBooking("");
        user34.assignProxy(parkingSpaceProxy35);
        user13.user = parkingSpaceProxy35;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy49 = user13.parkingProxy;
        client0.assignProxy(parkingSpaceProxy49);
        parkingSpaceProxy49.validateClient("h40rNQ7kR1");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff" + "'", str1, "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator31);
        org.junit.Assert.assertNotNull(parkingLotIterator32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy49);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        java.lang.String str15 = superManager4.getPassword();
        // The following exception was thrown during execution in test generation
        try {
            superManager4.validateClient("Paid $ -1.0 with Mobile Pay");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"ParkingSystem.ParkingSpaceProxy.validateClient(String)\" because \"this.parkingProxy\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Refunded without deposit ($0.0)" + "'", str15, "Refunded without deposit ($0.0)");
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.PaymentManager paymentManager3 = new ParkingSystem.PaymentManager();
        java.lang.String str4 = paymentManager3.refundMessage;
        boolean boolean6 = paymentManager3.refundTotalCost((-1.0d));
        paymentManager3.refundMessage = "disabled";
        boolean boolean13 = paymentManager3.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        boolean boolean16 = paymentManager3.refundWithoutDeposit(165.0d, 10.0d);
        user0.user = boolean16;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy18 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy19 = user0.parkingProxy;
        ParkingSystem.User user20 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("");
        user20.assignProxy(parkingSpaceProxy21);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy34 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry35 = parkingSpaceProxy34.getRegistry();
        boolean boolean41 = parkingSpaceProxy34.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        boolean boolean45 = parkingSpaceProxy34.editBooking("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", 0);
        user20.parkingProxy = parkingSpaceProxy34;
        user0.parkingProxy = parkingSpaceProxy34;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade48 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str51 = parkingSpaceFacade48.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager52 = parkingSpaceFacade48.getSpaceManager();
        spaceManager52.addParkingLot("hi!");
        boolean boolean57 = spaceManager52.isSpaceAvailable("Paid $ 0.0 with Mobile Pay", (int) ' ');
        ParkingSystem.SpaceManager spaceManager60 = new ParkingSystem.SpaceManager();
        boolean boolean63 = spaceManager60.isSpaceAvailable("hi!", (int) '#');
        spaceManager60.toggleLot("disabled", false);
        ParkingSystem.Booking booking76 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean77 = spaceManager60.assignBooking("empty", (int) (short) 0, booking76);
        boolean boolean78 = booking76.isCheckedIn();
        java.lang.String str79 = booking76.getClientId();
        java.lang.String str80 = booking76.getStartTime();
        boolean boolean81 = spaceManager52.assignBooking("ST001", (int) ' ', booking76);
        booking76.setCheckedIn(true);
        int int84 = booking76.getSpaceId();
        user0.user = booking76;
        user0.register("disabled", "721fcb72-c57d-4e99-81b7-06e4c7e1ed40", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "qMzKSKOI", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(parkingSpaceProxy18);
        org.junit.Assert.assertNull(parkingSpaceProxy19);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(accountRegistry35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "disabled" + "'", str51, "disabled");
        org.junit.Assert.assertNotNull(spaceManager52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "staff" + "'", str79, "staff");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Jane" + "'", str80, "Jane");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager1 = parkingSpaceFacade0.getSpaceManager();
        ParkingSystem.Booking booking11 = new ParkingSystem.Booking("Paid $ 100.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", (int) (short) 1, "2afd610d-a8cb-413a-bbee-7927f86b526c", 32, "", 30.0d);
        boolean boolean12 = spaceManager1.assignBooking("Paid $ 0.0 with Mobile Pay", (int) (byte) 10, booking11);
        spaceManager1.toggleSpace("CLT-92729d37-9255-42b4-9361-c1978aadacb0", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", false);
        org.junit.Assert.assertNotNull(spaceManager1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = null;
        cSVManager0.loadParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        ParkingSystem.Manager manager12 = superManager11.autoGenerateManager();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager11);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        java.lang.String str19 = superManager18.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry20 = superManager18.registry;
        cSVManager0.saveManager((ParkingSystem.Manager) superManager18);
        java.lang.String str22 = superManager18.getPassword();
        ParkingSystem.User user23 = new ParkingSystem.User();
        java.lang.Object obj24 = user23.user;
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry37 = parkingSpaceProxy35.getRegistry();
        boolean boolean39 = parkingSpaceProxy35.checkIn("hi!");
        user23.parkingProxy = parkingSpaceProxy35;
        user23.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy47 = user23.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy48 = new ParkingSystem.ParkingSpaceProxy();
        user23.assignProxy(parkingSpaceProxy48);
        boolean boolean59 = parkingSpaceProxy48.confirmBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "09622cbf-e665-45db-b1ad-365065947a20", "Paid $ 15.0 with Mobile Pay", (int) (byte) -1, "Refunded without deposit ($0.0)", 0, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        superManager18.assignProxy(parkingSpaceProxy48);
        parkingSpaceProxy48.toggleLot("CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d", false);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertNotNull(manager12);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Refunded without deposit ($0.0)" + "'", str22, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "disabled" + "'", str26, "disabled");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy47);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.paymentMessage = "pass";
        java.lang.String str6 = paymentManager0.paymentMessage;
        ParkingSystem.BookingManager bookingManager7 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager8 = new ParkingSystem.CheckInManager(bookingManager7);
        ParkingSystem.SpaceManager spaceManager9 = bookingManager7.getSpaceManager();
        double double12 = bookingManager7.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit13 = new ParkingSystem.DebitOrCredit();
        bookingManager7.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit13);
        boolean boolean19 = debitOrCredit13.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str20 = debitOrCredit13.getPaymentMessage();
        boolean boolean25 = debitOrCredit13.processPayment("9701df9a-2178-4ad5-8076-46ff5f05b3e8", 0.0d, "disabled", "");
        boolean boolean28 = debitOrCredit13.validateCard("empty", (double) '4');
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit13);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pass" + "'", str6, "pass");
        org.junit.Assert.assertNotNull(spaceManager9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 165.0d + "'", double12 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Card number should be 16 digits" + "'", str20, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean4 = paymentManager0.refundWithoutDeposit((double) (short) 10, (double) '4');
        java.lang.String str5 = paymentManager0.refundMessage;
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str12 = mobilePay6.getPaymentMessage();
        boolean boolean17 = mobilePay6.processPayment("Jane", (double) 10L, "jane", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str18 = mobilePay6.getPaymentMessage();
        java.lang.String str19 = mobilePay6.getPaymentMessage();
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay6);
        ParkingSystem.BookingManager bookingManager21 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager22 = new ParkingSystem.CheckInManager(bookingManager21);
        ParkingSystem.SpaceManager spaceManager23 = bookingManager21.getSpaceManager();
        double double26 = bookingManager21.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit27 = new ParkingSystem.DebitOrCredit();
        bookingManager21.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit27);
        boolean boolean33 = debitOrCredit27.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        boolean boolean38 = debitOrCredit27.processPayment("Jane", (double) 10.0f, "Card number should be 16 digits", "Jane");
        boolean boolean43 = debitOrCredit27.processPayment("TXCrKOGD", 495.0d, "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "H33Itw4InT");
        paymentManager0.setStrategy((ParkingSystem.Strategy) debitOrCredit27);
        boolean boolean49 = debitOrCredit27.processPayment("staff", 0.0d, "I673kmcH", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        boolean boolean52 = debitOrCredit27.validateCard("CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", (double) 100L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Refunded without deposit ($-42.0)" + "'", str5, "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str12, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str18, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str19, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(spaceManager23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 165.0d + "'", double26 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        boolean boolean5 = bookingManager0.extendBooking("jane", (int) (short) -1, "", "Paid $ 10.0 with Mobile Pay");
        double double7 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.SpaceManager spaceManager8 = bookingManager0.getSpaceManager();
        ParkingSystem.Booking booking10 = bookingManager0.getBooking("09622cbf-e665-45db-b1ad-365065947a20");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 15.0d + "'", double7 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertNull(booking10);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        boolean boolean11 = client2.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        client2.assignProxy(parkingSpaceProxy12);
        ParkingSystem.AccountRegistry accountRegistry14 = parkingSpaceProxy12.getRegistry();
        boolean boolean16 = parkingSpaceProxy12.checkIn("hi!");
        user0.parkingProxy = parkingSpaceProxy12;
        user0.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy25 = new ParkingSystem.ParkingSpaceProxy();
        user0.assignProxy(parkingSpaceProxy25);
        boolean boolean36 = parkingSpaceProxy25.confirmBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "09622cbf-e665-45db-b1ad-365065947a20", "Paid $ 15.0 with Mobile Pay", (int) (byte) -1, "Refunded without deposit ($0.0)", 0, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        boolean boolean42 = parkingSpaceProxy25.register("02659ad3-0b5c-4c48-a915-a466f2b50775", "5XQfkf24zK", "", "ua4ppOLtSl", "25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        parkingSpaceProxy25.displayPendingValidations();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Card number should be 16 digits" + "'", str3, "Card number should be 16 digits");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(accountRegistry14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy24);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getClientType();
        boolean boolean13 = client0.getIsValidated();
        boolean boolean14 = client0.cancelBooking();
        ParkingSystem.Booking booking15 = client0.getBookingDetails();
        boolean boolean17 = client0.extendBooking(0);
        boolean boolean19 = client0.extendBooking((int) (byte) -1);
        boolean boolean22 = client0.editBooking("Refunded deposit of $1.0", 3);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "02659ad3-0b5c-4c48-a915-a466f2b50775" + "'", str1, "02659ad3-0b5c-4c48-a915-a466f2b50775");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(booking15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean3 = checkInManager1.checkOut("");
        checkInManager1.refundMessage = "staff";
        boolean boolean7 = checkInManager1.checkIn("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        boolean boolean9 = checkInManager1.checkOut("Card number should be 16 digits");
        checkInManager1.refundMessage = "CLT-30fd593b-dedd-41b3-a919-c48700301f41";
        boolean boolean13 = checkInManager1.checkIn("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        boolean boolean15 = checkInManager1.checkIn("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        boolean boolean17 = checkInManager1.checkIn("kYN6YZxC3k");
        checkInManager1.refundMessage = "Jane";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap8 = accountRegistry6.getManagers();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry6);
        ParkingSystem.Client client11 = accountRegistry6.getClient("4a1f2343-8b2e-4dea-ba69-efd105414390");
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNull(client11);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.removeBooking("disabled", 10);
        spaceManager0.toggleLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41", false);
        boolean boolean12 = spaceManager0.isSpaceAvailable("Paid $ 100.0 with Mobile Pay", 3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        ParkingSystem.Enabled enabled0 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot2 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot2.assignBooking(0, booking4);
        boolean boolean7 = parkingLot2.isSpaceAvailable((int) '#');
        boolean boolean9 = parkingLot2.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot2.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking12 = parkingSpace11.getCurrentBooking();
        parkingSpace11.removeBooking();
        java.lang.String str14 = enabled0.scanSpace(parkingSpace11);
        ParkingSystem.Enabled enabled15 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking19 = null;
        boolean boolean20 = parkingLot17.assignBooking(0, booking19);
        boolean boolean22 = parkingLot17.isSpaceAvailable((int) '#');
        boolean boolean24 = parkingLot17.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace26 = parkingLot17.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking27 = parkingSpace26.getCurrentBooking();
        parkingSpace26.removeBooking();
        java.lang.String str29 = enabled15.scanSpace(parkingSpace26);
        java.lang.String str30 = enabled0.scanSpace(parkingSpace26);
        ParkingSystem.ParkingSpace parkingSpace32 = new ParkingSystem.ParkingSpace((int) (short) 0);
        java.lang.String str33 = enabled0.scanSpace(parkingSpace32);
        ParkingSystem.ParkingSpace parkingSpace35 = new ParkingSystem.ParkingSpace((int) (short) -1);
        java.lang.String str36 = parkingSpace35.scanSpace();
        java.lang.String str37 = enabled0.scanSpace(parkingSpace35);
        ParkingSystem.Booking booking38 = parkingSpace35.getCurrentBooking();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "empty" + "'", str14, "empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(parkingSpace26);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "empty" + "'", str29, "empty");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "empty" + "'", str30, "empty");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "empty" + "'", str33, "empty");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "empty" + "'", str36, "empty");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "empty" + "'", str37, "empty");
        org.junit.Assert.assertNull(booking38);
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        boolean boolean10 = client0.checkIn();
        java.lang.String str11 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = user0.parkingProxy;
        java.lang.Object obj20 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-f02c481e-1504-4abf-b598-76152da8586a");
        java.lang.Object obj21 = user0.user;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceProxy17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("disabled", 100);
        spaceManager0.loadParkingLots();
        java.lang.String str7 = spaceManager0.scanSpace("0K5j4sX8PY", "Paid $ 15.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "disabled" + "'", str7, "disabled");
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        ParkingSystem.SpaceManager spaceManager18 = bookingManager0.getSpaceManager();
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(spaceManager18);
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        boolean boolean11 = client0.extendBooking(100);
        client0.setValidated(true);
        ParkingSystem.Booking booking14 = client0.getBookingDetails();
        boolean boolean15 = client0.getIsValidated();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(booking14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        java.util.List<ParkingSystem.Client> clientList31 = accountRegistry24.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry34 = parkingSpaceProxy33.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj39 = parkingSpaceProxy36.login("empty", "Jane");
        parkingSpaceProxy36.validateClient("Jane");
        parkingSpaceProxy36.toggleSpace("", "staff", false);
        accountRegistry34.assignProxyToManager("pass", parkingSpaceProxy36);
        accountRegistry24.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy36);
        java.lang.Object obj50 = parkingSpaceProxy36.login("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        ParkingSystem.AccountRegistry accountRegistry51 = parkingSpaceProxy36.getRegistry();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(clientList31);
        org.junit.Assert.assertNotNull(accountRegistry34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(accountRegistry51);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        boolean boolean18 = debitOrCredit6.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean21 = debitOrCredit6.validateCard("Jane", (double) '4');
        java.lang.String str22 = debitOrCredit6.getPaymentMessage();
        boolean boolean27 = debitOrCredit6.processPayment("SRiN5ev00N", (double) ' ', "", "Jane");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Card number should be 16 digits" + "'", str22, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade1 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager2 = parkingSpaceFacade1.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager3 = parkingSpaceFacade1.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap4 = spaceManager3.getParkingLots();
        cSVManager0.loadParkingLots(strMap4);
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str13 = spaceManager7.scanSpace("disabled", "");
        spaceManager7.toggleSpace("Refunded without deposit ($0.0)", "disabled", false);
        spaceManager7.removeBooking("qPYDfDnbtD", (int) (byte) 1);
        spaceManager7.removeBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (byte) 100);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap24 = spaceManager7.getParkingLots();
        cSVManager0.saveParkingLots(strMap24);
        ParkingSystem.AccountRegistry accountRegistry29 = null;
        ParkingSystem.SuperManager superManager30 = ParkingSystem.SuperManager.createFromCSV("disabled", "staff", "staff", accountRegistry29);
        superManager30.displayPendingValidations();
        cSVManager0.saveManager((ParkingSystem.Manager) superManager30);
        org.junit.Assert.assertNotNull(checkInManager2);
        org.junit.Assert.assertNotNull(spaceManager3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strArray6);
// flaky "35) test2879(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "disabled" + "'", str13, "disabled");
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(superManager30);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj3 = parkingSpaceProxy0.login("empty", "Jane");
        boolean boolean6 = parkingSpaceProxy0.extendBooking("pass", 0);
        parkingSpaceProxy0.toggleSpace("", "staff", false);
        parkingSpaceProxy0.addParkingLot("Refunded without deposit ($0.0)");
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        java.util.List<java.lang.String[]> strArrayList4 = cSVManager0.readCSV("Jane");
        java.lang.String[] strArray5 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray6 = cSVManager0.loadSuperManager();
        ParkingSystem.CSVManager cSVManager7 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList9 = cSVManager7.readCSV("");
        java.util.List<java.lang.String[]> strArrayList11 = cSVManager7.readCSV("Jane");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap12 = null;
        cSVManager7.loadParkingLots(strMap12);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        ParkingSystem.Manager manager19 = superManager18.autoGenerateManager();
        cSVManager7.saveManager((ParkingSystem.Manager) superManager18);
        ParkingSystem.SpaceManager spaceManager21 = new ParkingSystem.SpaceManager();
        boolean boolean24 = spaceManager21.isSpaceAvailable("hi!", (int) '#');
        spaceManager21.toggleLot("disabled", false);
        ParkingSystem.Booking booking37 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean38 = spaceManager21.assignBooking("empty", (int) (short) 0, booking37);
        spaceManager21.loadParkingLots();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap40 = spaceManager21.getParkingLots();
        cSVManager7.loadParkingLots(strMap40);
        ParkingSystem.SpaceManager spaceManager42 = new ParkingSystem.SpaceManager();
        boolean boolean45 = spaceManager42.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str48 = spaceManager42.scanSpace("disabled", "");
        spaceManager42.addParkingLot("hi!");
        java.lang.String str53 = spaceManager42.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap54 = spaceManager42.getParkingLots();
        cSVManager7.saveParkingLots(strMap54);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade56 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str59 = parkingSpaceFacade56.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager60 = parkingSpaceFacade56.getSpaceManager();
        spaceManager60.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap63 = spaceManager60.getParkingLots();
        cSVManager7.saveParkingLots(strMap63);
        cSVManager0.loadParkingLots(strMap63);
        java.util.List<java.lang.String[]> strArrayList67 = cSVManager0.readCSV("06b0adae-5a80-41cd-b7f6-6da51afdd4f5");
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(strArrayList4);
        org.junit.Assert.assertNotNull(strArray5);
// flaky "36) test2881(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray5, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray6);
// flaky "19) test2881(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray6, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArrayList9);
        org.junit.Assert.assertNotNull(strArrayList11);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(manager19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "disabled" + "'", str48, "disabled");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "disabled" + "'", str53, "disabled");
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "disabled" + "'", str59, "disabled");
        org.junit.Assert.assertNotNull(spaceManager60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strArrayList67);
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.refundMessage = "";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (byte) 1);
        paymentManager0.paymentMessage = "Paid $ 100.0 with Mobile Pay";
        boolean boolean9 = paymentManager0.refundWithoutDeposit((double) 1L, (double) 'a');
        java.lang.String str10 = paymentManager0.paymentMessage;
        boolean boolean15 = paymentManager0.processPayment("disabled", (double) (short) 1, "ST001", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.MobilePay mobilePay16 = new ParkingSystem.MobilePay();
        boolean boolean21 = mobilePay16.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean26 = mobilePay16.processPayment("jane", 15.0d, "jane", "");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay16);
        boolean boolean29 = paymentManager0.refundTotalCost((double) 0L);
        paymentManager0.paymentMessage = "13b04414-31a5-407f-8ea3-fba4613c73d1";
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str10, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("86z9Z9e0MN");
        parkingLot1.removeBooking(1);
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        java.lang.String[] strArray30 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade31 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager32 = parkingSpaceFacade31.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap33 = spaceManager32.getParkingLots();
        cSVManager0.saveParkingLots(strMap33);
        ParkingSystem.Client client35 = ParkingSystem.Client.getInstance();
        java.lang.String str36 = client35.getName();
        client35.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str45 = client35.getUsername();
        java.lang.String str46 = client35.getPassword();
        java.lang.String str47 = client35.getUsername();
        java.lang.String str48 = client35.getPassword();
        cSVManager0.saveClient(client35);
        java.lang.String[] strArray50 = cSVManager0.loadSuperManager();
        org.junit.Assert.assertNotNull(strArray1);
// flaky "37) test2884(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "20) test2884(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray30);
// flaky "10) test2884(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray30, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(client35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "disabled" + "'", str46, "disabled");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "disabled" + "'", str48, "disabled");
        org.junit.Assert.assertNotNull(strArray50);
// flaky "7) test2884(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray50, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        spaceManager8.removeBooking("09622cbf-e665-45db-b1ad-365065947a20", (-1));
        spaceManager8.toggleSpace("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", "cf448544-0e6d-4a41-94c2-e67f848ae8df", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry6 = superManager4.registry;
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap7 = accountRegistry6.getManagers();
        ParkingSystem.Client client9 = ParkingSystem.Client.getInstance();
        java.lang.String str10 = client9.getName();
        client9.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str19 = client9.getUsername();
        java.lang.String str20 = client9.getPassword();
        java.lang.String str21 = client9.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy22 = null;
        client9.assignProxy(parkingSpaceProxy22);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy24 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj27 = parkingSpaceProxy24.login("empty", "Jane");
        client9.assignProxy(parkingSpaceProxy24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking31 = parkingSpaceProxy29.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry32 = parkingSpaceProxy29.getRegistry();
        parkingSpaceProxy29.autoGenerateManager();
        client9.assignProxy(parkingSpaceProxy29);
        boolean boolean38 = parkingSpaceProxy29.editBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded total cost of $100.0", (int) (byte) 0);
        accountRegistry6.assignProxyToManager("Paid $ 100.0 with Mobile Pay", parkingSpaceProxy29);
        ParkingSystem.Client client41 = accountRegistry6.getClient("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        ParkingSystem.Client client43 = accountRegistry6.getClient("Refunded without deposit ($1.0)");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(accountRegistry6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(client9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "disabled" + "'", str20, "disabled");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertNotNull(accountRegistry32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(client41);
        org.junit.Assert.assertNull(client43);
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getHourlyRate("4a1f2343-8b2e-4dea-ba69-efd105414390");
        boolean boolean21 = bookingManager0.extendBooking("", (int) (byte) 10, "Paid $ 1470.0 with Mobile Pay", "Paid $ 15.0 with Mobile Pay");
        ParkingSystem.SpaceManager spaceManager22 = bookingManager0.getSpaceManager();
        double double25 = bookingManager0.calculateCost("CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb", (int) (short) 100);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(spaceManager22);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1515.0d + "'", double25 == 1515.0d);
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        int int32 = booking29.getSpaceId();
        boolean boolean33 = booking29.isCheckedIn();
        int int34 = booking29.getSpaceId();
        booking29.setStartTime("CLT-f5f3129f-6f77-4a04-a68b-486f89449455");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.SpaceManager spaceManager2 = bookingManager0.getSpaceManager();
        double double5 = bookingManager0.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit6 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit6);
        boolean boolean12 = debitOrCredit6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str13 = debitOrCredit6.getPaymentMessage();
        java.lang.String str14 = debitOrCredit6.getPaymentMessage();
        boolean boolean19 = debitOrCredit6.processPayment("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (double) 100L, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "0b35479f-5869-423e-9abc-e4ab9cef903d");
        boolean boolean22 = debitOrCredit6.validateCard("e8686ac8-1df7-4a9b-b299-8fbcdd585528", (double) 10);
        java.lang.String str23 = debitOrCredit6.getPaymentMessage();
        boolean boolean28 = debitOrCredit6.processPayment("8bf217fa-1769-4d04-858b-ce78fe94bf0c", 795.0d, "CLT-f02c481e-1504-4abf-b598-76152da8586a", "721fcb72-c57d-4e99-81b7-06e4c7e1ed40");
        org.junit.Assert.assertNotNull(spaceManager2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 165.0d + "'", double5 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Card number should be 16 digits" + "'", str13, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Card number should be 16 digits" + "'", str14, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Card number should be 16 digits" + "'", str23, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.AccountRegistry accountRegistry10 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager11 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry10);
        java.lang.String str12 = superManager11.getManagerId();
        java.lang.String str13 = superManager11.getManagerId();
        ParkingSystem.Manager manager14 = superManager11.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry15 = superManager11.registry;
        java.lang.String str16 = superManager11.getManagerId();
        ParkingSystem.BookingManager bookingManager17 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager18 = new ParkingSystem.CheckInManager(bookingManager17);
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager17.getAccountRegistry();
        superManager11.registry = accountRegistry19;
        ParkingSystem.Manager manager21 = accountRegistry19.autoGenerateManager();
        manager21.validateClient("empty");
        cSVManager0.saveManager(manager21);
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str35 = client25.getUsername();
        java.lang.String str36 = client25.getPassword();
        client25.setValidated(true);
        java.lang.String str39 = client25.getPassword();
        java.lang.String str40 = client25.getPassword();
        boolean boolean43 = client25.editBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b", (int) (short) -1);
        cSVManager0.saveClient(client25);
        boolean boolean52 = client25.confirmBooking("fhd49ADb", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", 35, "e8686ac8-1df7-4a9b-b299-8fbcdd585528", (int) (byte) 100, "pass", "CLT-3ec6d712-8a64-40d1-bda2-2cbb8012a753");
        org.junit.Assert.assertNotNull(strArray1);
// flaky "38) test2890(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "21) test2890(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(superManager11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(manager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(manager21);
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "disabled" + "'", str36, "disabled");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "disabled" + "'", str39, "disabled");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "disabled" + "'", str40, "disabled");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        parkingLot1.removeBooking(2);
        ParkingSystem.ParkingLotIterator parkingLotIterator4 = parkingLot1.getIterator();
        org.junit.Assert.assertNotNull(parkingLotIterator4);
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        boolean boolean4 = client0.editBooking("jane", (int) (short) 0);
        ParkingSystem.Booking booking5 = client0.getBookingDetails();
        java.lang.String str6 = client0.getUsername();
        ParkingSystem.Client client7 = ParkingSystem.Client.getInstance();
        java.lang.String str8 = client7.getName();
        client7.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy11 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry12 = parkingSpaceProxy11.getRegistry();
        boolean boolean14 = parkingSpaceProxy11.checkIn("");
        client7.assignProxy(parkingSpaceProxy11);
        boolean boolean16 = client7.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy17 = new ParkingSystem.ParkingSpaceProxy();
        client7.assignProxy(parkingSpaceProxy17);
        ParkingSystem.AccountRegistry accountRegistry19 = parkingSpaceProxy17.getRegistry();
        boolean boolean21 = parkingSpaceProxy17.checkIn("jane");
        java.lang.Object obj24 = parkingSpaceProxy17.login("02659ad3-0b5c-4c48-a915-a466f2b50775", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841");
        client0.assignProxy(parkingSpaceProxy17);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(client7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(accountRegistry12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.AccountRegistry accountRegistry2 = bookingManager0.getAccountRegistry();
        ParkingSystem.CheckInManager checkInManager3 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager4 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean6 = checkInManager4.checkIn("CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb");
        org.junit.Assert.assertNotNull(accountRegistry2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getClientId();
        boolean boolean11 = client0.getIsValidated();
        java.lang.String str12 = client0.getExtraId();
        ParkingSystem.Booking booking13 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(booking13);
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.AccountRegistry accountRegistry4 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager5 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry4);
        boolean boolean7 = accountRegistry4.requiresValidation("disabled");
        int int8 = accountRegistry4.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj13 = parkingSpaceProxy10.login("empty", "Jane");
        parkingSpaceProxy10.validateClient("Jane");
        parkingSpaceProxy10.toggleSpace("", "staff", false);
        boolean boolean21 = parkingSpaceProxy10.cancelBooking("Jane");
        accountRegistry4.assignProxyToClient("pass", parkingSpaceProxy10);
        boolean boolean28 = parkingSpaceProxy10.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean34 = parkingSpaceProxy10.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        user0.parkingProxy = parkingSpaceProxy10;
        java.lang.Object obj38 = user0.login("CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188", "Refunded total cost of $100.0");
        org.junit.Assert.assertNotNull(superManager5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", 10, "staff", (int) (short) 0, "433f3d1f-f758-4ae3-972b-7fb179aedfd7", (double) ' ');
        int int8 = booking7.getSpaceId();
        booking7.setDuration(4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        boolean boolean3 = parkingSpaceProxy0.checkIn("");
        parkingSpaceProxy0.toggleLot("", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade7 = parkingSpaceProxy0.getFacade();
        boolean boolean11 = parkingSpaceFacade7.editBooking("433f3d1f-f758-4ae3-972b-7fb179aedfd7", "Card number should be 16 digits", (int) (byte) 100);
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double17 = bookingManager0.getHourlyRate("Paid $ 0.0 with Mobile Pay");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap18 = bookingManager0.getActiveBookings();
        ParkingSystem.BookingManager bookingManager19 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager19);
        ParkingSystem.SpaceManager spaceManager21 = bookingManager19.getSpaceManager();
        double double24 = bookingManager19.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit25 = new ParkingSystem.DebitOrCredit();
        bookingManager19.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit25);
        boolean boolean31 = debitOrCredit25.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str32 = debitOrCredit25.getPaymentMessage();
        boolean boolean35 = debitOrCredit25.validateCard("pass", (double) 100.0f);
        boolean boolean40 = debitOrCredit25.processPayment("", (double) 1, "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Refunded without deposit ($-42.0)");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit25);
        ParkingSystem.Booking booking43 = bookingManager0.getBooking("Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 15.0d + "'", double17 == 15.0d);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 165.0d + "'", double24 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Card number should be 16 digits" + "'", str32, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(booking43);
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        double double8 = booking7.getTotalCost();
        int int9 = booking7.getDuration();
        double double10 = booking7.getTotalCost();
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        java.lang.String str21 = superManager19.getManagerId();
        java.lang.String str22 = superManager19.getPassword();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager19.registry;
        ParkingSystem.User user25 = new ParkingSystem.User();
        java.lang.Object obj26 = user25.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = user25.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy28 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry29 = parkingSpaceProxy28.getRegistry();
        java.lang.String str32 = parkingSpaceProxy28.scanSpace("empty", "hi!");
        boolean boolean42 = parkingSpaceProxy28.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy28.autoGenerateManager();
        user25.user = parkingSpaceProxy28;
        accountRegistry23.assignProxyToClient("Refunded without deposit ($-96.0)", parkingSpaceProxy28);
        int int46 = accountRegistry23.getManagersSize();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Refunded without deposit ($0.0)" + "'", str22, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(parkingSpaceProxy27);
        org.junit.Assert.assertNotNull(accountRegistry29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "disabled" + "'", str32, "disabled");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = null;
        accountRegistry3.assignProxyToClient("", parkingSpaceProxy8);
        java.util.List<ParkingSystem.Client> clientList10 = accountRegistry3.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry13 = parkingSpaceProxy12.getRegistry();
        java.lang.String str16 = parkingSpaceProxy12.scanSpace("empty", "hi!");
        boolean boolean26 = parkingSpaceProxy12.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean30 = parkingSpaceProxy12.editBooking("pass", "2afd610d-a8cb-413a-bbee-7927f86b526c", (int) (byte) 100);
        accountRegistry3.assignProxyToManager("", parkingSpaceProxy12);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap32 = accountRegistry3.getManagers();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(clientList10);
        org.junit.Assert.assertNotNull(accountRegistry13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager0.loadParkingLots(strMap6);
        ParkingSystem.Client client8 = ParkingSystem.Client.getInstance();
        java.lang.String str9 = client8.getClientType();
        cSVManager0.saveClient(client8);
        java.lang.String str11 = client8.getName();
        client8.setClientInfo("aswfJGJtdF", "8812812f-8c58-440e-9188-ca0b1f996ced", "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", "empty", "", "Refunded without deposit ($0.0)", true);
        java.lang.String str20 = client8.getExtraId();
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "jane" + "'", str9, "jane");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str11, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Refunded without deposit ($0.0)" + "'", str20, "Refunded without deposit ($0.0)");
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean3 = parkingSpaceFacade0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (byte) -1);
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("staff", false);
        boolean boolean10 = parkingSpaceFacade0.extendBooking("Refunded without deposit ($-15.0)", 2);
        java.lang.String str13 = parkingSpaceFacade0.scanSpace("Refunded deposit of $1.0", "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "disabled" + "'", str13, "disabled");
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        boolean boolean18 = booking16.isCheckedIn();
        booking16.setCheckedIn(true);
        java.lang.String str21 = booking16.getLotId();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "jane" + "'", str21, "jane");
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        ParkingSystem.Booking booking16 = bookingManager0.getBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        ParkingSystem.SpaceManager spaceManager17 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager18 = bookingManager0.getSpaceManager();
        double double20 = bookingManager0.getHourlyRate("CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(spaceManager17);
        org.junit.Assert.assertNotNull(spaceManager18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 15.0d + "'", double20 == 15.0d);
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.PaymentManager paymentManager21 = new ParkingSystem.PaymentManager();
        java.lang.String str22 = paymentManager21.refundMessage;
        boolean boolean24 = paymentManager21.refundTotalCost((-1.0d));
        paymentManager21.refundMessage = "disabled";
        boolean boolean31 = paymentManager21.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        ParkingSystem.MobilePay mobilePay32 = new ParkingSystem.MobilePay();
        boolean boolean37 = mobilePay32.processPayment("disabled", 10.0d, "disabled", "disabled");
        java.lang.String str38 = mobilePay32.getPaymentMessage();
        java.lang.String str39 = mobilePay32.getPaymentMessage();
        paymentManager21.setStrategy((ParkingSystem.Strategy) mobilePay32);
        user0.user = paymentManager21;
        boolean boolean46 = paymentManager21.processPayment("empty", (double) (byte) 1, "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Paid $ -1.0 with Mobile Pay");
        boolean boolean48 = paymentManager21.refundTotalCost(30.0d);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str38, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str39, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime32 = booking29.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        boolean boolean23 = bookingManager0.extendBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", 0, "", "Jane");
        double double25 = bookingManager0.getHourlyRate("CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        boolean boolean29 = bookingManager0.editBooking("2d0fc45e-f79a-4bfb-ba07-3322876cac6b", "Refunded without deposit ($0.0)", 10);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 15.0d + "'", double25 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager13 = new ParkingSystem.SpaceManager();
        boolean boolean16 = spaceManager13.isSpaceAvailable("hi!", (int) '#');
        spaceManager13.toggleLot("disabled", false);
        ParkingSystem.Booking booking29 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean30 = spaceManager13.assignBooking("empty", (int) (short) 0, booking29);
        boolean boolean31 = parkingSpace10.assignBooking(booking29);
        ParkingSystem.SpaceManager spaceManager32 = new ParkingSystem.SpaceManager();
        boolean boolean35 = spaceManager32.isSpaceAvailable("hi!", (int) '#');
        spaceManager32.toggleLot("disabled", false);
        ParkingSystem.Booking booking48 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean49 = spaceManager32.assignBooking("empty", (int) (short) 0, booking48);
        boolean boolean50 = booking48.isCheckedIn();
        java.lang.String str51 = booking48.getClientId();
        boolean boolean52 = parkingSpace10.assignBooking(booking48);
        ParkingSystem.SpaceState spaceState53 = parkingSpace10.getState();
        ParkingSystem.SpaceState spaceState54 = parkingSpace10.getState();
        ParkingSystem.Booking booking55 = parkingSpace10.getCurrentBooking();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "staff" + "'", str51, "staff");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(spaceState53);
        org.junit.Assert.assertNotNull(spaceState54);
        org.junit.Assert.assertNotNull(booking55);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        client0.setClientInfo("Jane", "", "pass", "pass", "pass", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj13 = parkingSpaceProxy10.login("empty", "Jane");
        parkingSpaceProxy10.validateClient("Jane");
        parkingSpaceProxy10.toggleSpace("", "staff", false);
        boolean boolean21 = parkingSpaceProxy10.cancelBooking("");
        boolean boolean27 = parkingSpaceProxy10.register("jane", "jane", "Jane", "hi!", "disabled");
        client0.assignProxy(parkingSpaceProxy10);
        boolean boolean29 = client0.cancelBooking();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc" + "'", str1, "CLT-d7ac7477-2083-415e-84c8-8e0763f03efc");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        parkingSpaceFacade9.toggleLot("83a51dc6-0c8f-4f21-ae40-68699828f95d", false);
        boolean boolean16 = parkingSpaceFacade9.cancelBooking("Refunded without deposit ($-42.0)");
        boolean boolean26 = parkingSpaceFacade9.confirmBooking("CLT-f5f3129f-6f77-4a04-a68b-486f89449455", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", 100, "WxoDOyjI", 32, "848f508e-e1d2-4f02-9fc9-e95eee425d36", "8de59b10-a65c-4d90-b56c-a637505ce1de");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        ParkingSystem.AccountRegistry accountRegistry3 = null;
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Jane", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry5 = superManager4.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry12 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager13 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry12);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap14 = accountRegistry12.getManagers();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("Paid $ 10.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "disabled", accountRegistry12);
        int int16 = accountRegistry12.getManagersSize();
        ParkingSystem.AccountRegistry accountRegistry21 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry21);
        java.lang.String str23 = superManager22.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy30 = null;
        accountRegistry27.assignProxyToManager("disabled", parkingSpaceProxy30);
        superManager22.registry = accountRegistry27;
        ParkingSystem.AccountRegistry accountRegistry33 = superManager22.getRegistry();
        ParkingSystem.Manager manager34 = accountRegistry33.autoGenerateManager();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry37 = parkingSpaceProxy36.getRegistry();
        boolean boolean43 = parkingSpaceProxy36.register("empty", "disabled", "Paid $ 10.0 with Mobile Pay", "empty", "jane");
        parkingSpaceProxy36.toggleLot("hi!", false);
        accountRegistry33.assignProxyToClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", parkingSpaceProxy36);
        ParkingSystem.User user49 = new ParkingSystem.User();
        java.lang.Object obj50 = user49.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy51 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj54 = parkingSpaceProxy51.login("empty", "Jane");
        parkingSpaceProxy51.validateClient("Jane");
        java.lang.String str59 = parkingSpaceProxy51.scanSpace("", "");
        parkingSpaceProxy51.toggleSpace("", "disabled", true);
        user49.parkingProxy = parkingSpaceProxy51;
        ParkingSystem.ParkingLot parkingLot66 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator67 = parkingLot66.getIterator();
        ParkingSystem.ParkingLotIterator parkingLotIterator68 = parkingLot66.getIterator();
        user49.user = parkingLot66;
        ParkingSystem.User user70 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy71 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj74 = parkingSpaceProxy71.login("empty", "Jane");
        parkingSpaceProxy71.validateClient("Jane");
        parkingSpaceProxy71.toggleSpace("", "staff", false);
        boolean boolean82 = parkingSpaceProxy71.cancelBooking("");
        user70.assignProxy(parkingSpaceProxy71);
        user49.user = parkingSpaceProxy71;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy85 = user49.parkingProxy;
        parkingSpaceProxy85.addParkingLot("pass");
        accountRegistry33.assignProxyToManager("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", parkingSpaceProxy85);
        accountRegistry12.assignProxyToClient("13b04414-31a5-407f-8ea3-fba4613c73d1", parkingSpaceProxy85);
        superManager4.assignProxy(parkingSpaceProxy85);
        java.lang.String str91 = superManager4.getPassword();
        ParkingSystem.AccountRegistry accountRegistry92 = superManager4.getRegistry();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertNotNull(superManager13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(superManager22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(superManager28);
        org.junit.Assert.assertNotNull(accountRegistry33);
        org.junit.Assert.assertNotNull(manager34);
        org.junit.Assert.assertNotNull(accountRegistry37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "disabled" + "'", str59, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator67);
        org.junit.Assert.assertNotNull(parkingLotIterator68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(parkingSpaceProxy85);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Refunded without deposit ($0.0)" + "'", str91, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertNotNull(accountRegistry92);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        paymentManager0.paymentMessage = "staff";
        boolean boolean4 = paymentManager0.refundTotalCost((double) (short) 0);
        boolean boolean7 = paymentManager0.refundWithoutDeposit(0.0d, 15.0d);
        boolean boolean9 = paymentManager0.refundDeposit((double) (short) 0);
        boolean boolean11 = paymentManager0.refundDeposit((double) (-1L));
        boolean boolean13 = paymentManager0.refundDeposit((double) 'a');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        cSVManager0.updateClientValidation("empty", false);
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry15 = parkingSpaceProxy14.getRegistry();
        boolean boolean17 = parkingSpaceProxy14.checkIn("");
        client4.assignProxy(parkingSpaceProxy14);
        cSVManager0.saveClient(client4);
        client4.setClientInfo("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", "Paid $ -1.0 with Mobile Pay", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "disabled", true);
        boolean boolean29 = client4.extendBooking((int) (byte) 100);
        ParkingSystem.Booking booking30 = client4.getBookingDetails();
        boolean boolean31 = client4.cancelBooking();
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "empty" + "'", str5, "empty");
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(booking30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        java.util.List<ParkingSystem.Client> clientList31 = accountRegistry24.displayPendingValidations();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy33 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry34 = parkingSpaceProxy33.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj39 = parkingSpaceProxy36.login("empty", "Jane");
        parkingSpaceProxy36.validateClient("Jane");
        parkingSpaceProxy36.toggleSpace("", "staff", false);
        accountRegistry34.assignProxyToManager("pass", parkingSpaceProxy36);
        accountRegistry24.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy36);
        ParkingSystem.Manager manager48 = accountRegistry24.autoGenerateManager();
        ParkingSystem.Client client50 = accountRegistry24.getClient("Refunded total cost of $10.0");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertNotNull(clientList31);
        org.junit.Assert.assertNotNull(accountRegistry34);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(manager48);
        org.junit.Assert.assertNull(client50);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        ParkingSystem.Booking booking14 = null;
        boolean boolean15 = spaceManager0.assignBooking("", 100, booking14);
        spaceManager0.removeBooking("3b453211-7dd1-4452-8741-a206711c1217", 0);
        ParkingSystem.BookingManager bookingManager21 = new ParkingSystem.BookingManager();
        double double24 = bookingManager21.calculateCost("", 0);
        boolean boolean28 = bookingManager21.editBooking("Jane", "empty", 10);
        boolean boolean38 = bookingManager21.confirmBooking("pass", "disabled", "pass", "staff", (int) (short) 1, "empty", (int) '#', "hi!", "empty");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap39 = bookingManager21.getActiveBookings();
        ParkingSystem.SpaceManager spaceManager40 = bookingManager21.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager43 = new ParkingSystem.SpaceManager();
        spaceManager43.toggleLot("Jane", false);
        spaceManager43.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager52 = new ParkingSystem.SpaceManager();
        boolean boolean55 = spaceManager52.isSpaceAvailable("hi!", (int) '#');
        spaceManager52.toggleLot("disabled", false);
        ParkingSystem.Booking booking68 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean69 = spaceManager52.assignBooking("empty", (int) (short) 0, booking68);
        boolean boolean70 = spaceManager43.assignBooking("hi!", 0, booking68);
        double double71 = booking68.getTotalCost();
        booking68.setDuration((-1));
        java.lang.String str74 = booking68.getLotId();
        booking68.setStartTime("");
        java.lang.String str77 = booking68.getLicensePlate();
        booking68.setStartTime("8bf217fa-1769-4d04-858b-ce78fe94bf0c");
        boolean boolean80 = spaceManager40.assignBooking("Refunded total cost of $0.0", (int) 'a', booking68);
        boolean boolean81 = spaceManager0.assignBooking("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", (int) (short) -1, booking68);
        booking68.setCheckedIn(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(spaceManager40);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 1.0d + "'", double71 == 1.0d);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "jane" + "'", str74, "jane");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "disabled" + "'", str77, "disabled");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        double double5 = bookingManager0.getHourlyRate("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.MobilePay mobilePay6 = new ParkingSystem.MobilePay();
        boolean boolean11 = mobilePay6.processPayment("hi!", (-1.0d), "", "");
        boolean boolean16 = mobilePay6.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean21 = mobilePay6.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay6);
        boolean boolean26 = bookingManager0.editBooking("0b35479f-5869-423e-9abc-e4ab9cef903d", "", 52);
        double double29 = bookingManager0.calculateCost("CLT-92729d37-9255-42b4-9361-c1978aadacb0", 10);
        ParkingSystem.Booking booking31 = bookingManager0.getBooking("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167");
        ParkingSystem.BookingManager bookingManager32 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager33 = new ParkingSystem.CheckInManager(bookingManager32);
        ParkingSystem.SpaceManager spaceManager34 = bookingManager32.getSpaceManager();
        double double37 = bookingManager32.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit38 = new ParkingSystem.DebitOrCredit();
        bookingManager32.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit38);
        boolean boolean44 = debitOrCredit38.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) (-1), "Paid $ -1.0 with Mobile Pay", "");
        java.lang.String str45 = debitOrCredit38.getPaymentMessage();
        java.lang.String str46 = debitOrCredit38.getPaymentMessage();
        boolean boolean51 = debitOrCredit38.processPayment("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (double) 100L, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "0b35479f-5869-423e-9abc-e4ab9cef903d");
        boolean boolean54 = debitOrCredit38.validateCard("e8686ac8-1df7-4a9b-b299-8fbcdd585528", (double) 10);
        java.lang.String str55 = debitOrCredit38.getPaymentMessage();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit38);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 165.0d + "'", double29 == 165.0d);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertNotNull(spaceManager34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 165.0d + "'", double37 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Card number should be 16 digits" + "'", str45, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Card number should be 16 digits" + "'", str46, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Card number should be 16 digits" + "'", str55, "Card number should be 16 digits");
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = user0.login("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "staff");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str23 = parkingSpaceFacade20.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager24 = parkingSpaceFacade20.getSpaceManager();
        spaceManager24.addParkingLot("hi!");
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap27 = spaceManager24.getParkingLots();
        user0.user = spaceManager24;
        ParkingSystem.ParkingLot parkingLot32 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking34 = null;
        boolean boolean35 = parkingLot32.assignBooking(0, booking34);
        boolean boolean37 = parkingLot32.isSpaceAvailable((int) '#');
        boolean boolean39 = parkingLot32.isSpaceAvailable((int) (short) 10);
        ParkingSystem.SpaceManager spaceManager41 = new ParkingSystem.SpaceManager();
        spaceManager41.toggleLot("Jane", false);
        spaceManager41.removeBooking("disabled", 10);
        ParkingSystem.SpaceManager spaceManager50 = new ParkingSystem.SpaceManager();
        boolean boolean53 = spaceManager50.isSpaceAvailable("hi!", (int) '#');
        spaceManager50.toggleLot("disabled", false);
        ParkingSystem.Booking booking66 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean67 = spaceManager50.assignBooking("empty", (int) (short) 0, booking66);
        boolean boolean68 = spaceManager41.assignBooking("hi!", 0, booking66);
        double double69 = booking66.getTotalCost();
        java.lang.String str70 = booking66.getStartTime();
        java.lang.String str71 = booking66.getLotId();
        boolean boolean72 = parkingLot32.assignBooking((int) (byte) -1, booking66);
        boolean boolean73 = spaceManager24.assignBooking("Paid $ 1470.0 with Mobile Pay", (int) '#', booking66);
        boolean boolean74 = booking66.isCheckedIn();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "9701df9a-2178-4ad5-8076-46ff5f05b3e8" + "'", str6, "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
        org.junit.Assert.assertNotNull(spaceManager24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Jane" + "'", str70, "Jane");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "jane" + "'", str71, "jane");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        java.lang.String[] strArray7 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade8 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager9 = parkingSpaceFacade8.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager10 = parkingSpaceFacade8.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap11 = spaceManager10.getParkingLots();
        cSVManager0.loadParkingLots(strMap11);
        org.junit.Assert.assertNotNull(strArray1);
// flaky "39) test2919(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "22) test2919(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strArray7);
// flaky "11) test2919(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray7, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(checkInManager9);
        org.junit.Assert.assertNotNull(spaceManager10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        boolean boolean13 = bookingManager0.confirmBooking("empty", "Jane", "disabled", "pass", (int) (byte) 0, "hi!", (int) 'a', "hi!", "");
        double double15 = bookingManager0.getHourlyRate("Jane");
        double double18 = bookingManager0.calculateCost("Paid $ 10.0 with Mobile Pay", (int) (byte) 1);
        ParkingSystem.AccountRegistry accountRegistry19 = bookingManager0.getAccountRegistry();
        ParkingSystem.AccountRegistry accountRegistry20 = bookingManager0.getAccountRegistry();
        boolean boolean30 = bookingManager0.confirmBooking("CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "3b453211-7dd1-4452-8741-a206711c1217", "aswfJGJtdF", "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", (int) (byte) -1, "e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", (int) (byte) 0, "Refunded without deposit ($-42.0)", "K6PkM9rcCx");
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap31 = bookingManager0.getActiveBookings();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 15.0d + "'", double15 == 15.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 30.0d + "'", double18 == 30.0d);
        org.junit.Assert.assertNotNull(accountRegistry19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.User user2 = new ParkingSystem.User();
        java.lang.Object obj3 = user2.user;
        ParkingSystem.Client client4 = ParkingSystem.Client.getInstance();
        java.lang.String str5 = client4.getName();
        client4.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy8 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry9 = parkingSpaceProxy8.getRegistry();
        boolean boolean11 = parkingSpaceProxy8.checkIn("");
        client4.assignProxy(parkingSpaceProxy8);
        boolean boolean13 = client4.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        client4.assignProxy(parkingSpaceProxy14);
        ParkingSystem.AccountRegistry accountRegistry16 = parkingSpaceProxy14.getRegistry();
        boolean boolean18 = parkingSpaceProxy14.checkIn("hi!");
        user2.parkingProxy = parkingSpaceProxy14;
        user2.register("Card number should be 16 digits", "Paid $ 100.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "Refunded total cost of $1.0", "Paid $ 0.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy26 = user2.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = new ParkingSystem.ParkingSpaceProxy();
        user2.assignProxy(parkingSpaceProxy27);
        boolean boolean38 = parkingSpaceProxy27.confirmBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-2aaedfbd-8450-4ae9-a41d-e7746f52d089", "09622cbf-e665-45db-b1ad-365065947a20", "Paid $ 15.0 with Mobile Pay", (int) (byte) -1, "Refunded without deposit ($0.0)", 0, "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "13b04414-31a5-407f-8ea3-fba4613c73d1");
        user0.assignProxy(parkingSpaceProxy27);
        java.lang.Object obj42 = user0.login("FNuxCiXmkP", "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = user0.parkingProxy;
        ParkingSystem.User user44 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy45 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj48 = parkingSpaceProxy45.login("empty", "Jane");
        parkingSpaceProxy45.validateClient("Jane");
        parkingSpaceProxy45.toggleSpace("", "staff", false);
        boolean boolean56 = parkingSpaceProxy45.cancelBooking("");
        user44.assignProxy(parkingSpaceProxy45);
        parkingSpaceProxy45.displayPendingValidations();
        boolean boolean62 = parkingSpaceProxy45.editBooking("Paid $ -1.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", 100);
        user0.parkingProxy = parkingSpaceProxy45;
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(client4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "9701df9a-2178-4ad5-8076-46ff5f05b3e8" + "'", str5, "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        org.junit.Assert.assertNotNull(accountRegistry9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(accountRegistry16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy26);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(parkingSpaceProxy43);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        boolean boolean24 = bookingManager0.editBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", (int) (short) 100);
        double double26 = bookingManager0.getDeposit("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.CheckInManager checkInManager27 = new ParkingSystem.CheckInManager(bookingManager0);
        checkInManager27.refundMessage = "CLT-849ed8c4-58ed-4643-99dc-d9a0cdbc1188";
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 15.0d + "'", double26 == 15.0d);
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", (int) (byte) 100, "Refunded deposit of $0.0", (int) (byte) 100, "CLT-60bc02e6-ea36-49ee-91f5-9241efd385cc", (double) (byte) 10);
        booking7.setCheckedIn(false);
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        boolean boolean4 = parkingSpaceFacade0.cancelBooking("jane");
        boolean boolean7 = parkingSpaceFacade0.extendBooking("hi!", (-1));
        parkingSpaceFacade0.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        ParkingSystem.Booking booking12 = parkingSpaceFacade0.getBookingDetails("");
        boolean boolean22 = parkingSpaceFacade0.confirmBooking("", "", "SRiN5ev00N", "", (int) (byte) 10, "Paid $ 100.0 with Mobile Pay", (int) (short) 1, "pass", "CLT-08489cd1-5899-4594-ad65-2f6dcf0a9e5d");
        parkingSpaceFacade0.toggleLot("Refunded without deposit ($-15.0)", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = null;
        accountRegistry3.assignProxyToManager("disabled", parkingSpaceProxy6);
        boolean boolean9 = accountRegistry3.requiresValidation("disabled");
        boolean boolean11 = accountRegistry3.requiresValidation("Paid $ 10.0 with Mobile Pay");
        java.lang.Object obj14 = accountRegistry3.login("", "pass");
        boolean boolean20 = accountRegistry3.registerClient("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "4a1f2343-8b2e-4dea-ba69-efd105414390", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "4a1f2343-8b2e-4dea-ba69-efd105414390", "pass");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("disabled", 100);
        ParkingSystem.SpaceManager spaceManager6 = new ParkingSystem.SpaceManager();
        boolean boolean9 = spaceManager6.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str12 = spaceManager6.scanSpace("disabled", "");
        spaceManager6.addParkingLot("hi!");
        java.lang.String str17 = spaceManager6.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager6.toggleLot("pass", true);
        spaceManager6.toggleLot("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", true);
        ParkingSystem.ParkingLot parkingLot27 = new ParkingSystem.ParkingLot("");
        ParkingSystem.ParkingLotIterator parkingLotIterator28 = parkingLot27.getIterator();
        ParkingSystem.ParkingSpace parkingSpace30 = parkingLot27.getParkingSpace((int) (byte) -1);
        ParkingSystem.Booking booking31 = parkingSpace30.getCurrentBooking();
        ParkingSystem.ParkingLot parkingLot33 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking35 = null;
        boolean boolean36 = parkingLot33.assignBooking(0, booking35);
        boolean boolean38 = parkingLot33.isSpaceAvailable((int) '#');
        boolean boolean40 = parkingLot33.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace42 = parkingLot33.getParkingSpace((int) (byte) 10);
        int int43 = parkingSpace42.getSpaceId();
        ParkingSystem.Booking booking44 = parkingSpace42.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager45 = new ParkingSystem.SpaceManager();
        boolean boolean48 = spaceManager45.isSpaceAvailable("hi!", (int) '#');
        spaceManager45.toggleLot("disabled", false);
        ParkingSystem.Booking booking61 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean62 = spaceManager45.assignBooking("empty", (int) (short) 0, booking61);
        boolean boolean63 = parkingSpace42.assignBooking(booking61);
        ParkingSystem.SpaceManager spaceManager64 = new ParkingSystem.SpaceManager();
        boolean boolean67 = spaceManager64.isSpaceAvailable("hi!", (int) '#');
        spaceManager64.toggleLot("disabled", false);
        ParkingSystem.Booking booking80 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean81 = spaceManager64.assignBooking("empty", (int) (short) 0, booking80);
        boolean boolean82 = booking80.isCheckedIn();
        java.lang.String str83 = booking80.getClientId();
        boolean boolean84 = parkingSpace42.assignBooking(booking80);
        boolean boolean85 = parkingSpace30.assignBooking(booking80);
        boolean boolean86 = spaceManager6.assignBooking("", (int) (byte) 1, booking80);
        boolean boolean87 = spaceManager0.assignBooking("", (int) (byte) 10, booking80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertNotNull(parkingLotIterator28);
        org.junit.Assert.assertNotNull(parkingSpace30);
        org.junit.Assert.assertNull(booking31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(parkingSpace42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNull(booking44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "staff" + "'", str83, "staff");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        java.util.Map<java.lang.String, ParkingSystem.Booking> strMap20 = bookingManager0.getActiveBookings();
        double double22 = bookingManager0.getDeposit("TXCrKOGD");
        boolean boolean24 = bookingManager0.cancelBooking("CLT-41ead7fd-0c3b-4694-a2a9-d760d7e008d6");
        boolean boolean29 = bookingManager0.extendBooking("Refunded total cost of $10.0", 0, "Refunded total cost of $1.0", "CLT-91ad27d3-445b-4a5c-83e9-5aff7f25edbb");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 15.0d + "'", double22 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        ParkingSystem.Booking booking16 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean17 = spaceManager0.assignBooking("empty", (int) (short) 0, booking16);
        java.lang.String str18 = booking16.getClientId();
        java.lang.String str19 = booking16.getStartTime();
        int int20 = booking16.getDuration();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "staff" + "'", str18, "staff");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Jane" + "'", str19, "Jane");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.ParkingLot parkingLot11 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking13 = null;
        boolean boolean14 = parkingLot11.assignBooking(0, booking13);
        boolean boolean16 = parkingLot11.isSpaceAvailable((int) '#');
        boolean boolean18 = parkingLot11.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace20 = parkingLot11.getParkingSpace((int) (byte) 10);
        int int21 = parkingSpace20.getSpaceId();
        ParkingSystem.Booking booking22 = parkingSpace20.getCurrentBooking();
        java.lang.String str23 = parkingSpace20.scanSpace();
        ParkingSystem.Enabled enabled24 = new ParkingSystem.Enabled();
        parkingSpace20.setState((ParkingSystem.SpaceState) enabled24);
        parkingSpace9.setState((ParkingSystem.SpaceState) enabled24);
        ParkingSystem.ParkingLot parkingLot28 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator29 = parkingLot28.getIterator();
        ParkingSystem.Booking booking31 = null;
        boolean boolean32 = parkingLot28.assignBooking((int) (short) 1, booking31);
        ParkingSystem.ParkingSpace parkingSpace34 = parkingLot28.getParkingSpace((int) ' ');
        java.lang.String str35 = enabled24.scanSpace(parkingSpace34);
        int int36 = parkingSpace34.getSpaceId();
        ParkingSystem.ParkingLot parkingLot38 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking40 = null;
        boolean boolean41 = parkingLot38.assignBooking(0, booking40);
        boolean boolean43 = parkingLot38.isSpaceAvailable((int) '#');
        boolean boolean45 = parkingLot38.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace47 = parkingLot38.getParkingSpace((int) (byte) 10);
        int int48 = parkingSpace47.getSpaceId();
        ParkingSystem.Booking booking49 = parkingSpace47.getCurrentBooking();
        java.lang.String str50 = parkingSpace47.scanSpace();
        ParkingSystem.Enabled enabled51 = new ParkingSystem.Enabled();
        parkingSpace47.setState((ParkingSystem.SpaceState) enabled51);
        parkingSpace34.setState((ParkingSystem.SpaceState) enabled51);
        ParkingSystem.ParkingLot parkingLot55 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking57 = null;
        boolean boolean58 = parkingLot55.assignBooking(0, booking57);
        boolean boolean60 = parkingLot55.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator61 = parkingLot55.getIterator();
        boolean boolean62 = parkingLotIterator61.hasNext();
        ParkingSystem.ParkingSpace parkingSpace63 = parkingLotIterator61.next();
        ParkingSystem.ParkingLot parkingLot65 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking67 = null;
        boolean boolean68 = parkingLot65.assignBooking(0, booking67);
        boolean boolean70 = parkingLot65.isSpaceAvailable((int) '#');
        boolean boolean72 = parkingLot65.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace74 = parkingLot65.getParkingSpace((int) (byte) 10);
        int int75 = parkingSpace74.getSpaceId();
        ParkingSystem.Booking booking76 = parkingSpace74.getCurrentBooking();
        java.lang.String str77 = parkingSpace74.scanSpace();
        ParkingSystem.Enabled enabled78 = new ParkingSystem.Enabled();
        parkingSpace74.setState((ParkingSystem.SpaceState) enabled78);
        parkingSpace63.setState((ParkingSystem.SpaceState) enabled78);
        ParkingSystem.ParkingLot parkingLot82 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator83 = parkingLot82.getIterator();
        ParkingSystem.Booking booking85 = null;
        boolean boolean86 = parkingLot82.assignBooking((int) (short) 1, booking85);
        ParkingSystem.ParkingSpace parkingSpace88 = parkingLot82.getParkingSpace((int) ' ');
        java.lang.String str89 = enabled78.scanSpace(parkingSpace88);
        java.lang.String str90 = enabled51.scanSpace(parkingSpace88);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(parkingSpace20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "empty" + "'", str23, "empty");
        org.junit.Assert.assertNotNull(parkingLotIterator29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(parkingSpace34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "empty" + "'", str35, "empty");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(parkingSpace47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertNull(booking49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "empty" + "'", str50, "empty");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(parkingSpace63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(parkingSpace74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10 + "'", int75 == 10);
        org.junit.Assert.assertNull(booking76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "empty" + "'", str77, "empty");
        org.junit.Assert.assertNotNull(parkingLotIterator83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(parkingSpace88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "empty" + "'", str89, "empty");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "empty" + "'", str90, "empty");
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.Booking booking6 = null;
        boolean boolean7 = parkingLot1.assignBooking(1, booking6);
        ParkingSystem.ParkingLot parkingLot10 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking12 = null;
        boolean boolean13 = parkingLot10.assignBooking(0, booking12);
        boolean boolean15 = parkingLot10.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking24 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean25 = parkingLot10.assignBooking((int) (short) -1, booking24);
        java.lang.String str26 = booking24.getLotId();
        boolean boolean27 = parkingLot1.assignBooking(0, booking24);
        ParkingSystem.ParkingLotIterator parkingLotIterator28 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLotIterator28.next();
        ParkingSystem.ParkingSpace parkingSpace30 = parkingLotIterator28.next();
        boolean boolean31 = parkingSpace30.isAvailable();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "jane" + "'", str26, "jane");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator28);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertNotNull(parkingSpace30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        java.lang.String str5 = parkingSpaceFacade0.scanSpace("Paid $ 10.0 with Mobile Pay", "hi!");
        ParkingSystem.CheckInManager checkInManager6 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.SpaceManager spaceManager7 = parkingSpaceFacade0.getSpaceManager();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "disabled" + "'", str5, "disabled");
        org.junit.Assert.assertNotNull(checkInManager6);
        org.junit.Assert.assertNotNull(spaceManager7);
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        ParkingSystem.BookingManager bookingManager18 = parkingSpaceFacade17.getBookingManager();
        ParkingSystem.BookingManager bookingManager19 = parkingSpaceFacade17.getBookingManager();
        boolean boolean29 = parkingSpaceFacade17.confirmBooking("433f3d1f-f758-4ae3-972b-7fb179aedfd7", "Card number should be 16 digits", "Refunded total cost of $100.0", "empty", 2, "Paid $ 100.0 with Mobile Pay", (int) (byte) 1, "433f3d1f-f758-4ae3-972b-7fb179aedfd7", "Paid $ 1470.0 with Mobile Pay");
        parkingSpaceFacade17.toggleSpace("K6PkM9rcCx", "CLT-93b11069-2e34-4ef4-bf17-b3bb8758882b", true);
        boolean boolean35 = parkingSpaceFacade17.checkIn("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167" + "'", str6, "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertNotNull(bookingManager18);
        org.junit.Assert.assertNotNull(bookingManager19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean7 = parkingSpaceFacade0.editBooking("Card number should be 16 digits", "", (int) (short) 0);
        java.lang.String str10 = parkingSpaceFacade0.scanSpace("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.CheckInManager checkInManager11 = parkingSpaceFacade0.getCheckInManager();
        checkInManager11.refundMessage = "Refunded deposit of $1.0";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "disabled" + "'", str10, "disabled");
        org.junit.Assert.assertNotNull(checkInManager11);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        boolean boolean10 = parkingLot1.isEnabled();
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot1.getParkingSpace(2);
        ParkingSystem.Booking booking21 = new ParkingSystem.Booking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 10.0 with Mobile Pay", (int) (short) 0, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 1, "2afd610d-a8cb-413a-bbee-7927f86b526c", (-1.0d));
        boolean boolean22 = booking21.isCheckedIn();
        java.lang.String str23 = booking21.getLotId();
        booking21.setStartTime("89de8237-29df-4908-9de4-6dc1ce90de94");
        java.lang.String str26 = booking21.getLotId();
        int int27 = booking21.getSpaceId();
        boolean boolean28 = parkingLot1.assignBooking((int) (short) 100, booking21);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str23, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str26, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        java.lang.Object obj19 = parkingSpaceProxy9.login("Jane", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade20 = parkingSpaceProxy9.getFacade();
        boolean boolean22 = parkingSpaceFacade20.cancelBooking("4c45f11e-b09a-4d81-adf1-86cfd519dc3c");
        boolean boolean32 = parkingSpaceFacade20.confirmBooking("09622cbf-e665-45db-b1ad-365065947a20", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "Refunded without deposit ($-42.0)", "cf448544-0e6d-4a41-94c2-e67f848ae8df", 0, "83a51dc6-0c8f-4f21-ae40-68699828f95d", 100, "0b35479f-5869-423e-9abc-e4ab9cef903d", "WxoDOyjI");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167" + "'", str6, "CLT-d2153556-bc61-49e7-b73d-6af2a45e5167");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(parkingSpaceFacade20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        ParkingSystem.Disabled disabled0 = new ParkingSystem.Disabled();
        ParkingSystem.Enabled enabled1 = new ParkingSystem.Enabled();
        ParkingSystem.ParkingLot parkingLot3 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking5 = null;
        boolean boolean6 = parkingLot3.assignBooking(0, booking5);
        boolean boolean8 = parkingLot3.isSpaceAvailable((int) '#');
        boolean boolean10 = parkingLot3.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace12 = parkingLot3.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking13 = parkingSpace12.getCurrentBooking();
        parkingSpace12.removeBooking();
        java.lang.String str15 = enabled1.scanSpace(parkingSpace12);
        java.lang.String str16 = parkingSpace12.scanSpace();
        java.lang.String str17 = disabled0.scanSpace(parkingSpace12);
        java.lang.String str18 = parkingSpace12.scanSpace();
        java.lang.String str19 = parkingSpace12.scanSpace();
        parkingSpace12.removeBooking();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(parkingSpace12);
        org.junit.Assert.assertNull(booking13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "empty" + "'", str15, "empty");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "empty" + "'", str16, "empty");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "disabled" + "'", str17, "disabled");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "empty" + "'", str18, "empty");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "empty" + "'", str19, "empty");
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        parkingLot1.removeBooking((int) (byte) 1);
        parkingLot1.setEnabled(false);
        boolean boolean14 = parkingLot1.isSpaceAvailable((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.ParkingLot parkingLot17 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking19 = null;
        boolean boolean20 = parkingLot17.assignBooking(0, booking19);
        boolean boolean22 = parkingLot17.isSpaceAvailable((int) '#');
        boolean boolean24 = parkingLot17.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace26 = parkingLot17.getParkingSpace((int) (byte) 10);
        ParkingSystem.Booking booking27 = parkingSpace26.getCurrentBooking();
        parkingSpace26.removeBooking();
        int int29 = parkingSpace26.getSpaceId();
        ParkingSystem.Booking booking37 = new ParkingSystem.Booking("jane", "Paid $ 10.0 with Mobile Pay", (-1), "Paid $ 10.0 with Mobile Pay", (int) (short) 1, "hi!", (double) 100);
        boolean boolean38 = parkingSpace26.assignBooking(booking37);
        java.lang.String str39 = enabled14.scanSpace(parkingSpace26);
        ParkingSystem.SpaceState spaceState40 = parkingSpace26.getState();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(parkingSpace26);
        org.junit.Assert.assertNull(booking27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(spaceState40);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        ParkingSystem.User user0 = new ParkingSystem.User();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy1 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj4 = parkingSpaceProxy1.login("empty", "Jane");
        parkingSpaceProxy1.validateClient("Jane");
        parkingSpaceProxy1.toggleSpace("", "staff", false);
        boolean boolean12 = parkingSpaceProxy1.cancelBooking("");
        user0.assignProxy(parkingSpaceProxy1);
        user0.register("hi!", "CLT-f02c481e-1504-4abf-b598-76152da8586a", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "848f508e-e1d2-4f02-9fc9-e95eee425d36", "89de8237-29df-4908-9de4-6dc1ce90de94");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        ParkingSystem.ParkingLotIterator parkingLotIterator7 = parkingLot1.getIterator();
        boolean boolean8 = parkingLotIterator7.hasNext();
        ParkingSystem.ParkingSpace parkingSpace9 = parkingLotIterator7.next();
        ParkingSystem.SpaceManager spaceManager10 = new ParkingSystem.SpaceManager();
        boolean boolean13 = spaceManager10.isSpaceAvailable("hi!", (int) '#');
        spaceManager10.toggleLot("disabled", false);
        ParkingSystem.Booking booking26 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean27 = spaceManager10.assignBooking("empty", (int) (short) 0, booking26);
        ParkingSystem.SpaceManager spaceManager30 = new ParkingSystem.SpaceManager();
        boolean boolean33 = spaceManager30.isSpaceAvailable("hi!", (int) '#');
        spaceManager30.toggleLot("disabled", false);
        ParkingSystem.Booking booking46 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean47 = spaceManager30.assignBooking("empty", (int) (short) 0, booking46);
        boolean boolean48 = spaceManager10.assignBooking("disabled", (int) (byte) 0, booking46);
        boolean boolean49 = parkingSpace9.assignBooking(booking46);
        ParkingSystem.SpaceState spaceState50 = parkingSpace9.getState();
        ParkingSystem.Booking booking51 = parkingSpace9.getCurrentBooking();
        booking51.setCheckedIn(false);
        booking51.setCheckedIn(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(spaceState50);
        org.junit.Assert.assertNotNull(booking51);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        ParkingSystem.Booking booking16 = bookingManager0.getBooking("CLT-035180a0-4707-410d-a011-2a4f0f46838b");
        ParkingSystem.SpaceManager spaceManager17 = bookingManager0.getSpaceManager();
        ParkingSystem.SpaceManager spaceManager18 = bookingManager0.getSpaceManager();
        boolean boolean20 = bookingManager0.cancelBooking("721fcb72-c57d-4e99-81b7-06e4c7e1ed40");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(spaceManager17);
        org.junit.Assert.assertNotNull(spaceManager18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj12 = parkingSpaceProxy9.login("empty", "Jane");
        parkingSpaceProxy9.validateClient("Jane");
        parkingSpaceProxy9.toggleSpace("", "staff", false);
        boolean boolean20 = parkingSpaceProxy9.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy9);
        boolean boolean27 = parkingSpaceProxy9.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean33 = parkingSpaceProxy9.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        parkingSpaceProxy9.toggleSpace("02659ad3-0b5c-4c48-a915-a466f2b50775", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", false);
        ParkingSystem.AccountRegistry accountRegistry38 = parkingSpaceProxy9.getRegistry();
        ParkingSystem.Manager manager39 = accountRegistry38.autoGenerateManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(accountRegistry38);
        org.junit.Assert.assertNotNull(manager39);
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean10 = parkingSpaceFacade0.confirmBooking("staff", "", "disabled", "hi!", (int) 'a', "jane", (int) 'a', "hi!", "");
        parkingSpaceFacade0.toggleLot("Paid $ 10.0 with Mobile Pay", true);
        java.lang.String str16 = parkingSpaceFacade0.scanSpace("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "empty");
        ParkingSystem.BookingManager bookingManager17 = parkingSpaceFacade0.getBookingManager();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "disabled" + "'", str16, "disabled");
        org.junit.Assert.assertNotNull(bookingManager17);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        boolean boolean26 = bookingManager0.confirmBooking("empty", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "Refunded total cost of $1.0", (int) (byte) 1, "Card number should be 16 digits", 32, "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "disabled");
        ParkingSystem.BookingManager bookingManager27 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager28 = new ParkingSystem.CheckInManager(bookingManager27);
        ParkingSystem.SpaceManager spaceManager29 = bookingManager27.getSpaceManager();
        double double32 = bookingManager27.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit33 = new ParkingSystem.DebitOrCredit();
        bookingManager27.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        boolean boolean39 = debitOrCredit33.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str40 = debitOrCredit33.getPaymentMessage();
        boolean boolean43 = debitOrCredit33.validateCard("pass", (double) 100.0f);
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit33);
        double double46 = bookingManager0.getHourlyRate("8de59b10-a65c-4d90-b56c-a637505ce1de");
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spaceManager29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 165.0d + "'", double32 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Card number should be 16 digits" + "'", str40, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 15.0d + "'", double46 == 15.0d);
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        ParkingSystem.AccountRegistry accountRegistry12 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager13 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry12);
        ParkingSystem.AccountRegistry accountRegistry17 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry17);
        superManager13.registry = accountRegistry17;
        ParkingSystem.SuperManager superManager20 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry17);
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("Paid $ -1.0 with Mobile Pay", "", "Jane", accountRegistry17);
        ParkingSystem.SuperManager superManager22 = ParkingSystem.SuperManager.createFromCSV("staff", "Paid $ 0.0 with Mobile Pay", "Paid $ 100.0 with Mobile Pay", accountRegistry17);
        ParkingSystem.AccountRegistry accountRegistry26 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager27 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry26);
        boolean boolean29 = accountRegistry26.requiresValidation("disabled");
        int int30 = accountRegistry26.getManagersSize();
        boolean boolean36 = accountRegistry26.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj41 = parkingSpaceProxy38.login("empty", "Jane");
        parkingSpaceProxy38.validateClient("Jane");
        parkingSpaceProxy38.toggleSpace("", "staff", false);
        boolean boolean49 = parkingSpaceProxy38.cancelBooking("Jane");
        accountRegistry26.assignProxyToClient("pass", parkingSpaceProxy38);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap51 = accountRegistry26.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy53 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj56 = parkingSpaceProxy53.login("empty", "Jane");
        parkingSpaceProxy53.validateClient("Jane");
        parkingSpaceProxy53.toggleSpace("", "staff", false);
        boolean boolean64 = parkingSpaceProxy53.cancelBooking("Jane");
        boolean boolean66 = parkingSpaceProxy53.checkOut("empty");
        boolean boolean76 = parkingSpaceProxy53.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        accountRegistry26.assignProxyToManager("2afd610d-a8cb-413a-bbee-7927f86b526c", parkingSpaceProxy53);
        ParkingSystem.User user79 = new ParkingSystem.User();
        java.lang.Object obj80 = user79.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy81 = user79.parkingProxy;
        ParkingSystem.User user82 = new ParkingSystem.User();
        java.lang.Object obj83 = user82.user;
        ParkingSystem.Client client84 = ParkingSystem.Client.getInstance();
        java.lang.String str85 = client84.getName();
        client84.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy88 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry89 = parkingSpaceProxy88.getRegistry();
        boolean boolean91 = parkingSpaceProxy88.checkIn("");
        client84.assignProxy(parkingSpaceProxy88);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade93 = parkingSpaceProxy88.getFacade();
        user82.assignProxy(parkingSpaceProxy88);
        user79.parkingProxy = parkingSpaceProxy88;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade96 = parkingSpaceProxy88.getFacade();
        accountRegistry26.assignProxyToClient("pass", parkingSpaceProxy88);
        superManager22.registry = accountRegistry26;
        org.junit.Assert.assertNotNull(superManager13);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(superManager20);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertNotNull(superManager22);
        org.junit.Assert.assertNotNull(superManager27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(parkingSpaceProxy81);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(client84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "jane" + "'", str85, "jane");
        org.junit.Assert.assertNotNull(accountRegistry89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade93);
        org.junit.Assert.assertNotNull(parkingSpaceFacade96);
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        boolean boolean13 = client0.checkIn();
        client0.setClientInfo("staff", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "Paid $ 100.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", true);
        boolean boolean22 = client0.cancelBooking();
        java.lang.String str23 = client0.getPassword();
        boolean boolean24 = client0.cancelBooking();
        client0.setValidated(true);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str23, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        boolean boolean22 = parkingSpaceProxy15.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) ' ');
        ParkingSystem.Booking booking24 = parkingSpaceProxy15.getBookingDetails("Paid $ 1470.0 with Mobile Pay");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "2afd610d-a8cb-413a-bbee-7927f86b526c" + "'", str1, "2afd610d-a8cb-413a-bbee-7927f86b526c");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(booking24);
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy4.getFacade();
        boolean boolean11 = parkingSpaceFacade9.checkOut("Paid $ 0.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager12 = parkingSpaceFacade9.getBookingManager();
        java.lang.String str15 = parkingSpaceFacade9.scanSpace("Jane", "qPYDfDnbtD");
        boolean boolean19 = parkingSpaceFacade9.editBooking("", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", 52);
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(bookingManager12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "disabled" + "'", str15, "disabled");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        boolean boolean6 = parkingSpaceProxy3.checkIn("");
        parkingSpaceProxy3.validateClient("");
        user0.assignProxy(parkingSpaceProxy3);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy10 = user0.parkingProxy;
        java.lang.Object obj13 = user0.login("empty", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy14 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking16 = parkingSpaceProxy14.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy14.getFacade();
        boolean boolean19 = parkingSpaceProxy14.checkOut("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        user0.parkingProxy = parkingSpaceProxy14;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("Jane");
        boolean boolean34 = parkingSpaceProxy21.checkOut("empty");
        boolean boolean44 = parkingSpaceProxy21.confirmBooking("2afd610d-a8cb-413a-bbee-7927f86b526c", "Paid $ -1.0 with Mobile Pay", "", "", (int) (short) 0, "disabled", 32, "", "jane");
        boolean boolean50 = parkingSpaceProxy21.register("CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "staff", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "02659ad3-0b5c-4c48-a915-a466f2b50775", "Paid $ 100.0 with Mobile Pay");
        user0.assignProxy(parkingSpaceProxy21);
        user0.register("CLT-22138484-eb59-490e-9c41-9fd9c319dcda", "86z9Z9e0MN", "CLT-7df99776-6818-4843-8c88-c29a926a9d29", "CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "Refunded deposit of $1.0");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parkingSpaceProxy10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(booking16);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.addParkingLot("hi!");
        java.lang.String str11 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        spaceManager0.toggleLot("pass", true);
        spaceManager0.addParkingLot("pass");
        java.lang.String str19 = spaceManager0.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Refunded total cost of $1.0");
        java.lang.String str22 = spaceManager0.scanSpace("CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "CLT-55105d92-54d6-44d2-965a-736022b7f7cd");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "disabled" + "'", str19, "disabled");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "disabled" + "'", str22, "disabled");
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        client0.setValidated(true);
        java.lang.String str14 = client0.getPassword();
        boolean boolean15 = client0.cancelBooking();
        ParkingSystem.Booking booking16 = client0.getBookingDetails();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-22138484-eb59-490e-9c41-9fd9c319dcda" + "'", str1, "CLT-22138484-eb59-490e-9c41-9fd9c319dcda");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "disabled" + "'", str14, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(booking16);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setClientInfo("hi!", "", "", "disabled", "disabled", "hi!", true);
        java.lang.String str10 = client0.getUsername();
        java.lang.String str11 = client0.getPassword();
        java.lang.String str12 = client0.getUsername();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = null;
        client0.assignProxy(parkingSpaceProxy13);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        client0.assignProxy(parkingSpaceProxy15);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy20 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking22 = parkingSpaceProxy20.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry23 = parkingSpaceProxy20.getRegistry();
        parkingSpaceProxy20.autoGenerateManager();
        client0.assignProxy(parkingSpaceProxy20);
        boolean boolean29 = parkingSpaceProxy20.editBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", "Refunded total cost of $100.0", (int) (byte) 0);
        parkingSpaceProxy20.toggleSpace("2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", true);
        parkingSpaceProxy20.validateClient("Paid $ 10.0 with Mobile Pay");
        parkingSpaceProxy20.validateClient("CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        boolean boolean39 = parkingSpaceProxy20.cancelBooking("CLT-d7ac7477-2083-415e-84c8-8e0763f03efc");
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(booking22);
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.AccountRegistry accountRegistry18 = bookingManager0.getAccountRegistry();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(accountRegistry18);
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("hi!", (-1.0d), "", "");
        boolean boolean10 = mobilePay0.processPayment("hi!", (double) 100, "jane", "disabled");
        java.lang.String str11 = mobilePay0.getPaymentMessage();
        boolean boolean16 = mobilePay0.processPayment("0K5j4sX8PY", (double) 0.0f, "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786", "Refunded total cost of $1.0");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Paid $ 100.0 with Mobile Pay" + "'", str11, "Paid $ 100.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        double double5 = bookingManager0.getHourlyRate("disabled");
        ParkingSystem.BookingManager bookingManager6 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager7 = new ParkingSystem.CheckInManager(bookingManager6);
        ParkingSystem.SpaceManager spaceManager8 = bookingManager6.getSpaceManager();
        double double11 = bookingManager6.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit12 = new ParkingSystem.DebitOrCredit();
        bookingManager6.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        boolean boolean18 = debitOrCredit12.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit12);
        ParkingSystem.MobilePay mobilePay20 = new ParkingSystem.MobilePay();
        boolean boolean25 = mobilePay20.processPayment("hi!", (-1.0d), "", "");
        boolean boolean30 = mobilePay20.processPayment("hi!", (double) 100, "jane", "disabled");
        boolean boolean35 = mobilePay20.processPayment("2afd610d-a8cb-413a-bbee-7927f86b526c", (double) 10.0f, "staff", "empty");
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) mobilePay20);
        java.lang.String str37 = mobilePay20.getPaymentMessage();
        java.lang.String str38 = mobilePay20.getPaymentMessage();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 15.0d + "'", double5 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 165.0d + "'", double11 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str37, "Paid $ 10.0 with Mobile Pay");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Paid $ 10.0 with Mobile Pay" + "'", str38, "Paid $ 10.0 with Mobile Pay");
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        parkingSpaceFacade0.toggleSpace("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "", false);
        boolean boolean20 = parkingSpaceFacade0.confirmBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "Refunded without deposit ($0.0)", (int) (byte) -1, "433f3d1f-f758-4ae3-972b-7fb179aedfd7", 0, "Paid $ -1.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        java.lang.String str23 = parkingSpaceFacade0.scanSpace("848f508e-e1d2-4f02-9fc9-e95eee425d36", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "disabled" + "'", str23, "disabled");
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap5 = accountRegistry3.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        java.lang.String str11 = parkingSpaceProxy7.scanSpace("empty", "hi!");
        boolean boolean21 = parkingSpaceProxy7.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy7.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean31 = parkingSpaceProxy7.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry3.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy7);
        ParkingSystem.User user34 = new ParkingSystem.User();
        java.lang.Object obj35 = user34.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy36 = user34.parkingProxy;
        ParkingSystem.User user37 = new ParkingSystem.User();
        java.lang.Object obj38 = user37.user;
        ParkingSystem.Client client39 = ParkingSystem.Client.getInstance();
        java.lang.String str40 = client39.getName();
        client39.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy43 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry44 = parkingSpaceProxy43.getRegistry();
        boolean boolean46 = parkingSpaceProxy43.checkIn("");
        client39.assignProxy(parkingSpaceProxy43);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade48 = parkingSpaceProxy43.getFacade();
        user37.assignProxy(parkingSpaceProxy43);
        user34.parkingProxy = parkingSpaceProxy43;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade51 = parkingSpaceProxy43.getFacade();
        boolean boolean55 = parkingSpaceProxy43.editBooking("empty", "Refunded without deposit ($0.0)", 100);
        parkingSpaceProxy43.autoGenerateManager();
        accountRegistry3.assignProxyToClient("qPYDfDnbtD", parkingSpaceProxy43);
        ParkingSystem.Booking booking59 = parkingSpaceProxy43.getBookingDetails("Refunded total cost of $1.0");
        parkingSpaceProxy43.addParkingLot("25527a32-01ef-45ba-816a-1d0a2fc2a52d");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(parkingSpaceProxy36);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(client39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "jane" + "'", str40, "jane");
        org.junit.Assert.assertNotNull(accountRegistry44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade48);
        org.junit.Assert.assertNotNull(parkingSpaceFacade51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(booking59);
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking2 = parkingSpaceProxy0.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        boolean boolean8 = parkingSpaceProxy0.register("staff", "pass", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "Refunded without deposit ($0.0)", "hi!");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade9 = parkingSpaceProxy0.getFacade();
        boolean boolean11 = parkingSpaceFacade9.cancelBooking("62c76d5a-13ab-4e01-9a2c-8e91dd8f4d54");
        org.junit.Assert.assertNull(booking2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy12 = null;
        accountRegistry9.assignProxyToManager("disabled", parkingSpaceProxy12);
        superManager4.registry = accountRegistry9;
        ParkingSystem.AccountRegistry accountRegistry18 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry18);
        java.lang.String str20 = superManager19.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry24 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager25 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry24);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy27 = null;
        accountRegistry24.assignProxyToManager("disabled", parkingSpaceProxy27);
        superManager19.registry = accountRegistry24;
        superManager4.registry = accountRegistry24;
        boolean boolean36 = accountRegistry24.registerClient("staff", "staff", "pass", "disabled", "disabled");
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry24.loadClientsFromCSV();
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(superManager25);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean12 = bookingManager0.extendBooking("ua4ppOLtSl", (int) (short) 0, "Card number should be 16 digits", "CLT-45a3d895-9bc3-45d3-9068-d4559eae3183");
        ParkingSystem.CheckInManager checkInManager13 = new ParkingSystem.CheckInManager(bookingManager0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        boolean boolean2 = parkingSpaceFacade0.checkIn("");
        ParkingSystem.BookingManager bookingManager3 = parkingSpaceFacade0.getBookingManager();
        boolean boolean6 = parkingSpaceFacade0.extendBooking("disabled", 0);
        parkingSpaceFacade0.toggleSpace("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "", false);
        boolean boolean20 = parkingSpaceFacade0.confirmBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", "CLT-cef4e11f-bc4f-4469-a240-c82b3dc24841", "CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "Refunded without deposit ($0.0)", (int) (byte) -1, "433f3d1f-f758-4ae3-972b-7fb179aedfd7", 0, "Paid $ -1.0 with Mobile Pay", "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        ParkingSystem.SpaceManager spaceManager21 = parkingSpaceFacade0.getSpaceManager();
        spaceManager21.loadParkingLots();
        java.lang.String str25 = spaceManager21.scanSpace("", "CLT-c3ce9a25-7555-430c-9330-9203c36530f8");
        java.lang.String str28 = spaceManager21.scanSpace("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff", "Refunded total cost of $-1.0");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(bookingManager3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(spaceManager21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "disabled" + "'", str25, "disabled");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "disabled" + "'", str28, "disabled");
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.lang.String str5 = superManager4.getManagerId();
        java.lang.String str6 = superManager4.getManagerId();
        ParkingSystem.Manager manager7 = superManager4.autoGenerateManager();
        ParkingSystem.AccountRegistry accountRegistry8 = superManager4.registry;
        ParkingSystem.Client client10 = accountRegistry8.getClient("ST001");
        ParkingSystem.AccountRegistry accountRegistry15 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager16 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry15);
        boolean boolean18 = accountRegistry15.requiresValidation("disabled");
        int int19 = accountRegistry15.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy21 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj24 = parkingSpaceProxy21.login("empty", "Jane");
        parkingSpaceProxy21.validateClient("Jane");
        parkingSpaceProxy21.toggleSpace("", "staff", false);
        boolean boolean32 = parkingSpaceProxy21.cancelBooking("Jane");
        accountRegistry15.assignProxyToClient("pass", parkingSpaceProxy21);
        boolean boolean39 = parkingSpaceProxy21.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean45 = parkingSpaceProxy21.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.Booking booking47 = parkingSpaceProxy21.getBookingDetails("hi!");
        boolean boolean49 = parkingSpaceProxy21.checkOut("ST001");
        accountRegistry8.assignProxyToManager("CLT-f02c481e-1504-4abf-b598-76152da8586a", parkingSpaceProxy21);
        // The following exception was thrown during execution in test generation
        try {
            accountRegistry8.loadManagersFromCSV();
// flaky "40) test2962(RegressionTest5)":             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(manager7);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertNull(client10);
        org.junit.Assert.assertNotNull(superManager16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(booking47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        paymentManager0.paymentMessage = "";
        paymentManager0.paymentMessage = "9701df9a-2178-4ad5-8076-46ff5f05b3e8";
        java.lang.String str15 = paymentManager0.paymentMessage;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "9701df9a-2178-4ad5-8076-46ff5f05b3e8" + "'", str15, "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getUsername();
        java.lang.String str2 = client0.getPassword();
        boolean boolean3 = client0.getIsValidated();
        boolean boolean5 = client0.extendBooking(32);
        boolean boolean6 = client0.cancelBooking();
        java.lang.String str7 = client0.getPassword();
        boolean boolean8 = client0.checkOut();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "jane" + "'", str1, "jane");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        paymentManager0.refundMessage = "disabled";
        boolean boolean10 = paymentManager0.processPayment("", (double) 0L, "Paid $ 10.0 with Mobile Pay", "pass");
        paymentManager0.paymentMessage = "";
        java.lang.String str13 = paymentManager0.refundMessage;
        boolean boolean18 = paymentManager0.processPayment("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (double) 'a', "13b04414-31a5-407f-8ea3-fba4613c73d1", "CLT-2caa2dd4-57bd-417a-ab73-f721cc092df3");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "disabled" + "'", str13, "disabled");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("pass");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        boolean boolean3 = parkingLotIterator2.hasNext();
        boolean boolean4 = parkingLotIterator2.hasNext();
        boolean boolean5 = parkingLotIterator2.hasNext();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.Client client2 = ParkingSystem.Client.getInstance();
        java.lang.String str3 = client2.getName();
        client2.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry7 = parkingSpaceProxy6.getRegistry();
        boolean boolean9 = parkingSpaceProxy6.checkIn("");
        client2.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade11 = parkingSpaceProxy6.getFacade();
        user0.assignProxy(parkingSpaceProxy6);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy13 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry14 = parkingSpaceProxy13.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy16 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj19 = parkingSpaceProxy16.login("empty", "Jane");
        parkingSpaceProxy16.validateClient("Jane");
        parkingSpaceProxy16.toggleSpace("", "staff", false);
        boolean boolean27 = parkingSpaceProxy16.cancelBooking("");
        boolean boolean33 = parkingSpaceProxy16.register("jane", "jane", "Jane", "hi!", "disabled");
        accountRegistry14.assignProxyToManager("empty", parkingSpaceProxy16);
        user0.parkingProxy = parkingSpaceProxy16;
        boolean boolean41 = parkingSpaceProxy16.register("CLT-07d9fe1c-cd89-4d98-a22b-f08722eb0f49", "Paid $ 10.0 with Mobile Pay", "Refunded without deposit ($0.0)", "Refunded total cost of $-1.0", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        java.lang.String str44 = parkingSpaceProxy16.scanSpace("CLT-d2153556-bc61-49e7-b73d-6af2a45e5167", "qMzKSKOI");
        ParkingSystem.Booking booking46 = parkingSpaceProxy16.getBookingDetails("9fJ5pCUl");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(client2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str3, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade11);
        org.junit.Assert.assertNotNull(accountRegistry14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "disabled" + "'", str44, "disabled");
        org.junit.Assert.assertNull(booking46);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager1 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.Booking booking3 = bookingManager0.getBooking("");
        ParkingSystem.SpaceManager spaceManager4 = bookingManager0.getSpaceManager();
        boolean boolean14 = bookingManager0.confirmBooking("disabled", "jane", "Jane", "Jane", (int) ' ', "jane", (int) (short) 100, "", "hi!");
        double double16 = bookingManager0.getDeposit("Paid $ 10.0 with Mobile Pay");
        ParkingSystem.DebitOrCredit debitOrCredit17 = new ParkingSystem.DebitOrCredit();
        bookingManager0.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit17);
        ParkingSystem.CheckInManager checkInManager19 = new ParkingSystem.CheckInManager(bookingManager0);
        ParkingSystem.CheckInManager checkInManager20 = new ParkingSystem.CheckInManager(bookingManager0);
        checkInManager20.refundMessage = "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7";
        java.lang.String str23 = checkInManager20.refundMessage;
        boolean boolean25 = checkInManager20.checkIn("qMzKSKOI");
        checkInManager20.refundMessage = "4CGFxoSEo5";
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 15.0d + "'", double16 == 15.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7" + "'", str23, "CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        spaceManager0.toggleLot("Jane", false);
        spaceManager0.removeBooking("disabled", 10);
        spaceManager0.toggleLot("CLT-30fd593b-dedd-41b3-a919-c48700301f41", false);
        boolean boolean12 = spaceManager0.isSpaceAvailable("Paid $ -1.0 with Mobile Pay", 32);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.Manager manager5 = superManager4.autoGenerateManager();
        manager5.setManagerInfo("Refunded total cost of $1.0", "staff", "");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(manager5);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getClientType();
        java.lang.String str2 = client0.getPassword();
        boolean boolean5 = client0.editBooking("4c45f11e-b09a-4d81-adf1-86cfd519dc3c", (int) (short) 1);
        boolean boolean6 = client0.checkOut();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Refunded total cost of $-1.0" + "'", str1, "Refunded total cost of $-1.0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Refunded without deposit ($0.0)" + "'", str2, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        ParkingSystem.MobilePay mobilePay0 = new ParkingSystem.MobilePay();
        boolean boolean5 = mobilePay0.processPayment("disabled", 10.0d, "disabled", "disabled");
        boolean boolean10 = mobilePay0.processPayment("jane", 15.0d, "jane", "");
        java.lang.String str11 = mobilePay0.getPaymentMessage();
        boolean boolean16 = mobilePay0.processPayment("CLT-df8d594d-9b12-496d-b1b5-eec06c37337a", (double) (byte) 10, "02659ad3-0b5c-4c48-a915-a466f2b50775", "0K5j4sX8PY");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Paid $ 15.0 with Mobile Pay" + "'", str11, "Paid $ 15.0 with Mobile Pay");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        boolean boolean25 = accountRegistry4.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean27 = accountRegistry4.requiresValidation("02659ad3-0b5c-4c48-a915-a466f2b50775");
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap28 = accountRegistry4.getManagers();
        int int29 = accountRegistry4.getManagersSize();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy3 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry4 = parkingSpaceProxy3.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy6 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj9 = parkingSpaceProxy6.login("empty", "Jane");
        parkingSpaceProxy6.validateClient("Jane");
        parkingSpaceProxy6.toggleSpace("", "staff", false);
        accountRegistry4.assignProxyToManager("pass", parkingSpaceProxy6);
        ParkingSystem.Client client18 = accountRegistry4.getClient("");
        ParkingSystem.SuperManager superManager19 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry4);
        ParkingSystem.AccountRegistry accountRegistry20 = superManager19.registry;
        java.lang.String str21 = superManager19.getManagerId();
        java.lang.String str22 = superManager19.getPassword();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager19.registry;
        java.lang.String str24 = superManager19.getName();
        org.junit.Assert.assertNotNull(accountRegistry4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNull(client18);
        org.junit.Assert.assertNotNull(superManager19);
        org.junit.Assert.assertNotNull(accountRegistry20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Refunded without deposit ($0.0)" + "'", str22, "Refunded without deposit ($0.0)");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52" + "'", str24, "CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52");
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        ParkingSystem.AccountRegistry accountRegistry9 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager10 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry9);
        ParkingSystem.AccountRegistry accountRegistry14 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager15 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry14);
        superManager10.registry = accountRegistry14;
        ParkingSystem.SuperManager superManager17 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry14);
        ParkingSystem.SuperManager superManager18 = ParkingSystem.SuperManager.createFromCSV("Paid $ -1.0 with Mobile Pay", "", "Jane", accountRegistry14);
        ParkingSystem.AccountRegistry accountRegistry28 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager29 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry28);
        ParkingSystem.AccountRegistry accountRegistry33 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager34 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry33);
        superManager29.registry = accountRegistry33;
        ParkingSystem.SuperManager superManager36 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry33);
        ParkingSystem.SuperManager superManager37 = ParkingSystem.SuperManager.createFromCSV("Paid $ -1.0 with Mobile Pay", "", "Jane", accountRegistry33);
        superManager18.registry = accountRegistry33;
        superManager18.setManagerInfo("CLT-92729d37-9255-42b4-9361-c1978aadacb0", "CLT-22138484-eb59-490e-9c41-9fd9c319dcda", "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
        org.junit.Assert.assertNotNull(superManager10);
        org.junit.Assert.assertNotNull(superManager15);
        org.junit.Assert.assertNotNull(superManager17);
        org.junit.Assert.assertNotNull(superManager18);
        org.junit.Assert.assertNotNull(superManager29);
        org.junit.Assert.assertNotNull(superManager34);
        org.junit.Assert.assertNotNull(superManager36);
        org.junit.Assert.assertNotNull(superManager37);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        ParkingSystem.Booking booking7 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int8 = booking7.getDuration();
        java.lang.String str9 = booking7.getClientId();
        booking7.setStartTime("hi!");
        booking7.setCheckedIn(true);
        boolean boolean14 = booking7.isCheckedIn();
        booking7.setDuration((int) 'a');
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "staff" + "'", str9, "staff");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        ParkingSystem.ParkingLot parkingLot7 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking9 = null;
        boolean boolean10 = parkingLot7.assignBooking(0, booking9);
        boolean boolean12 = parkingLot7.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking21 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean22 = parkingLot7.assignBooking((int) (short) -1, booking21);
        booking21.setCheckedIn(false);
        double double25 = booking21.getTotalCost();
        boolean boolean26 = parkingLot1.assignBooking((int) (short) 10, booking21);
        booking21.setCheckedIn(false);
        // The following exception was thrown during execution in test generation
        try {
            java.time.LocalTime localTime29 = booking21.getCheckedInDeadline();
            org.junit.Assert.fail("Expected exception of type java.time.format.DateTimeParseException; message: Text 'Jane' could not be parsed at index 0");
        } catch (java.time.format.DateTimeParseException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 1.0d + "'", double25 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.lang.String[] strArray1 = cSVManager0.loadSuperManager();
        java.lang.String[] strArray2 = cSVManager0.loadSuperManager();
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade3 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade3.getSpaceManager();
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap5 = spaceManager4.getParkingLots();
        cSVManager0.saveParkingLots(strMap5);
        ParkingSystem.SpaceManager spaceManager7 = new ParkingSystem.SpaceManager();
        boolean boolean10 = spaceManager7.isSpaceAvailable("hi!", (int) '#');
        spaceManager7.toggleLot("disabled", false);
        ParkingSystem.Booking booking23 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean24 = spaceManager7.assignBooking("empty", (int) (short) 0, booking23);
        spaceManager7.removeBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) '4');
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap28 = spaceManager7.getParkingLots();
        cSVManager0.loadParkingLots(strMap28);
        ParkingSystem.Client client30 = ParkingSystem.Client.getInstance();
        java.lang.String str31 = client30.getClientType();
        boolean boolean39 = client30.confirmBooking("", "pass", (int) (byte) 0, "Paid $ 10.0 with Mobile Pay", (int) (byte) 0, "", "Jane");
        boolean boolean40 = client30.checkOut();
        cSVManager0.saveClient(client30);
        java.lang.String str42 = client30.getUsername();
        org.junit.Assert.assertNotNull(strArray1);
// flaky "41) test2978(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray1, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(strArray2);
// flaky "23) test2978(RegressionTest5)":         org.junit.Assert.assertArrayEquals(strArray2, new java.lang.String[] { "SMGR-1\tsuperuser\tsuperpass" });
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(client30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str31, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Refunded total cost of $1.0" + "'", str42, "Refunded total cost of $1.0");
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade17 = parkingSpaceProxy9.getFacade();
        boolean boolean19 = parkingSpaceFacade17.checkOut("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        parkingSpaceFacade17.toggleLot("Paid $ 10.0 with Mobile Pay", true);
        boolean boolean25 = parkingSpaceFacade17.extendBooking("89de8237-29df-4908-9de4-6dc1ce90de94", (int) (byte) -1);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(parkingSpaceFacade17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        java.lang.String str6 = spaceManager0.scanSpace("disabled", "");
        spaceManager0.toggleSpace("Refunded without deposit ($0.0)", "disabled", false);
        spaceManager0.removeBooking("qPYDfDnbtD", (int) (byte) 1);
        spaceManager0.removeBooking("7aecb00c-028c-4dcf-96cc-14d25bd709ab", (int) (byte) 100);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap17 = spaceManager0.getParkingLots();
        boolean boolean20 = spaceManager0.isSpaceAvailable("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca", (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "disabled" + "'", str6, "disabled");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        ParkingSystem.SpaceManager spaceManager0 = new ParkingSystem.SpaceManager();
        boolean boolean3 = spaceManager0.isSpaceAvailable("hi!", (int) '#');
        spaceManager0.toggleLot("disabled", false);
        java.lang.String str9 = spaceManager0.scanSpace("Paid $ 10.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay");
        java.lang.String str12 = spaceManager0.scanSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "Card number should be 16 digits");
        boolean boolean15 = spaceManager0.isSpaceAvailable("Refunded total cost of $100.0", (int) (byte) 0);
        ParkingSystem.Booking booking25 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        int int26 = booking25.getDuration();
        java.lang.String str27 = booking25.getClientId();
        booking25.setStartTime("hi!");
        boolean boolean30 = booking25.isCheckedIn();
        java.lang.String str31 = booking25.getLotId();
        int int32 = booking25.getDuration();
        boolean boolean33 = spaceManager0.assignBooking("13b04414-31a5-407f-8ea3-fba4613c73d1", (int) (short) 1, booking25);
        spaceManager0.addParkingLot("jane");
        ParkingSystem.ParkingLot parkingLot39 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking41 = null;
        boolean boolean42 = parkingLot39.assignBooking(0, booking41);
        boolean boolean44 = parkingLot39.isSpaceAvailable((int) '#');
        ParkingSystem.Booking booking53 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean54 = parkingLot39.assignBooking((int) (short) -1, booking53);
        booking53.setCheckedIn(false);
        double double57 = booking53.getTotalCost();
        java.lang.String str58 = booking53.getLicensePlate();
        double double59 = booking53.getTotalCost();
        boolean boolean60 = spaceManager0.assignBooking("721fcb72-c57d-4e99-81b7-06e4c7e1ed40", 52, booking53);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "disabled" + "'", str9, "disabled");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "disabled" + "'", str12, "disabled");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "staff" + "'", str27, "staff");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "jane" + "'", str31, "jane");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1.0d + "'", double57 == 1.0d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "disabled" + "'", str58, "disabled");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 1.0d + "'", double59 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) (byte) 10);
        int int11 = parkingSpace10.getSpaceId();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        java.lang.String str13 = parkingSpace10.scanSpace();
        ParkingSystem.Enabled enabled14 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled14);
        ParkingSystem.Enabled enabled16 = new ParkingSystem.Enabled();
        parkingSpace10.setState((ParkingSystem.SpaceState) enabled16);
        ParkingSystem.ParkingLot parkingLot19 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator20 = parkingLot19.getIterator();
        ParkingSystem.Booking booking22 = null;
        boolean boolean23 = parkingLot19.assignBooking((int) (short) 1, booking22);
        parkingLot19.removeBooking((int) (short) 0);
        parkingLot19.removeBooking(10);
        ParkingSystem.ParkingSpace parkingSpace29 = parkingLot19.getParkingSpace(32);
        java.lang.String str30 = enabled16.scanSpace(parkingSpace29);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "empty" + "'", str13, "empty");
        org.junit.Assert.assertNotNull(parkingLotIterator20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(parkingSpace29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "empty" + "'", str30, "empty");
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        ParkingSystem.CSVManager cSVManager0 = new ParkingSystem.CSVManager();
        java.util.List<java.lang.String[]> strArrayList2 = cSVManager0.readCSV("");
        cSVManager0.updateClientValidation("pass", false);
        java.util.Map<java.lang.String, ParkingSystem.ParkingLot> strMap6 = null;
        cSVManager0.loadParkingLots(strMap6);
        ParkingSystem.Client client8 = ParkingSystem.Client.getInstance();
        java.lang.String str9 = client8.getClientType();
        cSVManager0.saveClient(client8);
        client8.setClientInfo("13b04414-31a5-407f-8ea3-fba4613c73d1", "12fea0ad-7859-47d9-95f1-1985d2c4ed33", "5XQfkf24zK", "fhd49ADb", "0b35479f-5869-423e-9abc-e4ab9cef903d", "SRiN5ev00N", false);
        org.junit.Assert.assertNotNull(strArrayList2);
        org.junit.Assert.assertNotNull(client8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str9, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("pass");
        parkingLot1.removeBooking(0);
        ParkingSystem.ParkingLot parkingLot6 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking8 = null;
        boolean boolean9 = parkingLot6.assignBooking(0, booking8);
        boolean boolean11 = parkingLot6.isSpaceAvailable((int) '#');
        boolean boolean13 = parkingLot6.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace15 = parkingLot6.getParkingSpace((int) (byte) 10);
        int int16 = parkingSpace15.getSpaceId();
        ParkingSystem.Booking booking17 = parkingSpace15.getCurrentBooking();
        ParkingSystem.SpaceManager spaceManager18 = new ParkingSystem.SpaceManager();
        boolean boolean21 = spaceManager18.isSpaceAvailable("hi!", (int) '#');
        spaceManager18.toggleLot("disabled", false);
        ParkingSystem.Booking booking34 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean35 = spaceManager18.assignBooking("empty", (int) (short) 0, booking34);
        boolean boolean36 = parkingSpace15.assignBooking(booking34);
        ParkingSystem.SpaceManager spaceManager37 = new ParkingSystem.SpaceManager();
        boolean boolean40 = spaceManager37.isSpaceAvailable("hi!", (int) '#');
        spaceManager37.toggleLot("disabled", false);
        ParkingSystem.Booking booking53 = new ParkingSystem.Booking("staff", "jane", (int) (short) -1, "Jane", (int) ' ', "disabled", (double) (byte) 1);
        boolean boolean54 = spaceManager37.assignBooking("empty", (int) (short) 0, booking53);
        boolean boolean55 = booking53.isCheckedIn();
        java.lang.String str56 = booking53.getClientId();
        boolean boolean57 = parkingSpace15.assignBooking(booking53);
        boolean boolean58 = parkingLot1.assignBooking((int) 'a', booking53);
        java.lang.String str59 = booking53.getLicensePlate();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(parkingSpace15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNull(booking17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "staff" + "'", str56, "staff");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "disabled" + "'", str59, "disabled");
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable(0);
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLot1.getParkingSpace((int) ' ');
        parkingLot1.setEnabled(false);
        parkingLot1.setEnabled(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingSpace10);
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Refunded total cost of $1.0", false);
        ParkingSystem.SpaceManager spaceManager8 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleLot("Paid $ 100.0 with Mobile Pay", false);
        boolean boolean21 = parkingSpaceFacade0.confirmBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "4a1f2343-8b2e-4dea-ba69-efd105414390", "06b0adae-5a80-41cd-b7f6-6da51afdd4f5", "", (int) (byte) 1, "pass", (int) (byte) 10, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "Paid $ 100.0 with Mobile Pay");
        ParkingSystem.BookingManager bookingManager22 = parkingSpaceFacade0.getBookingManager();
        double double24 = bookingManager22.getDeposit("e578d6f7-8a26-46f0-8e2f-f3b1be5242ca");
        ParkingSystem.BookingManager bookingManager25 = new ParkingSystem.BookingManager();
        ParkingSystem.CheckInManager checkInManager26 = new ParkingSystem.CheckInManager(bookingManager25);
        ParkingSystem.SpaceManager spaceManager27 = bookingManager25.getSpaceManager();
        double double30 = bookingManager25.calculateCost("", (int) (byte) 10);
        ParkingSystem.DebitOrCredit debitOrCredit31 = new ParkingSystem.DebitOrCredit();
        bookingManager25.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean37 = debitOrCredit31.processPayment("jane", (double) '#', "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "jane");
        java.lang.String str38 = debitOrCredit31.getPaymentMessage();
        boolean boolean43 = debitOrCredit31.processPayment("Paid $ 0.0 with Mobile Pay", 30.0d, "Paid $ -1.0 with Mobile Pay", "Paid $ 0.0 with Mobile Pay");
        boolean boolean46 = debitOrCredit31.validateCard("Jane", (double) '4');
        java.lang.String str47 = debitOrCredit31.getPaymentMessage();
        bookingManager22.setPaymentStrategy((ParkingSystem.Strategy) debitOrCredit31);
        boolean boolean53 = debitOrCredit31.processPayment("disabled", 0.0d, "lL3e2yIMXI", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertNotNull(spaceManager8);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bookingManager22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 15.0d + "'", double24 == 15.0d);
        org.junit.Assert.assertNotNull(spaceManager27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 165.0d + "'", double30 == 165.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Card number should be 16 digits" + "'", str38, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Card number should be 16 digits" + "'", str47, "Card number should be 16 digits");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        ParkingSystem.AccountRegistry accountRegistry8 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager9 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry8);
        superManager4.registry = accountRegistry8;
        ParkingSystem.Client client12 = accountRegistry8.getClient("empty");
        accountRegistry8.validateClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        java.lang.Object obj17 = accountRegistry8.login("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "staff");
        ParkingSystem.AccountRegistry accountRegistry22 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager23 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry22);
        ParkingSystem.AccountRegistry accountRegistry27 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager28 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry27);
        superManager23.registry = accountRegistry27;
        ParkingSystem.Manager manager30 = superManager23.autoGenerateManager();
        java.lang.String str31 = manager30.getManagerId();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry36 = parkingSpaceProxy35.getRegistry();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy38 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj41 = parkingSpaceProxy38.login("empty", "Jane");
        parkingSpaceProxy38.validateClient("Jane");
        parkingSpaceProxy38.toggleSpace("", "staff", false);
        accountRegistry36.assignProxyToManager("pass", parkingSpaceProxy38);
        ParkingSystem.Client client50 = accountRegistry36.getClient("");
        ParkingSystem.SuperManager superManager51 = ParkingSystem.SuperManager.createFromCSV("", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry36);
        boolean boolean57 = accountRegistry36.registerClient("hi!", "Refunded total cost of $1.0", "2afd610d-a8cb-413a-bbee-7927f86b526c", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy59 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry60 = parkingSpaceProxy59.getRegistry();
        boolean boolean62 = parkingSpaceProxy59.checkIn("");
        parkingSpaceProxy59.toggleLot("", true);
        accountRegistry36.assignProxyToManager("", parkingSpaceProxy59);
        manager30.assignProxy(parkingSpaceProxy59);
        boolean boolean71 = parkingSpaceProxy59.editBooking("CLT-5ea5e3c6-5e7b-4ad6-9ff4-2cb4f2bc1fe5", "CLT-30fd593b-dedd-41b3-a919-c48700301f41", (int) (short) 10);
        accountRegistry8.assignProxyToClient("CLT-b6a8264c-f386-4429-b59c-b7f465002e13", parkingSpaceProxy59);
        accountRegistry8.validateClient("CLT-0173ebd7-c50a-4d20-8ab3-f6039f068cff");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(superManager9);
        org.junit.Assert.assertNull(client12);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(superManager23);
        org.junit.Assert.assertNotNull(superManager28);
        org.junit.Assert.assertNotNull(manager30);
// flaky "42) test2987(RegressionTest5)":         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "7a3de84e-e9eb-49bb-a693-2de651c058e6" + "'", str31, "7a3de84e-e9eb-49bb-a693-2de651c058e6");
        org.junit.Assert.assertNotNull(accountRegistry36);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(client50);
        org.junit.Assert.assertNotNull(superManager51);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(accountRegistry60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        boolean boolean13 = accountRegistry3.registerClient("jane", "", "", "Paid $ 10.0 with Mobile Pay", "staff");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy15 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj18 = parkingSpaceProxy15.login("empty", "Jane");
        parkingSpaceProxy15.validateClient("Jane");
        parkingSpaceProxy15.toggleSpace("", "staff", false);
        boolean boolean26 = parkingSpaceProxy15.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy15);
        parkingSpaceProxy15.autoGenerateManager();
        parkingSpaceProxy15.toggleSpace("Paid $ 100.0 with Mobile Pay", "Jane", true);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade33 = parkingSpaceProxy15.getFacade();
        boolean boolean35 = parkingSpaceFacade33.checkOut("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean37 = parkingSpaceFacade33.cancelBooking("Jane");
        boolean boolean40 = parkingSpaceFacade33.extendBooking("jane", (int) ' ');
        ParkingSystem.SpaceManager spaceManager41 = parkingSpaceFacade33.getSpaceManager();
        boolean boolean51 = parkingSpaceFacade33.confirmBooking("CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa", "CLT-035180a0-4707-410d-a011-2a4f0f46838b", "7aecb00c-028c-4dcf-96cc-14d25bd709ab", "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", (int) '#', "Paid $ -1.0 with Mobile Pay", (int) (short) -1, "CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f", "2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean53 = parkingSpaceFacade33.checkOut("Paid $ 10.0 with Mobile Pay");
        boolean boolean63 = parkingSpaceFacade33.confirmBooking("TXCrKOGD", "qMzKSKOI", "jane", "Paid $ 1.0 with Mobile Pay", (int) (short) 100, "7aecb00c-028c-4dcf-96cc-14d25bd709ab", 0, "Paid $ -1.0 with Mobile Pay", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        boolean boolean67 = parkingSpaceFacade33.editBooking("CLT-d7ac7477-2083-415e-84c8-8e0763f03efc", "25527a32-01ef-45ba-816a-1d0a2fc2a52d", (int) (short) 10);
        parkingSpaceFacade33.addParkingLot("13b04414-31a5-407f-8ea3-fba4613c73d1");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(spaceManager41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        boolean boolean6 = accountRegistry3.requiresValidation("disabled");
        int int7 = accountRegistry3.getManagersSize();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        java.lang.Object obj12 = parkingSpaceProxy9.login("empty", "Jane");
        parkingSpaceProxy9.validateClient("Jane");
        parkingSpaceProxy9.toggleSpace("", "staff", false);
        boolean boolean20 = parkingSpaceProxy9.cancelBooking("Jane");
        accountRegistry3.assignProxyToClient("pass", parkingSpaceProxy9);
        boolean boolean27 = parkingSpaceProxy9.register("Jane", "Paid $ -1.0 with Mobile Pay", "Paid $ 10.0 with Mobile Pay", "", "Refunded total cost of $1.0");
        boolean boolean33 = parkingSpaceProxy9.register("7aecb00c-028c-4dcf-96cc-14d25bd709ab", "jane", "", "jane", "CLT-84172690-12e5-43e4-8a26-14753ff3c6e3");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade34 = parkingSpaceProxy9.getFacade();
        ParkingSystem.CheckInManager checkInManager35 = parkingSpaceFacade34.getCheckInManager();
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(parkingSpaceFacade34);
        org.junit.Assert.assertNotNull(checkInManager35);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        ParkingSystem.User user0 = new ParkingSystem.User();
        java.lang.Object obj1 = user0.user;
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy2 = user0.parkingProxy;
        ParkingSystem.User user3 = new ParkingSystem.User();
        java.lang.Object obj4 = user3.user;
        ParkingSystem.Client client5 = ParkingSystem.Client.getInstance();
        java.lang.String str6 = client5.getName();
        client5.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy9 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry10 = parkingSpaceProxy9.getRegistry();
        boolean boolean12 = parkingSpaceProxy9.checkIn("");
        client5.assignProxy(parkingSpaceProxy9);
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade14 = parkingSpaceProxy9.getFacade();
        user3.assignProxy(parkingSpaceProxy9);
        user0.parkingProxy = parkingSpaceProxy9;
        ParkingSystem.AccountRegistry accountRegistry20 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager21 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry20);
        java.lang.String str22 = superManager21.getManagerId();
        ParkingSystem.AccountRegistry accountRegistry23 = superManager21.registry;
        java.lang.String str24 = superManager21.getManagerId();
        ParkingSystem.Client client25 = ParkingSystem.Client.getInstance();
        java.lang.String str26 = client25.getName();
        client25.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy29 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry30 = parkingSpaceProxy29.getRegistry();
        boolean boolean32 = parkingSpaceProxy29.checkIn("");
        client25.assignProxy(parkingSpaceProxy29);
        boolean boolean34 = client25.cancelBooking();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        client25.assignProxy(parkingSpaceProxy35);
        superManager21.assignProxy(parkingSpaceProxy35);
        user0.assignProxy(parkingSpaceProxy35);
        ParkingSystem.AccountRegistry accountRegistry39 = parkingSpaceProxy35.getRegistry();
        java.lang.String str42 = parkingSpaceProxy35.scanSpace("CLT-84172690-12e5-43e4-8a26-14753ff3c6e3", "");
        boolean boolean45 = parkingSpaceProxy35.extendBooking("CLT-2c703e7f-c82c-4d1c-a76c-41c5a1c52bf7", (int) (byte) 1);
        ParkingSystem.Booking booking47 = parkingSpaceProxy35.getBookingDetails("Refunded total cost of $100.0");
        boolean boolean49 = parkingSpaceProxy35.checkOut("CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(parkingSpaceProxy2);
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(client5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str6, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parkingSpaceFacade14);
        org.junit.Assert.assertNotNull(superManager21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CLT-92729d37-9255-42b4-9361-c1978aadacb0" + "'", str22, "CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        org.junit.Assert.assertNotNull(accountRegistry23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "CLT-92729d37-9255-42b4-9361-c1978aadacb0" + "'", str24, "CLT-92729d37-9255-42b4-9361-c1978aadacb0");
        org.junit.Assert.assertNotNull(client25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "7aecb00c-028c-4dcf-96cc-14d25bd709ab" + "'", str26, "7aecb00c-028c-4dcf-96cc-14d25bd709ab");
        org.junit.Assert.assertNotNull(accountRegistry30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(accountRegistry39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "disabled" + "'", str42, "disabled");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(booking47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        ParkingSystem.BookingManager bookingManager0 = new ParkingSystem.BookingManager();
        double double3 = bookingManager0.calculateCost("", 0);
        ParkingSystem.Booking booking5 = bookingManager0.getBooking("");
        double double7 = bookingManager0.getDeposit("staff");
        boolean boolean11 = bookingManager0.editBooking("", "Paid $ -1.0 with Mobile Pay", (int) 'a');
        boolean boolean15 = bookingManager0.editBooking("jane", "pass", (int) '4');
        boolean boolean17 = bookingManager0.cancelBooking("CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        ParkingSystem.Booking booking19 = bookingManager0.getBooking("9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        boolean boolean23 = bookingManager0.editBooking("CLT-c3ce9a25-7555-430c-9330-9203c36530f8", "jane", 0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15.0d + "'", double3 == 15.0d);
        org.junit.Assert.assertNull(booking5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(booking19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy0 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry1 = parkingSpaceProxy0.getRegistry();
        ParkingSystem.AccountRegistry accountRegistry2 = parkingSpaceProxy0.getRegistry();
        boolean boolean8 = accountRegistry2.registerClient("CLT-30fd593b-dedd-41b3-a919-c48700301f41", "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04", "Card number should be 16 digits", "09622cbf-e665-45db-b1ad-365065947a20", "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertNotNull(accountRegistry1);
        org.junit.Assert.assertNotNull(accountRegistry2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        ParkingSystem.AccountRegistry accountRegistry6 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager7 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry6);
        ParkingSystem.AccountRegistry accountRegistry11 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager12 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry11);
        superManager7.registry = accountRegistry11;
        ParkingSystem.SuperManager superManager14 = ParkingSystem.SuperManager.createFromCSV("pass", "empty", "Paid $ -1.0 with Mobile Pay", accountRegistry11);
        ParkingSystem.AccountRegistry accountRegistry15 = superManager14.getRegistry();
        java.lang.String str16 = superManager14.getPassword();
        org.junit.Assert.assertNotNull(superManager7);
        org.junit.Assert.assertNotNull(superManager12);
        org.junit.Assert.assertNotNull(superManager14);
        org.junit.Assert.assertNotNull(accountRegistry15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786" + "'", str16, "CLT-5be1cd5a-d829-4101-9cd3-6006338eb786");
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        ParkingSystem.CheckInManager checkInManager1 = parkingSpaceFacade0.getCheckInManager();
        ParkingSystem.Booking booking3 = parkingSpaceFacade0.getBookingDetails("Paid $ 100.0 with Mobile Pay");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        boolean boolean7 = spaceManager4.isSpaceAvailable("Refunded without deposit ($-42.0)", 35);
        org.junit.Assert.assertNotNull(checkInManager1);
        org.junit.Assert.assertNull(booking3);
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.Booking booking3 = null;
        boolean boolean4 = parkingLot1.assignBooking(0, booking3);
        boolean boolean6 = parkingLot1.isSpaceAvailable((int) '#');
        boolean boolean8 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingLotIterator parkingLotIterator9 = parkingLot1.getIterator();
        ParkingSystem.ParkingSpace parkingSpace10 = parkingLotIterator9.next();
        parkingSpace10.removeBooking();
        ParkingSystem.Booking booking12 = parkingSpace10.getCurrentBooking();
        int int13 = parkingSpace10.getSpaceId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(parkingLotIterator9);
        org.junit.Assert.assertNotNull(parkingSpace10);
        org.junit.Assert.assertNull(booking12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        ParkingSystem.ParkingSpaceFacade parkingSpaceFacade0 = new ParkingSystem.ParkingSpaceFacade();
        java.lang.String str3 = parkingSpaceFacade0.scanSpace("disabled", "empty");
        ParkingSystem.SpaceManager spaceManager4 = parkingSpaceFacade0.getSpaceManager();
        parkingSpaceFacade0.toggleSpace("Refunded total cost of $-1.0", "disabled", true);
        parkingSpaceFacade0.addParkingLot("CLT-d45cbb33-f273-4b7c-a70f-0ed3be87451f");
        parkingSpaceFacade0.addParkingLot("2afd610d-a8cb-413a-bbee-7927f86b526c");
        boolean boolean16 = parkingSpaceFacade0.editBooking("8ca2ec61-774c-409d-89d5-5b9171b40497", "9fJ5pCUl", (int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "disabled" + "'", str3, "disabled");
        org.junit.Assert.assertNotNull(spaceManager4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        ParkingSystem.ParkingLot parkingLot1 = new ParkingSystem.ParkingLot("hi!");
        ParkingSystem.ParkingLotIterator parkingLotIterator2 = parkingLot1.getIterator();
        ParkingSystem.Booking booking4 = null;
        boolean boolean5 = parkingLot1.assignBooking((int) (short) 1, booking4);
        parkingLot1.removeBooking((int) (short) 0);
        boolean boolean9 = parkingLot1.isSpaceAvailable((int) (short) 10);
        ParkingSystem.ParkingSpace parkingSpace11 = parkingLot1.getParkingSpace((int) (byte) 100);
        int int12 = parkingSpace11.getSpaceId();
        org.junit.Assert.assertNotNull(parkingLotIterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(parkingSpace11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        ParkingSystem.Client client0 = ParkingSystem.Client.getInstance();
        java.lang.String str1 = client0.getName();
        client0.setValidated(true);
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy4 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry5 = parkingSpaceProxy4.getRegistry();
        boolean boolean7 = parkingSpaceProxy4.checkIn("");
        client0.assignProxy(parkingSpaceProxy4);
        boolean boolean9 = client0.cancelBooking();
        java.lang.String str10 = client0.getExtraId();
        java.lang.String str11 = client0.getName();
        java.lang.String str12 = client0.getName();
        boolean boolean13 = client0.checkIn();
        java.lang.String str14 = client0.getPassword();
        java.lang.String str15 = client0.getUsername();
        java.lang.String str16 = client0.getPassword();
        org.junit.Assert.assertNotNull(client0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str1, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertNotNull(accountRegistry5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa" + "'", str10, "CLT-80eb5e7b-8816-4a02-9591-2ca1a19558fa");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str11, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "CLT-30fd593b-dedd-41b3-a919-c48700301f41" + "'", str12, "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Card number should be 16 digits" + "'", str14, "Card number should be 16 digits");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04" + "'", str15, "CLT-23b57c8a-84c7-41fe-9781-bfe8a8f3fc04");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Card number should be 16 digits" + "'", str16, "Card number should be 16 digits");
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        ParkingSystem.PaymentManager paymentManager0 = new ParkingSystem.PaymentManager();
        java.lang.String str1 = paymentManager0.refundMessage;
        boolean boolean3 = paymentManager0.refundTotalCost((-1.0d));
        ParkingSystem.MobilePay mobilePay4 = new ParkingSystem.MobilePay();
        boolean boolean9 = mobilePay4.processPayment("hi!", (-1.0d), "", "");
        boolean boolean14 = mobilePay4.processPayment("staff", (double) (-1L), "disabled", "pass");
        paymentManager0.setStrategy((ParkingSystem.Strategy) mobilePay4);
        paymentManager0.refundMessage = "Jane";
        boolean boolean19 = paymentManager0.refundDeposit((double) (short) 1);
        boolean boolean21 = paymentManager0.refundDeposit((double) (-1.0f));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        ParkingSystem.AccountRegistry accountRegistry3 = new ParkingSystem.AccountRegistry();
        ParkingSystem.SuperManager superManager4 = ParkingSystem.SuperManager.createFromCSV("", "", "disabled", accountRegistry3);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap5 = accountRegistry3.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy7 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.AccountRegistry accountRegistry8 = parkingSpaceProxy7.getRegistry();
        java.lang.String str11 = parkingSpaceProxy7.scanSpace("empty", "hi!");
        boolean boolean21 = parkingSpaceProxy7.confirmBooking("Paid $ -1.0 with Mobile Pay", "staff", "hi!", "hi!", (-1), "Paid $ 10.0 with Mobile Pay", 10, "jane", "CLT-30fd593b-dedd-41b3-a919-c48700301f41");
        parkingSpaceProxy7.toggleSpace("9701df9a-2178-4ad5-8076-46ff5f05b3e8", "", true);
        boolean boolean31 = parkingSpaceProxy7.register("jane", "Paid $ -1.0 with Mobile Pay", "Refunded without deposit ($0.0)", "disabled", "Refunded total cost of $1.0");
        accountRegistry3.assignProxyToManager("7aecb00c-028c-4dcf-96cc-14d25bd709ab", parkingSpaceProxy7);
        java.util.Map<java.lang.String, ParkingSystem.Manager> strMap33 = accountRegistry3.getManagers();
        ParkingSystem.ParkingSpaceProxy parkingSpaceProxy35 = new ParkingSystem.ParkingSpaceProxy();
        ParkingSystem.Booking booking37 = parkingSpaceProxy35.getBookingDetails("Paid $ -1.0 with Mobile Pay");
        ParkingSystem.AccountRegistry accountRegistry38 = parkingSpaceProxy35.getRegistry();
        java.lang.String str41 = parkingSpaceProxy35.scanSpace("staff", "9701df9a-2178-4ad5-8076-46ff5f05b3e8");
        ParkingSystem.Booking booking43 = parkingSpaceProxy35.getBookingDetails("ST001");
        accountRegistry3.assignProxyToClient("CLT-270f1c6f-0e01-426b-8fb3-6944808f1f52", parkingSpaceProxy35);
        boolean boolean50 = accountRegistry3.registerClient("qMzKSKOI", "qPYDfDnbtD", "e8686ac8-1df7-4a9b-b299-8fbcdd585528", "aswfJGJtdF", "Refunded without deposit ($-42.0)");
        org.junit.Assert.assertNotNull(superManager4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(accountRegistry8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "disabled" + "'", str11, "disabled");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(booking37);
        org.junit.Assert.assertNotNull(accountRegistry38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "disabled" + "'", str41, "disabled");
        org.junit.Assert.assertNull(booking43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }
}
